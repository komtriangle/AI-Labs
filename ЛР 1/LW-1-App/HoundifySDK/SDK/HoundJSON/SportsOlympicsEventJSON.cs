/* file "SportsOlympicsEventJSON.cs" */

/* Generated automatically by Classy JSON. */


using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using System.IO;


public class SportsOlympicsEventJSON : JSONBase
  {
    public enum TypeValueKnownValues
      {
        Value_AlpineSkiingMensDownhill,
        Value_AlpineSkiingMensSuperG,
        Value_AlpineSkiingMensGiantSlalom,
        Value_AlpineSkiingMensSlalom,
        Value_AlpineSkiingMensCombined,
        Value_AlpineSkiingWomensDownhill,
        Value_AlpineSkiingWomensSuperG,
        Value_AlpineSkiingWomensGiantSlalom,
        Value_AlpineSkiingWomensSlalom,
        Value_AlpineSkiingWomensCombined,
        Value_AlpineSkiingMixedTeam,
        Value_BiathlonMensIndividual,
        Value_BiathlonMensSprint,
        Value_BiathlonMensPursuit,
        Value_BiathlonMensMassStart,
        Value_BiathlonMensRelay,
        Value_BiathlonMensMilitaryPatrol,
        Value_BiathlonWomensIndividual,
        Value_BiathlonWomensSprint,
        Value_BiathlonWomensPursuit,
        Value_BiathlonWomensMassStart,
        Value_BiathlonWomensRelay,
        Value_BiathlonMixedRelay,
        Value_BobsleighMensTwo,
        Value_BobsleighMensFour,
        Value_BobsleighWomensTwo,
        Value_BobsleighWomensMonobob,
        Value_CrossCountrySkiingMens10KMClassical,
        Value_CrossCountrySkiingMens15KMClassical,
        Value_CrossCountrySkiingMens18KM,
        Value_CrossCountrySkiingMens30KMSkiathlon,
        Value_CrossCountrySkiingMens50KMFreestyle,
        Value_CrossCountrySkiingMens4X10KMRelay,
        Value_CrossCountrySkiingMens2X10KMPursuit,
        Value_CrossCountrySkiingMensSprint,
        Value_CrossCountrySkiingMensTeamSprint,
        Value_CrossCountrySkiingWomens5KM,
        Value_CrossCountrySkiingWomens10KMClassical,
        Value_CrossCountrySkiingWomens15KMSkiathlon,
        Value_CrossCountrySkiingWomens20KM,
        Value_CrossCountrySkiingWomens30KMFreestyle,
        Value_CrossCountrySkiingWomens4X5KMRelay,
        Value_CrossCountrySkiingWomens2X5KMPursuit,
        Value_CrossCountrySkiingWomensSprint,
        Value_CrossCountrySkiingWomensTeamSprint,
        Value_CurlingMens,
        Value_CurlingWomens,
        Value_CurlingMixedDoubles,
        Value_FigureSkatingMensSingles,
        Value_FigureSkatingWomensSingles,
        Value_FigureSkatingPair,
        Value_FigureSkatingIceDancing,
        Value_FigureSkatingTeamTrophy,
        Value_FreestyleSkiingMensAerials,
        Value_FreestyleSkiingMensHalfpipe,
        Value_FreestyleSkiingMensMoguls,
        Value_FreestyleSkiingMensSlopestyle,
        Value_FreestyleSkiingMensSkiCross,
        Value_FreestyleSkiingMensBigAir,
        Value_FreestyleSkiingWomensAerials,
        Value_FreestyleSkiingWomensHalfpipe,
        Value_FreestyleSkiingWomensMoguls,
        Value_FreestyleSkiingWomensSlopestyle,
        Value_FreestyleSkiingWomensSkiCross,
        Value_FreestyleSkiingWomensBigAir,
        Value_FreestyleSkiingMixedTeamAerials,
        Value_IceHockeyMens,
        Value_IceHockeyWomens,
        Value_LugeMensSingles,
        Value_LugeWomensSingles,
        Value_LugeDoubles,
        Value_LugeTeamRelay,
        Value_NordicCombinedIndividualLargeHill10KM,
        Value_NordicCombinedIndividualNormalHill10KM,
        Value_NordicCombinedTeamLargeHill4X5KM,
        Value_ShortTrackSpeedSkatingMens500M,
        Value_ShortTrackSpeedSkatingMens1000M,
        Value_ShortTrackSpeedSkatingMens1500M,
        Value_ShortTrackSpeedSkatingMens5000MRelay,
        Value_ShortTrackSpeedSkatingWomens500M,
        Value_ShortTrackSpeedSkatingWomens1000M,
        Value_ShortTrackSpeedSkatingWomens1500M,
        Value_ShortTrackSpeedSkatingWomens3000MRelay,
        Value_ShortTrackSpeedSkatingMixed2000MRelay,
        Value_SkeletonMens,
        Value_SkeletonWomens,
        Value_SkiJumpingMensIndividualNormalHill,
        Value_SkiJumpingMensIndividualLargeHill,
        Value_SkiJumpingMensTeamLargeHill,
        Value_SkiJumpingWomensIndividualNormalHill,
        Value_SkiJumpingMixedTeamNormalHill,
        Value_SnowboardingMensParallelSlalom,
        Value_SnowboardingMensParallelGiantSlalom,
        Value_SnowboardingMensHalfpipe,
        Value_SnowboardingMensSlopestyle,
        Value_SnowboardingMensSnowboardCross,
        Value_SnowboardingMensBigAir,
        Value_SnowboardingWomensParallelSlalom,
        Value_SnowboardingWomensParallelGiantSlalom,
        Value_SnowboardingWomensHalfpipe,
        Value_SnowboardingWomensSlopestyle,
        Value_SnowboardingWomensSnowboardCross,
        Value_SnowboardingWomensBigAir,
        Value_SnowboardingMixedTeamSnowboardCross,
        Value_SpeedSkatingMens500M,
        Value_SpeedSkatingMens1000M,
        Value_SpeedSkatingMens1500M,
        Value_SpeedSkatingMens5000M,
        Value_SpeedSkatingMens10000M,
        Value_SpeedSkatingMensTeamPursuit,
        Value_SpeedSkatingMensMassStart,
        Value_SpeedSkatingMensAllRound,
        Value_SpeedSkatingWomens500M,
        Value_SpeedSkatingWomens1000M,
        Value_SpeedSkatingWomens1500M,
        Value_SpeedSkatingWomens3000M,
        Value_SpeedSkatingWomens5000M,
        Value_SpeedSkatingWomensTeamPursuit,
        Value_SpeedSkatingWomensMassStart,
        Value_ArcheryMensIndividual,
        Value_ArcheryMensTeam,
        Value_ArcheryWomensIndividual,
        Value_ArcheryWomensTeam,
        Value_ArcheryMixedTeam,
        Value_ArtisticSwimmingWomensDuet,
        Value_ArtisticSwimmingWomensTeam,
        Value_ArtisticSwimmingWomensSolo,
        Value_AthleticsMens100M,
        Value_AthleticsMens200M,
        Value_AthleticsMens400M,
        Value_AthleticsMens800M,
        Value_AthleticsMens1500M,
        Value_AthleticsMens5000M,
        Value_AthleticsMens10000M,
        Value_AthleticsMensHurdles110M,
        Value_AthleticsMensHurdles400M,
        Value_AthleticsMensSteeplechase3000M,
        Value_AthleticsMens4X100MRelay,
        Value_AthleticsMens4X400MRelay,
        Value_AthleticsMensMarathon,
        Value_AthleticsMensWalk20KM,
        Value_AthleticsMensWalk50KM,
        Value_AthleticsMensHighJump,
        Value_AthleticsMensPoleVault,
        Value_AthleticsMensLongJump,
        Value_AthleticsMensTripleJump,
        Value_AthleticsMensShotPut,
        Value_AthleticsMensDiscusThrow,
        Value_AthleticsMensHammerThrow,
        Value_AthleticsMensJavelinThrow,
        Value_AthleticsMensDecathlon,
        Value_AthleticsWomens100M,
        Value_AthleticsWomens200M,
        Value_AthleticsWomens400M,
        Value_AthleticsWomens800M,
        Value_AthleticsWomens1500M,
        Value_AthleticsWomens3000M,
        Value_AthleticsWomens5000M,
        Value_AthleticsWomens10000M,
        Value_AthleticsWomensHurdles100M,
        Value_AthleticsWomenshurdles400M,
        Value_AthleticsWomensSteeplechase3000M,
        Value_AthleticsWomens4X100MRelay,
        Value_AthleticsWomens4X400MRelay,
        Value_AthleticsWomensMarathon,
        Value_AthleticsWomensWalk10KM,
        Value_AthleticsWomensWalk20KM,
        Value_AthleticsWomensHighJump,
        Value_AthleticsWomensPoleVault,
        Value_AthleticsWomensLongJump,
        Value_AthleticsWomensTripleJump,
        Value_AthleticsWomensShotPut,
        Value_AthleticsWomensDiscusThrow,
        Value_AthleticsWomensHammerThrow,
        Value_AthleticsWomensJavelinThrow,
        Value_AthleticsWomensHeptathlon,
        Value_AthleticsMixed4X400MRelay,
        Value_BadmintonMensSingles,
        Value_BadmintonMensDoubles,
        Value_BadmintonWomensSingles,
        Value_BadmintonWomensDoubles,
        Value_BadmintonMixedDoubles,
        Value_BaseballMens,
        Value_BasketballMens,
        Value_BasketballWomens,
        Value_BasketballMens3x3,
        Value_BasketballWomens3x3,
        Value_BoxingMensLightFlyweight,
        Value_BoxingMensFlyweight,
        Value_BoxingMensBantamweight,
        Value_BoxingMensFeatherweight,
        Value_BoxingMensLightweight,
        Value_BoxingMensLightWelterweight,
        Value_BoxingMensWelterweight,
        Value_BoxingMensLightMiddleweight,
        Value_BoxingMensMiddleweight,
        Value_BoxingMensLightHeavyweight,
        Value_BoxingMensHeavyweight,
        Value_BoxingMensSuperHeavyweight,
        Value_BoxingWomensFlyweight,
        Value_BoxingWomensFeatherweight,
        Value_BoxingWomensLightweight,
        Value_BoxingWomensWelterweight,
        Value_BoxingWomensMiddleweight,
        Value_CanoeingMensSlalomC1,
        Value_CanoeingMensSlalomC2,
        Value_CanoeingMensSlalomK1,
        Value_CanoeingMensSprintC1200M,
        Value_CanoeingMensSprintC1500M,
        Value_CanoeingMensSprintC11000M,
        Value_CanoeingMensSprintC2500M,
        Value_CanoeingMensSprintC21000M,
        Value_CanoeingMensSprintK1200M,
        Value_CanoeingMensSprintK1500M,
        Value_CanoeingMensSprintK11000M,
        Value_CanoeingMensSprintK2200M,
        Value_CanoeingMensSprintK2500M,
        Value_CanoeingMensSprintK21000M,
        Value_CanoeingMensSprintK4500M,
        Value_CanoeingMensSprintK41000M,
        Value_CanoeingWomensSlalomC1,
        Value_CanoeingWomensSlalomK1,
        Value_CanoeingWomensSprintC1200M,
        Value_CanoeingWomensSprintC2500M,
        Value_CanoeingWomensSprintK1200M,
        Value_CanoeingWomensSprintK1500M,
        Value_CanoeingWomensSprintK2500M,
        Value_CanoeingWomensSprintK4500M,
        Value_CyclingMensRoadCyclingRoadRace,
        Value_CyclingMensRoadCyclingTimeTrial,
        Value_CyclingMensRoadCyclingTeamTimeTrial,
        Value_CyclingMensTrackCyclingKeirin,
        Value_CyclingMensTrackCyclingMadison,
        Value_CyclingMensTrackCyclingOmnium,
        Value_CyclingMensTrackCyclingPointsRace,
        Value_CyclingMensTrackCyclingIndividualPursuit,
        Value_CyclingMensTrackCyclingTeamPursuit,
        Value_CyclingMensTrackCyclingIndividualSprint,
        Value_CyclingMensTrackCyclingTeamSprint,
        Value_CyclingMensTrackCyclingTimeTrial,
        Value_CyclingMensMountainBikingCrossCountry,
        Value_CyclingMensBMX,
        Value_CyclingMensBMXRace,
        Value_CyclingMensBMXFreestyle,
        Value_CyclingWomensRoadCyclingRoadRace,
        Value_CyclingWomensRoadCyclingTimeTrial,
        Value_CyclingWomensTrackCyclingKeirin,
        Value_CyclingWomensTrackCyclingMadison,
        Value_CyclingWomensTrackCyclingOmnium,
        Value_CyclingWomensTrackCyclingPointsRace,
        Value_CyclingWomensTrackCyclingIndividualPursuit,
        Value_CyclingWomensTrackCyclingTeamPursuit,
        Value_CyclingWomensTrackCyclingIndividualSprint,
        Value_CyclingWomensTrackCyclingTeamSprint,
        Value_CyclingWomensTrackCyclingTimeTrial,
        Value_CyclingWomensMountainBikingCrossCountry,
        Value_CyclingWomensBMX,
        Value_CyclingWomensBMXRace,
        Value_CyclingWomensBMXFreestyle,
        Value_DivingMensSpringboard,
        Value_DivingMensPlatform,
        Value_DivingMensSynchronizedSpringboard,
        Value_DivingMensSynchronizedPlatform,
        Value_DivingWomensSpringboard,
        Value_DivingWomensPlatform,
        Value_DivingWomensSynchronizedSpringboard,
        Value_DivingWomensSynchronizedPlatform,
        Value_EquestrianIndividualDressage,
        Value_EquestrianTeamDressage,
        Value_EquestrianIndividualEventing,
        Value_EquestrianTeamEventing,
        Value_EquestrianIndividualJumping,
        Value_EquestrianTeamJumping,
        Value_FencingMensIndividualEpee,
        Value_FencingMensTeamEpee,
        Value_FencingMensIndividualFoil,
        Value_FencingMensTeamFoil,
        Value_FencingMensIndividualSabre,
        Value_FencingMensTeamSabre,
        Value_FencingWomensIndividualEpee,
        Value_FencingWomensTeamEpee,
        Value_FencingWomensIndividualFoil,
        Value_FencingWomensTeamFoil,
        Value_FencingWomensIndividualSabre,
        Value_FencingWomensTeamSabre,
        Value_FieldHockeyMens,
        Value_FieldHockeyWomens,
        Value_FootballMens,
        Value_FootballWomens,
        Value_GolfMensIndividual,
        Value_GolfWomensIndividual,
        Value_GymnasticsMensArtisticTeamAllAround,
        Value_GymnasticsMensArtisticIndividualAllAround,
        Value_GymnasticsMensArtisticFloorExercise,
        Value_GymnasticsMensArtisticHorizontalBar,
        Value_GymnasticsMensArtisticParallelBars,
        Value_GymnasticsMensArtisticPommelHorse,
        Value_GymnasticsMensArtisticRings,
        Value_GymnasticsMensArtisticVault,
        Value_GymnasticsMensTrampolineIndividual,
        Value_GymnasticsWomensArtisticTeamAllAround,
        Value_GymnasticsWomensArtisticIndividualAllAround,
        Value_GymnasticsWomensArtisticBalanceBeam,
        Value_GymnasticsWomensArtisticFloorExercise,
        Value_GymnasticsWomensArtisticUnevenBars,
        Value_GymnasticsWomensArtisticVault,
        Value_GymnasticsWomensRhythmicIndividualAllAround,
        Value_GymnasticsWomensRhythmicGroupAllAround,
        Value_GymnasticsWomensTrampolineIndividual,
        Value_HandballMens,
        Value_HandballWomens,
        Value_JudoMensExtraLightweight,
        Value_JudoMensHalfLightweight,
        Value_JudoMensLightweight,
        Value_JudoMensHalfMiddleweight,
        Value_JudoMensMiddleweight,
        Value_JudoMensHalfHeavyweight,
        Value_JudoMensHeavyweight,
        Value_JudoWomensExtraLightweight,
        Value_JudoWomensHalfLightweight,
        Value_JudoWomensLightweight,
        Value_JudoWomensHalfMiddleweight,
        Value_JudoWomensMiddleweight,
        Value_JudoWomensHalfHeavyweight,
        Value_JudoWomensHeavyweight,
        Value_JudoMixedTeam,
        Value_KarateMens67Kg,
        Value_KarateMens75Kg,
        Value_KarateMens75KgPlus,
        Value_KarateMensKata,
        Value_KarateWomens55Kg,
        Value_KarateWomens61Kg,
        Value_KarateWomens61KgPlus,
        Value_KarateWomensKata,
        Value_ModernPentathlonMens,
        Value_ModernPentathlonWomens,
        Value_RowingMensSingleSculls,
        Value_RowingMensDoubleSculls,
        Value_RowingMensQuadrupleSculls,
        Value_RowingMensCoxlessPair,
        Value_RowingMensCoxedPair,
        Value_RowingMensCoxlessFour,
        Value_RowingMensCoxedFour,
        Value_RowingMensCoxedEight,
        Value_RowingMensLightweightDoubleSculls,
        Value_RowingMensLightweightCoxlessFour,
        Value_RowingWomensSingleSculls,
        Value_RowingWomensDoubleSculls,
        Value_RowingWomensQuadrupleSculls,
        Value_RowingWomensCoxlessPair,
        Value_RowingWomensCoxlessFour,
        Value_RowingWomensCoxedFour,
        Value_RowingWomensCoxedEight,
        Value_RowingWomensLightweightDoubleSculls,
        Value_RugbyMens,
        Value_RugbyWomens,
        Value_SailingMensRSX,
        Value_SailingMensLaser,
        Value_SailingMensFinn,
        Value_SailingMens470,
        Value_SailingMens49er,
        Value_SailingMens49erFX,
        Value_SailingMensStar,
        Value_SailingWomensRSX,
        Value_SailingWomensLaser,
        Value_SailingWomensLaserRadial,
        Value_SailingWomens470,
        Value_SailingWomens49erFX,
        Value_SailingWomensElliott6M,
        Value_SailingWomensYngling,
        Value_SailingMixedNacra17,
        Value_SailingMixed49erFX,
        Value_SailingMixedFinn,
        Value_SailingMixedTornado,
        Value_ShootingMensAirPistol10M,
        Value_ShootingMensAirRifle10M,
        Value_ShootingMensRapidFirePistol25M,
        Value_ShootingMensPistol50M,
        Value_ShootingMensRifleProne50M,
        Value_ShootingMensRifleThreePositions50M,
        Value_ShootingMensSkeet,
        Value_ShootingMensTrap,
        Value_ShootingMensDoubleTrap,
        Value_ShootingMens10MRunningTarget,
        Value_ShootingWomensAirPistol10M,
        Value_ShootingWomensAirRifle10M,
        Value_ShootingWomensPistol25M,
        Value_ShootingWomensRifleThreePositions50M,
        Value_ShootingWomensSkeet,
        Value_ShootingWomensTrap,
        Value_ShootingWomensDoubleTrap,
        Value_ShootingMixedAirPistolTeam,
        Value_ShootingMixedAirRifleTeam,
        Value_ShootingMixedTrapTeam,
        Value_SkateboardingMensPark,
        Value_SkateboardingMensStreet,
        Value_SkateboardingWomensPark,
        Value_SkateboardingWomensStreet,
        Value_SoftballWomens,
        Value_SportClimbingMensCombined,
        Value_SportClimbingWomensCombined,
        Value_SportSurfingMens,
        Value_SportSurfingWomens,
        Value_SwimmingMensFreestyle50M,
        Value_SwimmingMensFreestyle100M,
        Value_SwimmingMensFreestyle200M,
        Value_SwimmingMensFreestyle400M,
        Value_SwimmingMensFreestyle800M,
        Value_SwimmingMensFreestyle1500M,
        Value_SwimmingMensBackstroke100M,
        Value_SwimmingMensBackstroke200M,
        Value_SwimmingMensBreaststroke100M,
        Value_SwimmingMensBreaststroke200M,
        Value_SwimmingMensButterfly100M,
        Value_SwimmingMensButterfly200M,
        Value_SwimmingMensIndividualMedley200M,
        Value_SwimmingMensIndividualMedley400M,
        Value_SwimmingMens4X100MFreestyleRelay,
        Value_SwimmingMens4X200MFreestyleRelay,
        Value_SwimmingMens4X100MMedleyRelay,
        Value_SwimmingMensOpenWater10KM,
        Value_SwimmingWomensFreestyle50M,
        Value_SwimmingWomensFreestyle100M,
        Value_SwimmingWomensFreestyle200M,
        Value_SwimmingWomensFreestyle400M,
        Value_SwimmingWomensFreestyle800M,
        Value_SwimmingWomensFreestyle1500M,
        Value_SwimmingWomensBackstroke100M,
        Value_SwimmingWomensBackstroke200M,
        Value_SwimmingWomensBreaststroke100M,
        Value_SwimmingWomensBreaststroke200M,
        Value_SwimmingWomensButterfly100M,
        Value_SwimmingWomensButterfly200M,
        Value_SwimmingWomensIndividualMedley200M,
        Value_SwimmingWomensindividualMedley400M,
        Value_SwimmingWomens4X100MFreestyleRelay,
        Value_SwimmingWomens4X200MFreestyleRelay,
        Value_SwimmingWomens4X100MMedleyRelay,
        Value_SwimmingWomensOpenWater10KM,
        Value_SwimmingMixed4X100MMedleyRelay,
        Value_TableTennisMensSingles,
        Value_TableTennisMensTeam,
        Value_TableTennisWomensSingles,
        Value_TableTennisWomensTeam,
        Value_TableTennisMixedDoubles,
        Value_TaekwondoMensFlyweight,
        Value_TaekwondoMensFeatherweight,
        Value_TaekwondoMensWelterweight,
        Value_TaekwondoMensHeavyweight,
        Value_TaekwondoWomensFlyweight,
        Value_TaekwondoWomensFeatherweight,
        Value_TaekwondoWomensWelterweight,
        Value_TaekwondoWomensHeavyweight,
        Value_TennisMensSingles,
        Value_TennisMensDoubles,
        Value_TennisWomensSingles,
        Value_TennisWomensDoubles,
        Value_TennisMixedDoubles,
        Value_TriathlonMensIndividual,
        Value_TriathlonWomensIndividual,
        Value_TriathlonMixedRelay,
        Value_VolleyballMensIndoor,
        Value_VolleyballMensBeach,
        Value_VolleyballWomensIndoor,
        Value_VolleyballWomensBeach,
        Value_WaterPoloMens,
        Value_WaterPoloWomens,
        Value_WeightliftingMensFlyweight,
        Value_WeightliftingMensBantamweight,
        Value_WeightliftingMensFeatherweight,
        Value_WeightliftingMensLightweight,
        Value_WeightliftingMensMiddleweight,
        Value_WeightliftingMensLightHeavyweight,
        Value_WeightliftingMensMiddleHeavyweight,
        Value_WeightliftingMensFirstHeavyweight,
        Value_WeightliftingMensHeavyweight,
        Value_WeightliftingMensSuperHeavyweight,
        Value_WeightliftingMens61Kg,
        Value_WeightliftingMens67Kg,
        Value_WeightliftingMens73Kg,
        Value_WeightliftingMens81Kg,
        Value_WeightliftingMens96Kg,
        Value_WeightliftingMens109Kg,
        Value_WeightliftingMens109KgPlus,
        Value_WeightliftingWomensFlyweight,
        Value_WeightliftingWomensFeatherweight,
        Value_WeightliftingWomensLightweight,
        Value_WeightliftingWomensMiddleweight,
        Value_WeightliftingWomensLightHeavyweight,
        Value_WeightliftingWomensHeavyweight,
        Value_WeightliftingWomensSuperHeavyweight,
        Value_WeightliftingWomens49Kg,
        Value_WeightliftingWomens55Kg,
        Value_WeightliftingWomens59Kg,
        Value_WeightliftingWomens64Kg,
        Value_WeightliftingWomens76Kg,
        Value_WeightliftingWomens87Kg,
        Value_WeightliftingWomens87KgPlus,
        Value_WrestlingMensGrecoRomanLightFlyweight,
        Value_WrestlingMensGrecoRomanFlyweight,
        Value_WrestlingMensGrecoRomanBantamweight,
        Value_WrestlingMensGrecoRomanFeatherweight,
        Value_WrestlingMensGrecoRomanLightweight,
        Value_WrestlingMensGrecoRomanWelterweight,
        Value_WrestlingMensGrecoRomanMiddleweight,
        Value_WrestlingMensGrecoRomanLightHeavyweight,
        Value_WrestlingMensGrecoRomanHeavyweight,
        Value_WrestlingMensGrecoRomanSuperHeavyweight,
        Value_WrestlingMensGrecoRoman60Kg,
        Value_WrestlingMensGrecoRoman67Kg,
        Value_WrestlingMensGrecoRoman77Kg,
        Value_WrestlingMensGrecoRoman87Kg,
        Value_WrestlingMensGrecoRoman97Kg,
        Value_WrestlingMensGrecoRoman130Kg,
        Value_WrestlingMensFreestyleLightFlyweight,
        Value_WrestlingMensFreestyleFlyweight,
        Value_WrestlingMensFreestyleBantamweight,
        Value_WrestlingMensFreestyleFeatherweight,
        Value_WrestlingMensFreestyleLightweight,
        Value_WrestlingMensFreestyleWelterweight,
        Value_WrestlingMensFreestyleMiddleweight,
        Value_WrestlingMensFreestyleLightHeavyweight,
        Value_WrestlingMensFreestyleHeavyweight,
        Value_WrestlingMensFreestyleSuperHeavyweight,
        Value_WrestlingMensFreestyle57Kg,
        Value_WrestlingMensFreestyle65Kg,
        Value_WrestlingMensFreestyle74Kg,
        Value_WrestlingMensFreestyle86Kg,
        Value_WrestlingMensFreestyle97Kg,
        Value_WrestlingMensFreestyle125Kg,
        Value_WrestlingWomensFreestyleFlyweight,
        Value_WrestlingWomensFreestyleBantamweight,
        Value_WrestlingWomensFreestyleLightweight,
        Value_WrestlingWomensFreestyleMiddleweight,
        Value_WrestlingWomensFreestyleWelterweight,
        Value_WrestlingWomensFreestyleLightHeavyweight,
        Value_WrestlingWomensFreestyleHeavyweight,
        Value_WrestlingWomensFreestyle50Kg,
        Value_WrestlingWomensFreestyle53Kg,
        Value_WrestlingWomensFreestyle57Kg,
        Value_WrestlingWomensFreestyle62Kg,
        Value_WrestlingWomensFreestyle68Kg,
        Value_WrestlingWomensFreestyle76Kg,
        Value__none
      };
    public struct TypeValue
      {
        public bool in_known_list;
        public string string_value;
        public TypeValueKnownValues list_value;
      };

    public static TypeValueKnownValues  stringToValue(string chars)
      {
        switch (chars[0])
          {
            case 'A':
                switch (chars[1])
                  {
                    case 'l':
                        if (String.Compare(chars, 2, "pineSkiing", 0, 10, false) == 0)
                          {
                            switch (chars[12])
                              {
                                case 'M':
                                    switch (chars[13])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 14, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[16])
                                                  {
                                                    case 'C':
                                                        if ((String.Compare(chars, 17, "ombined", 0, 7, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_AlpineSkiingMensCombined;
                                                        break;
                                                    case 'D':
                                                        if ((String.Compare(chars, 17, "ownhill", 0, 7, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_AlpineSkiingMensDownhill;
                                                        break;
                                                    case 'G':
                                                        if ((String.Compare(chars, 17, "iantSlalom", 0, 10, false) == 0) && (chars.Length == 27))
                                                            return TypeValueKnownValues.Value_AlpineSkiingMensGiantSlalom;
                                                        break;
                                                    case 'S':
                                                        switch (chars[17])
                                                          {
                                                            case 'l':
                                                                if ((String.Compare(chars, 18, "alom", 0, 4, false) == 0) && (chars.Length == 22))
                                                                    return TypeValueKnownValues.Value_AlpineSkiingMensSlalom;
                                                                break;
                                                            case 'u':
                                                                if ((String.Compare(chars, 18, "perG", 0, 4, false) == 0) && (chars.Length == 22))
                                                                    return TypeValueKnownValues.Value_AlpineSkiingMensSuperG;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 14, "xedTeam", 0, 7, false) == 0) && (chars.Length == 21))
                                                return TypeValueKnownValues.Value_AlpineSkiingMixedTeam;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 13, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[18])
                                          {
                                            case 'C':
                                                if ((String.Compare(chars, 19, "ombined", 0, 7, false) == 0) && (chars.Length == 26))
                                                    return TypeValueKnownValues.Value_AlpineSkiingWomensCombined;
                                                break;
                                            case 'D':
                                                if ((String.Compare(chars, 19, "ownhill", 0, 7, false) == 0) && (chars.Length == 26))
                                                    return TypeValueKnownValues.Value_AlpineSkiingWomensDownhill;
                                                break;
                                            case 'G':
                                                if ((String.Compare(chars, 19, "iantSlalom", 0, 10, false) == 0) && (chars.Length == 29))
                                                    return TypeValueKnownValues.Value_AlpineSkiingWomensGiantSlalom;
                                                break;
                                            case 'S':
                                                switch (chars[19])
                                                  {
                                                    case 'l':
                                                        if ((String.Compare(chars, 20, "alom", 0, 4, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_AlpineSkiingWomensSlalom;
                                                        break;
                                                    case 'u':
                                                        if ((String.Compare(chars, 20, "perG", 0, 4, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_AlpineSkiingWomensSuperG;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        switch (chars[2])
                          {
                            case 'c':
                                if (String.Compare(chars, 3, "hery", 0, 4, false) == 0)
                                  {
                                    switch (chars[7])
                                      {
                                        case 'M':
                                            switch (chars[8])
                                              {
                                                case 'e':
                                                    if (String.Compare(chars, 9, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (chars[11])
                                                          {
                                                            case 'I':
                                                                if ((String.Compare(chars, 12, "ndividual", 0, 9, false) == 0) && (chars.Length == 21))
                                                                    return TypeValueKnownValues.Value_ArcheryMensIndividual;
                                                                break;
                                                            case 'T':
                                                                if ((String.Compare(chars, 12, "eam", 0, 3, false) == 0) && (chars.Length == 15))
                                                                    return TypeValueKnownValues.Value_ArcheryMensTeam;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(chars, 9, "xedTeam", 0, 7, false) == 0) && (chars.Length == 16))
                                                        return TypeValueKnownValues.Value_ArcheryMixedTeam;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 8, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[13])
                                                  {
                                                    case 'I':
                                                        if ((String.Compare(chars, 14, "ndividual", 0, 9, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_ArcheryWomensIndividual;
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 14, "eam", 0, 3, false) == 0) && (chars.Length == 17))
                                                            return TypeValueKnownValues.Value_ArcheryWomensTeam;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 't':
                                if (String.Compare(chars, 3, "isticSwimmingWomens", 0, 19, false) == 0)
                                  {
                                    switch (chars[22])
                                      {
                                        case 'D':
                                            if ((String.Compare(chars, 23, "uet", 0, 3, false) == 0) && (chars.Length == 26))
                                                return TypeValueKnownValues.Value_ArtisticSwimmingWomensDuet;
                                            break;
                                        case 'S':
                                            if ((String.Compare(chars, 23, "olo", 0, 3, false) == 0) && (chars.Length == 26))
                                                return TypeValueKnownValues.Value_ArtisticSwimmingWomensSolo;
                                            break;
                                        case 'T':
                                            if ((String.Compare(chars, 23, "eam", 0, 3, false) == 0) && (chars.Length == 26))
                                                return TypeValueKnownValues.Value_ArtisticSwimmingWomensTeam;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 't':
                        if (String.Compare(chars, 2, "hletics", 0, 7, false) == 0)
                          {
                            switch (chars[9])
                              {
                                case 'M':
                                    switch (chars[10])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 11, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[13])
                                                  {
                                                    case '1':
                                                        switch (chars[14])
                                                          {
                                                            case '0':
                                                                if (String.Compare(chars, 15, "0", 0, 1, false) == 0)
                                                                  {
                                                                    switch (chars[16])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(chars, 17, "0M", 0, 2, false) == 0) && (chars.Length == 19))
                                                                                return TypeValueKnownValues.Value_AthleticsMens10000M;
                                                                            break;
                                                                        case 'M':
                                                                            if (chars.Length == 17)
                                                                                return TypeValueKnownValues.Value_AthleticsMens100M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case '5':
                                                                if ((String.Compare(chars, 15, "00M", 0, 3, false) == 0) && (chars.Length == 18))
                                                                    return TypeValueKnownValues.Value_AthleticsMens1500M;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '2':
                                                        if ((String.Compare(chars, 14, "00M", 0, 3, false) == 0) && (chars.Length == 17))
                                                            return TypeValueKnownValues.Value_AthleticsMens200M;
                                                        break;
                                                    case '4':
                                                        switch (chars[14])
                                                          {
                                                            case '0':
                                                                if ((String.Compare(chars, 15, "0M", 0, 2, false) == 0) && (chars.Length == 17))
                                                                    return TypeValueKnownValues.Value_AthleticsMens400M;
                                                                break;
                                                            case 'X':
                                                                switch (chars[15])
                                                                  {
                                                                    case '1':
                                                                        if ((String.Compare(chars, 16, "00MRelay", 0, 8, false) == 0) && (chars.Length == 24))
                                                                            return TypeValueKnownValues.Value_AthleticsMens4X100MRelay;
                                                                        break;
                                                                    case '4':
                                                                        if ((String.Compare(chars, 16, "00MRelay", 0, 8, false) == 0) && (chars.Length == 24))
                                                                            return TypeValueKnownValues.Value_AthleticsMens4X400MRelay;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(chars, 14, "000M", 0, 4, false) == 0) && (chars.Length == 18))
                                                            return TypeValueKnownValues.Value_AthleticsMens5000M;
                                                        break;
                                                    case '8':
                                                        if ((String.Compare(chars, 14, "00M", 0, 3, false) == 0) && (chars.Length == 17))
                                                            return TypeValueKnownValues.Value_AthleticsMens800M;
                                                        break;
                                                    case 'D':
                                                        switch (chars[14])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(chars, 15, "cathlon", 0, 7, false) == 0) && (chars.Length == 22))
                                                                    return TypeValueKnownValues.Value_AthleticsMensDecathlon;
                                                                break;
                                                            case 'i':
                                                                if ((String.Compare(chars, 15, "scusThrow", 0, 9, false) == 0) && (chars.Length == 24))
                                                                    return TypeValueKnownValues.Value_AthleticsMensDiscusThrow;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        switch (chars[14])
                                                          {
                                                            case 'a':
                                                                if ((String.Compare(chars, 15, "mmerThrow", 0, 9, false) == 0) && (chars.Length == 24))
                                                                    return TypeValueKnownValues.Value_AthleticsMensHammerThrow;
                                                                break;
                                                            case 'i':
                                                                if ((String.Compare(chars, 15, "ghJump", 0, 6, false) == 0) && (chars.Length == 21))
                                                                    return TypeValueKnownValues.Value_AthleticsMensHighJump;
                                                                break;
                                                            case 'u':
                                                                if (String.Compare(chars, 15, "rdles", 0, 5, false) == 0)
                                                                  {
                                                                    switch (chars[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 21, "10M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_AthleticsMensHurdles110M;
                                                                            break;
                                                                        case '4':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_AthleticsMensHurdles400M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'J':
                                                        if ((String.Compare(chars, 14, "avelinThrow", 0, 11, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_AthleticsMensJavelinThrow;
                                                        break;
                                                    case 'L':
                                                        if ((String.Compare(chars, 14, "ongJump", 0, 7, false) == 0) && (chars.Length == 21))
                                                            return TypeValueKnownValues.Value_AthleticsMensLongJump;
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(chars, 14, "arathon", 0, 7, false) == 0) && (chars.Length == 21))
                                                            return TypeValueKnownValues.Value_AthleticsMensMarathon;
                                                        break;
                                                    case 'P':
                                                        if ((String.Compare(chars, 14, "oleVault", 0, 8, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_AthleticsMensPoleVault;
                                                        break;
                                                    case 'S':
                                                        switch (chars[14])
                                                          {
                                                            case 'h':
                                                                if ((String.Compare(chars, 15, "otPut", 0, 5, false) == 0) && (chars.Length == 20))
                                                                    return TypeValueKnownValues.Value_AthleticsMensShotPut;
                                                                break;
                                                            case 't':
                                                                if ((String.Compare(chars, 15, "eeplechase3000M", 0, 15, false) == 0) && (chars.Length == 30))
                                                                    return TypeValueKnownValues.Value_AthleticsMensSteeplechase3000M;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 14, "ripleJump", 0, 9, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_AthleticsMensTripleJump;
                                                        break;
                                                    case 'W':
                                                        if (String.Compare(chars, 14, "alk", 0, 3, false) == 0)
                                                          {
                                                            switch (chars[17])
                                                              {
                                                                case '2':
                                                                    if ((String.Compare(chars, 18, "0KM", 0, 3, false) == 0) && (chars.Length == 21))
                                                                        return TypeValueKnownValues.Value_AthleticsMensWalk20KM;
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(chars, 18, "0KM", 0, 3, false) == 0) && (chars.Length == 21))
                                                                        return TypeValueKnownValues.Value_AthleticsMensWalk50KM;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 11, "xed4X400MRelay", 0, 14, false) == 0) && (chars.Length == 25))
                                                return TypeValueKnownValues.Value_AthleticsMixed4X400MRelay;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 10, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[15])
                                          {
                                            case '1':
                                                switch (chars[16])
                                                  {
                                                    case '0':
                                                        if (String.Compare(chars, 17, "0", 0, 1, false) == 0)
                                                          {
                                                            switch (chars[18])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(chars, 19, "0M", 0, 2, false) == 0) && (chars.Length == 21))
                                                                        return TypeValueKnownValues.Value_AthleticsWomens10000M;
                                                                    break;
                                                                case 'M':
                                                                    if (chars.Length == 19)
                                                                        return TypeValueKnownValues.Value_AthleticsWomens100M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(chars, 17, "00M", 0, 3, false) == 0) && (chars.Length == 20))
                                                            return TypeValueKnownValues.Value_AthleticsWomens1500M;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '2':
                                                if ((String.Compare(chars, 16, "00M", 0, 3, false) == 0) && (chars.Length == 19))
                                                    return TypeValueKnownValues.Value_AthleticsWomens200M;
                                                break;
                                            case '3':
                                                if ((String.Compare(chars, 16, "000M", 0, 4, false) == 0) && (chars.Length == 20))
                                                    return TypeValueKnownValues.Value_AthleticsWomens3000M;
                                                break;
                                            case '4':
                                                switch (chars[16])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(chars, 17, "0M", 0, 2, false) == 0) && (chars.Length == 19))
                                                            return TypeValueKnownValues.Value_AthleticsWomens400M;
                                                        break;
                                                    case 'X':
                                                        switch (chars[17])
                                                          {
                                                            case '1':
                                                                if ((String.Compare(chars, 18, "00MRelay", 0, 8, false) == 0) && (chars.Length == 26))
                                                                    return TypeValueKnownValues.Value_AthleticsWomens4X100MRelay;
                                                                break;
                                                            case '4':
                                                                if ((String.Compare(chars, 18, "00MRelay", 0, 8, false) == 0) && (chars.Length == 26))
                                                                    return TypeValueKnownValues.Value_AthleticsWomens4X400MRelay;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '5':
                                                if ((String.Compare(chars, 16, "000M", 0, 4, false) == 0) && (chars.Length == 20))
                                                    return TypeValueKnownValues.Value_AthleticsWomens5000M;
                                                break;
                                            case '8':
                                                if ((String.Compare(chars, 16, "00M", 0, 3, false) == 0) && (chars.Length == 19))
                                                    return TypeValueKnownValues.Value_AthleticsWomens800M;
                                                break;
                                            case 'D':
                                                if ((String.Compare(chars, 16, "iscusThrow", 0, 10, false) == 0) && (chars.Length == 26))
                                                    return TypeValueKnownValues.Value_AthleticsWomensDiscusThrow;
                                                break;
                                            case 'H':
                                                switch (chars[16])
                                                  {
                                                    case 'a':
                                                        if ((String.Compare(chars, 17, "mmerThrow", 0, 9, false) == 0) && (chars.Length == 26))
                                                            return TypeValueKnownValues.Value_AthleticsWomensHammerThrow;
                                                        break;
                                                    case 'e':
                                                        if ((String.Compare(chars, 17, "ptathlon", 0, 8, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_AthleticsWomensHeptathlon;
                                                        break;
                                                    case 'i':
                                                        if ((String.Compare(chars, 17, "ghJump", 0, 6, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_AthleticsWomensHighJump;
                                                        break;
                                                    case 'u':
                                                        if ((String.Compare(chars, 17, "rdles100M", 0, 9, false) == 0) && (chars.Length == 26))
                                                            return TypeValueKnownValues.Value_AthleticsWomensHurdles100M;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'J':
                                                if ((String.Compare(chars, 16, "avelinThrow", 0, 11, false) == 0) && (chars.Length == 27))
                                                    return TypeValueKnownValues.Value_AthleticsWomensJavelinThrow;
                                                break;
                                            case 'L':
                                                if ((String.Compare(chars, 16, "ongJump", 0, 7, false) == 0) && (chars.Length == 23))
                                                    return TypeValueKnownValues.Value_AthleticsWomensLongJump;
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 16, "arathon", 0, 7, false) == 0) && (chars.Length == 23))
                                                    return TypeValueKnownValues.Value_AthleticsWomensMarathon;
                                                break;
                                            case 'P':
                                                if ((String.Compare(chars, 16, "oleVault", 0, 8, false) == 0) && (chars.Length == 24))
                                                    return TypeValueKnownValues.Value_AthleticsWomensPoleVault;
                                                break;
                                            case 'S':
                                                switch (chars[16])
                                                  {
                                                    case 'h':
                                                        if ((String.Compare(chars, 17, "otPut", 0, 5, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_AthleticsWomensShotPut;
                                                        break;
                                                    case 't':
                                                        if ((String.Compare(chars, 17, "eeplechase3000M", 0, 15, false) == 0) && (chars.Length == 32))
                                                            return TypeValueKnownValues.Value_AthleticsWomensSteeplechase3000M;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'T':
                                                if ((String.Compare(chars, 16, "ripleJump", 0, 9, false) == 0) && (chars.Length == 25))
                                                    return TypeValueKnownValues.Value_AthleticsWomensTripleJump;
                                                break;
                                            case 'W':
                                                if (String.Compare(chars, 16, "alk", 0, 3, false) == 0)
                                                  {
                                                    switch (chars[19])
                                                      {
                                                        case '1':
                                                            if ((String.Compare(chars, 20, "0KM", 0, 3, false) == 0) && (chars.Length == 23))
                                                                return TypeValueKnownValues.Value_AthleticsWomensWalk10KM;
                                                            break;
                                                        case '2':
                                                            if ((String.Compare(chars, 20, "0KM", 0, 3, false) == 0) && (chars.Length == 23))
                                                                return TypeValueKnownValues.Value_AthleticsWomensWalk20KM;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'h':
                                                if ((String.Compare(chars, 16, "urdles400M", 0, 10, false) == 0) && (chars.Length == 26))
                                                    return TypeValueKnownValues.Value_AthleticsWomenshurdles400M;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'B':
                switch (chars[1])
                  {
                    case 'a':
                        switch (chars[2])
                          {
                            case 'd':
                                if (String.Compare(chars, 3, "minton", 0, 6, false) == 0)
                                  {
                                    switch (chars[9])
                                      {
                                        case 'M':
                                            switch (chars[10])
                                              {
                                                case 'e':
                                                    if (String.Compare(chars, 11, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (chars[13])
                                                          {
                                                            case 'D':
                                                                if ((String.Compare(chars, 14, "oubles", 0, 6, false) == 0) && (chars.Length == 20))
                                                                    return TypeValueKnownValues.Value_BadmintonMensDoubles;
                                                                break;
                                                            case 'S':
                                                                if ((String.Compare(chars, 14, "ingles", 0, 6, false) == 0) && (chars.Length == 20))
                                                                    return TypeValueKnownValues.Value_BadmintonMensSingles;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(chars, 11, "xedDoubles", 0, 10, false) == 0) && (chars.Length == 21))
                                                        return TypeValueKnownValues.Value_BadmintonMixedDoubles;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 10, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[15])
                                                  {
                                                    case 'D':
                                                        if ((String.Compare(chars, 16, "oubles", 0, 6, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_BadmintonWomensDoubles;
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(chars, 16, "ingles", 0, 6, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_BadmintonWomensSingles;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 's':
                                switch (chars[3])
                                  {
                                    case 'e':
                                        if ((String.Compare(chars, 4, "ballMens", 0, 8, false) == 0) && (chars.Length == 12))
                                            return TypeValueKnownValues.Value_BaseballMens;
                                        break;
                                    case 'k':
                                        if (String.Compare(chars, 4, "etball", 0, 6, false) == 0)
                                          {
                                            switch (chars[10])
                                              {
                                                case 'M':
                                                    if (String.Compare(chars, 11, "ens", 0, 3, false) == 0)
                                                      {
                                                        if (chars.Length == 14)
                                                          {
                                                            return TypeValueKnownValues.Value_BasketballMens;
                                                          }
                                                        switch (chars[14])
                                                          {
                                                            case '3':
                                                                if ((String.Compare(chars, 15, "x3", 0, 2, false) == 0) && (chars.Length == 17))
                                                                    return TypeValueKnownValues.Value_BasketballMens3x3;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'W':
                                                    if (String.Compare(chars, 11, "omens", 0, 5, false) == 0)
                                                      {
                                                        if (chars.Length == 16)
                                                          {
                                                            return TypeValueKnownValues.Value_BasketballWomens;
                                                          }
                                                        switch (chars[16])
                                                          {
                                                            case '3':
                                                                if ((String.Compare(chars, 17, "x3", 0, 2, false) == 0) && (chars.Length == 19))
                                                                    return TypeValueKnownValues.Value_BasketballWomens3x3;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'i':
                        if (String.Compare(chars, 2, "athlon", 0, 6, false) == 0)
                          {
                            switch (chars[8])
                              {
                                case 'M':
                                    switch (chars[9])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 10, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[12])
                                                  {
                                                    case 'I':
                                                        if ((String.Compare(chars, 13, "ndividual", 0, 9, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_BiathlonMensIndividual;
                                                        break;
                                                    case 'M':
                                                        switch (chars[13])
                                                          {
                                                            case 'a':
                                                                if ((String.Compare(chars, 14, "ssStart", 0, 7, false) == 0) && (chars.Length == 21))
                                                                    return TypeValueKnownValues.Value_BiathlonMensMassStart;
                                                                break;
                                                            case 'i':
                                                                if ((String.Compare(chars, 14, "litaryPatrol", 0, 12, false) == 0) && (chars.Length == 26))
                                                                    return TypeValueKnownValues.Value_BiathlonMensMilitaryPatrol;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'P':
                                                        if ((String.Compare(chars, 13, "ursuit", 0, 6, false) == 0) && (chars.Length == 19))
                                                            return TypeValueKnownValues.Value_BiathlonMensPursuit;
                                                        break;
                                                    case 'R':
                                                        if ((String.Compare(chars, 13, "elay", 0, 4, false) == 0) && (chars.Length == 17))
                                                            return TypeValueKnownValues.Value_BiathlonMensRelay;
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(chars, 13, "print", 0, 5, false) == 0) && (chars.Length == 18))
                                                            return TypeValueKnownValues.Value_BiathlonMensSprint;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 10, "xedRelay", 0, 8, false) == 0) && (chars.Length == 18))
                                                return TypeValueKnownValues.Value_BiathlonMixedRelay;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 9, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[14])
                                          {
                                            case 'I':
                                                if ((String.Compare(chars, 15, "ndividual", 0, 9, false) == 0) && (chars.Length == 24))
                                                    return TypeValueKnownValues.Value_BiathlonWomensIndividual;
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 15, "assStart", 0, 8, false) == 0) && (chars.Length == 23))
                                                    return TypeValueKnownValues.Value_BiathlonWomensMassStart;
                                                break;
                                            case 'P':
                                                if ((String.Compare(chars, 15, "ursuit", 0, 6, false) == 0) && (chars.Length == 21))
                                                    return TypeValueKnownValues.Value_BiathlonWomensPursuit;
                                                break;
                                            case 'R':
                                                if ((String.Compare(chars, 15, "elay", 0, 4, false) == 0) && (chars.Length == 19))
                                                    return TypeValueKnownValues.Value_BiathlonWomensRelay;
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 15, "print", 0, 5, false) == 0) && (chars.Length == 20))
                                                    return TypeValueKnownValues.Value_BiathlonWomensSprint;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'o':
                        switch (chars[2])
                          {
                            case 'b':
                                if (String.Compare(chars, 3, "sleigh", 0, 6, false) == 0)
                                  {
                                    switch (chars[9])
                                      {
                                        case 'M':
                                            if (String.Compare(chars, 10, "ens", 0, 3, false) == 0)
                                              {
                                                switch (chars[13])
                                                  {
                                                    case 'F':
                                                        if ((String.Compare(chars, 14, "our", 0, 3, false) == 0) && (chars.Length == 17))
                                                            return TypeValueKnownValues.Value_BobsleighMensFour;
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 14, "wo", 0, 2, false) == 0) && (chars.Length == 16))
                                                            return TypeValueKnownValues.Value_BobsleighMensTwo;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 10, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[15])
                                                  {
                                                    case 'M':
                                                        if ((String.Compare(chars, 16, "onobob", 0, 6, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_BobsleighWomensMonobob;
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 16, "wo", 0, 2, false) == 0) && (chars.Length == 18))
                                                            return TypeValueKnownValues.Value_BobsleighWomensTwo;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'x':
                                if (String.Compare(chars, 3, "ing", 0, 3, false) == 0)
                                  {
                                    switch (chars[6])
                                      {
                                        case 'M':
                                            if (String.Compare(chars, 7, "ens", 0, 3, false) == 0)
                                              {
                                                switch (chars[10])
                                                  {
                                                    case 'B':
                                                        if ((String.Compare(chars, 11, "antamweight", 0, 11, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_BoxingMensBantamweight;
                                                        break;
                                                    case 'F':
                                                        switch (chars[11])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(chars, 12, "atherweight", 0, 11, false) == 0) && (chars.Length == 23))
                                                                    return TypeValueKnownValues.Value_BoxingMensFeatherweight;
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(chars, 12, "yweight", 0, 7, false) == 0) && (chars.Length == 19))
                                                                    return TypeValueKnownValues.Value_BoxingMensFlyweight;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(chars, 11, "eavyweight", 0, 10, false) == 0) && (chars.Length == 21))
                                                            return TypeValueKnownValues.Value_BoxingMensHeavyweight;
                                                        break;
                                                    case 'L':
                                                        if (String.Compare(chars, 11, "ight", 0, 4, false) == 0)
                                                          {
                                                            switch (chars[15])
                                                              {
                                                                case 'F':
                                                                    if ((String.Compare(chars, 16, "lyweight", 0, 8, false) == 0) && (chars.Length == 24))
                                                                        return TypeValueKnownValues.Value_BoxingMensLightFlyweight;
                                                                    break;
                                                                case 'H':
                                                                    if ((String.Compare(chars, 16, "eavyweight", 0, 10, false) == 0) && (chars.Length == 26))
                                                                        return TypeValueKnownValues.Value_BoxingMensLightHeavyweight;
                                                                    break;
                                                                case 'M':
                                                                    if ((String.Compare(chars, 16, "iddleweight", 0, 11, false) == 0) && (chars.Length == 27))
                                                                        return TypeValueKnownValues.Value_BoxingMensLightMiddleweight;
                                                                    break;
                                                                case 'W':
                                                                    if ((String.Compare(chars, 16, "elterweight", 0, 11, false) == 0) && (chars.Length == 27))
                                                                        return TypeValueKnownValues.Value_BoxingMensLightWelterweight;
                                                                    break;
                                                                case 'w':
                                                                    if ((String.Compare(chars, 16, "eight", 0, 5, false) == 0) && (chars.Length == 21))
                                                                        return TypeValueKnownValues.Value_BoxingMensLightweight;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(chars, 11, "iddleweight", 0, 11, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_BoxingMensMiddleweight;
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(chars, 11, "uperHeavyweight", 0, 15, false) == 0) && (chars.Length == 26))
                                                            return TypeValueKnownValues.Value_BoxingMensSuperHeavyweight;
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(chars, 11, "elterweight", 0, 11, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_BoxingMensWelterweight;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 7, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[12])
                                                  {
                                                    case 'F':
                                                        switch (chars[13])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(chars, 14, "atherweight", 0, 11, false) == 0) && (chars.Length == 25))
                                                                    return TypeValueKnownValues.Value_BoxingWomensFeatherweight;
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(chars, 14, "yweight", 0, 7, false) == 0) && (chars.Length == 21))
                                                                    return TypeValueKnownValues.Value_BoxingWomensFlyweight;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'L':
                                                        if ((String.Compare(chars, 13, "ightweight", 0, 10, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_BoxingWomensLightweight;
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(chars, 13, "iddleweight", 0, 11, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_BoxingWomensMiddleweight;
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(chars, 13, "elterweight", 0, 11, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_BoxingWomensWelterweight;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'C':
                switch (chars[1])
                  {
                    case 'a':
                        if (String.Compare(chars, 2, "noeing", 0, 6, false) == 0)
                          {
                            switch (chars[8])
                              {
                                case 'M':
                                    if (String.Compare(chars, 9, "ensS", 0, 4, false) == 0)
                                      {
                                        switch (chars[13])
                                          {
                                            case 'l':
                                                if (String.Compare(chars, 14, "alom", 0, 4, false) == 0)
                                                  {
                                                    switch (chars[18])
                                                      {
                                                        case 'C':
                                                            switch (chars[19])
                                                              {
                                                                case '1':
                                                                    if (chars.Length == 20)
                                                                        return TypeValueKnownValues.Value_CanoeingMensSlalomC1;
                                                                    break;
                                                                case '2':
                                                                    if (chars.Length == 20)
                                                                        return TypeValueKnownValues.Value_CanoeingMensSlalomC2;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(chars, 19, "1", 0, 1, false) == 0) && (chars.Length == 20))
                                                                return TypeValueKnownValues.Value_CanoeingMensSlalomK1;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'p':
                                                if (String.Compare(chars, 14, "rint", 0, 4, false) == 0)
                                                  {
                                                    switch (chars[18])
                                                      {
                                                        case 'C':
                                                            switch (chars[19])
                                                              {
                                                                case '1':
                                                                    switch (chars[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 21, "000M", 0, 4, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintC11000M;
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintC1200M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintC1500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    switch (chars[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 21, "000M", 0, 4, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintC21000M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintC2500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'K':
                                                            switch (chars[19])
                                                              {
                                                                case '1':
                                                                    switch (chars[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 21, "000M", 0, 4, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK11000M;
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK1200M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK1500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    switch (chars[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 21, "000M", 0, 4, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK21000M;
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK2200M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK2500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '4':
                                                                    switch (chars[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 21, "000M", 0, 4, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK41000M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 21, "00M", 0, 3, false) == 0) && (chars.Length == 24))
                                                                                return TypeValueKnownValues.Value_CanoeingMensSprintK4500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 9, "omensS", 0, 6, false) == 0)
                                      {
                                        switch (chars[15])
                                          {
                                            case 'l':
                                                if (String.Compare(chars, 16, "alom", 0, 4, false) == 0)
                                                  {
                                                    switch (chars[20])
                                                      {
                                                        case 'C':
                                                            if ((String.Compare(chars, 21, "1", 0, 1, false) == 0) && (chars.Length == 22))
                                                                return TypeValueKnownValues.Value_CanoeingWomensSlalomC1;
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(chars, 21, "1", 0, 1, false) == 0) && (chars.Length == 22))
                                                                return TypeValueKnownValues.Value_CanoeingWomensSlalomK1;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'p':
                                                if (String.Compare(chars, 16, "rint", 0, 4, false) == 0)
                                                  {
                                                    switch (chars[20])
                                                      {
                                                        case 'C':
                                                            switch (chars[21])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(chars, 22, "200M", 0, 4, false) == 0) && (chars.Length == 26))
                                                                        return TypeValueKnownValues.Value_CanoeingWomensSprintC1200M;
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(chars, 22, "500M", 0, 4, false) == 0) && (chars.Length == 26))
                                                                        return TypeValueKnownValues.Value_CanoeingWomensSprintC2500M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'K':
                                                            switch (chars[21])
                                                              {
                                                                case '1':
                                                                    switch (chars[22])
                                                                      {
                                                                        case '2':
                                                                            if ((String.Compare(chars, 23, "00M", 0, 3, false) == 0) && (chars.Length == 26))
                                                                                return TypeValueKnownValues.Value_CanoeingWomensSprintK1200M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 23, "00M", 0, 3, false) == 0) && (chars.Length == 26))
                                                                                return TypeValueKnownValues.Value_CanoeingWomensSprintK1500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(chars, 22, "500M", 0, 4, false) == 0) && (chars.Length == 26))
                                                                        return TypeValueKnownValues.Value_CanoeingWomensSprintK2500M;
                                                                    break;
                                                                case '4':
                                                                    if ((String.Compare(chars, 22, "500M", 0, 4, false) == 0) && (chars.Length == 26))
                                                                        return TypeValueKnownValues.Value_CanoeingWomensSprintK4500M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(chars, 2, "ossCountrySkiing", 0, 16, false) == 0)
                          {
                            switch (chars[18])
                              {
                                case 'M':
                                    if (String.Compare(chars, 19, "ens", 0, 3, false) == 0)
                                      {
                                        switch (chars[22])
                                          {
                                            case '1':
                                                switch (chars[23])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(chars, 24, "KMClassical", 0, 11, false) == 0) && (chars.Length == 35))
                                                            return TypeValueKnownValues.Value_CrossCountrySkiingMens10KMClassical;
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(chars, 24, "KMClassical", 0, 11, false) == 0) && (chars.Length == 35))
                                                            return TypeValueKnownValues.Value_CrossCountrySkiingMens15KMClassical;
                                                        break;
                                                    case '8':
                                                        if ((String.Compare(chars, 24, "KM", 0, 2, false) == 0) && (chars.Length == 26))
                                                            return TypeValueKnownValues.Value_CrossCountrySkiingMens18KM;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '2':
                                                if ((String.Compare(chars, 23, "X10KMPursuit", 0, 12, false) == 0) && (chars.Length == 35))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingMens2X10KMPursuit;
                                                break;
                                            case '3':
                                                if ((String.Compare(chars, 23, "0KMSkiathlon", 0, 12, false) == 0) && (chars.Length == 35))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingMens30KMSkiathlon;
                                                break;
                                            case '4':
                                                if ((String.Compare(chars, 23, "X10KMRelay", 0, 10, false) == 0) && (chars.Length == 33))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingMens4X10KMRelay;
                                                break;
                                            case '5':
                                                if ((String.Compare(chars, 23, "0KMFreestyle", 0, 12, false) == 0) && (chars.Length == 35))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingMens50KMFreestyle;
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 23, "print", 0, 5, false) == 0) && (chars.Length == 28))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingMensSprint;
                                                break;
                                            case 'T':
                                                if ((String.Compare(chars, 23, "eamSprint", 0, 9, false) == 0) && (chars.Length == 32))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingMensTeamSprint;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 19, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[24])
                                          {
                                            case '1':
                                                switch (chars[25])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(chars, 26, "KMClassical", 0, 11, false) == 0) && (chars.Length == 37))
                                                            return TypeValueKnownValues.Value_CrossCountrySkiingWomens10KMClassical;
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(chars, 26, "KMSkiathlon", 0, 11, false) == 0) && (chars.Length == 37))
                                                            return TypeValueKnownValues.Value_CrossCountrySkiingWomens15KMSkiathlon;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '2':
                                                switch (chars[25])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(chars, 26, "KM", 0, 2, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_CrossCountrySkiingWomens20KM;
                                                        break;
                                                    case 'X':
                                                        if ((String.Compare(chars, 26, "5KMPursuit", 0, 10, false) == 0) && (chars.Length == 36))
                                                            return TypeValueKnownValues.Value_CrossCountrySkiingWomens2X5KMPursuit;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '3':
                                                if ((String.Compare(chars, 25, "0KMFreestyle", 0, 12, false) == 0) && (chars.Length == 37))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingWomens30KMFreestyle;
                                                break;
                                            case '4':
                                                if ((String.Compare(chars, 25, "X5KMRelay", 0, 9, false) == 0) && (chars.Length == 34))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingWomens4X5KMRelay;
                                                break;
                                            case '5':
                                                if ((String.Compare(chars, 25, "KM", 0, 2, false) == 0) && (chars.Length == 27))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingWomens5KM;
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 25, "print", 0, 5, false) == 0) && (chars.Length == 30))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingWomensSprint;
                                                break;
                                            case 'T':
                                                if ((String.Compare(chars, 25, "eamSprint", 0, 9, false) == 0) && (chars.Length == 34))
                                                    return TypeValueKnownValues.Value_CrossCountrySkiingWomensTeamSprint;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'u':
                        if (String.Compare(chars, 2, "rling", 0, 5, false) == 0)
                          {
                            switch (chars[7])
                              {
                                case 'M':
                                    switch (chars[8])
                                      {
                                        case 'e':
                                            if ((String.Compare(chars, 9, "ns", 0, 2, false) == 0) && (chars.Length == 11))
                                                return TypeValueKnownValues.Value_CurlingMens;
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 9, "xedDoubles", 0, 10, false) == 0) && (chars.Length == 19))
                                                return TypeValueKnownValues.Value_CurlingMixedDoubles;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if ((String.Compare(chars, 8, "omens", 0, 5, false) == 0) && (chars.Length == 13))
                                        return TypeValueKnownValues.Value_CurlingWomens;
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'y':
                        if (String.Compare(chars, 2, "cling", 0, 5, false) == 0)
                          {
                            switch (chars[7])
                              {
                                case 'M':
                                    if (String.Compare(chars, 8, "ens", 0, 3, false) == 0)
                                      {
                                        switch (chars[11])
                                          {
                                            case 'B':
                                                if (String.Compare(chars, 12, "MX", 0, 2, false) == 0)
                                                  {
                                                    if (chars.Length == 14)
                                                      {
                                                        return TypeValueKnownValues.Value_CyclingMensBMX;
                                                      }
                                                    switch (chars[14])
                                                      {
                                                        case 'F':
                                                            if ((String.Compare(chars, 15, "reestyle", 0, 8, false) == 0) && (chars.Length == 23))
                                                                return TypeValueKnownValues.Value_CyclingMensBMXFreestyle;
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(chars, 15, "ace", 0, 3, false) == 0) && (chars.Length == 18))
                                                                return TypeValueKnownValues.Value_CyclingMensBMXRace;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 12, "ountainBikingCrossCountry", 0, 25, false) == 0) && (chars.Length == 37))
                                                    return TypeValueKnownValues.Value_CyclingMensMountainBikingCrossCountry;
                                                break;
                                            case 'R':
                                                if (String.Compare(chars, 12, "oadCycling", 0, 10, false) == 0)
                                                  {
                                                    switch (chars[22])
                                                      {
                                                        case 'R':
                                                            if ((String.Compare(chars, 23, "oadRace", 0, 7, false) == 0) && (chars.Length == 30))
                                                                return TypeValueKnownValues.Value_CyclingMensRoadCyclingRoadRace;
                                                            break;
                                                        case 'T':
                                                            switch (chars[23])
                                                              {
                                                                case 'e':
                                                                    if ((String.Compare(chars, 24, "amTimeTrial", 0, 11, false) == 0) && (chars.Length == 35))
                                                                        return TypeValueKnownValues.Value_CyclingMensRoadCyclingTeamTimeTrial;
                                                                    break;
                                                                case 'i':
                                                                    if ((String.Compare(chars, 24, "meTrial", 0, 7, false) == 0) && (chars.Length == 31))
                                                                        return TypeValueKnownValues.Value_CyclingMensRoadCyclingTimeTrial;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(chars, 12, "rackCycling", 0, 11, false) == 0)
                                                  {
                                                    switch (chars[23])
                                                      {
                                                        case 'I':
                                                            if (String.Compare(chars, 24, "ndividual", 0, 9, false) == 0)
                                                              {
                                                                switch (chars[33])
                                                                  {
                                                                    case 'P':
                                                                        if ((String.Compare(chars, 34, "ursuit", 0, 6, false) == 0) && (chars.Length == 40))
                                                                            return TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualPursuit;
                                                                        break;
                                                                    case 'S':
                                                                        if ((String.Compare(chars, 34, "print", 0, 5, false) == 0) && (chars.Length == 39))
                                                                            return TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualSprint;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(chars, 24, "eirin", 0, 5, false) == 0) && (chars.Length == 29))
                                                                return TypeValueKnownValues.Value_CyclingMensTrackCyclingKeirin;
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(chars, 24, "adison", 0, 6, false) == 0) && (chars.Length == 30))
                                                                return TypeValueKnownValues.Value_CyclingMensTrackCyclingMadison;
                                                            break;
                                                        case 'O':
                                                            if ((String.Compare(chars, 24, "mnium", 0, 5, false) == 0) && (chars.Length == 29))
                                                                return TypeValueKnownValues.Value_CyclingMensTrackCyclingOmnium;
                                                            break;
                                                        case 'P':
                                                            if ((String.Compare(chars, 24, "ointsRace", 0, 9, false) == 0) && (chars.Length == 33))
                                                                return TypeValueKnownValues.Value_CyclingMensTrackCyclingPointsRace;
                                                            break;
                                                        case 'T':
                                                            switch (chars[24])
                                                              {
                                                                case 'e':
                                                                    if (String.Compare(chars, 25, "am", 0, 2, false) == 0)
                                                                      {
                                                                        switch (chars[27])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(chars, 28, "ursuit", 0, 6, false) == 0) && (chars.Length == 34))
                                                                                    return TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamPursuit;
                                                                                break;
                                                                            case 'S':
                                                                                if ((String.Compare(chars, 28, "print", 0, 5, false) == 0) && (chars.Length == 33))
                                                                                    return TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamSprint;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'i':
                                                                    if ((String.Compare(chars, 25, "meTrial", 0, 7, false) == 0) && (chars.Length == 32))
                                                                        return TypeValueKnownValues.Value_CyclingMensTrackCyclingTimeTrial;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 8, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[13])
                                          {
                                            case 'B':
                                                if (String.Compare(chars, 14, "MX", 0, 2, false) == 0)
                                                  {
                                                    if (chars.Length == 16)
                                                      {
                                                        return TypeValueKnownValues.Value_CyclingWomensBMX;
                                                      }
                                                    switch (chars[16])
                                                      {
                                                        case 'F':
                                                            if ((String.Compare(chars, 17, "reestyle", 0, 8, false) == 0) && (chars.Length == 25))
                                                                return TypeValueKnownValues.Value_CyclingWomensBMXFreestyle;
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(chars, 17, "ace", 0, 3, false) == 0) && (chars.Length == 20))
                                                                return TypeValueKnownValues.Value_CyclingWomensBMXRace;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 14, "ountainBikingCrossCountry", 0, 25, false) == 0) && (chars.Length == 39))
                                                    return TypeValueKnownValues.Value_CyclingWomensMountainBikingCrossCountry;
                                                break;
                                            case 'R':
                                                if (String.Compare(chars, 14, "oadCycling", 0, 10, false) == 0)
                                                  {
                                                    switch (chars[24])
                                                      {
                                                        case 'R':
                                                            if ((String.Compare(chars, 25, "oadRace", 0, 7, false) == 0) && (chars.Length == 32))
                                                                return TypeValueKnownValues.Value_CyclingWomensRoadCyclingRoadRace;
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(chars, 25, "imeTrial", 0, 8, false) == 0) && (chars.Length == 33))
                                                                return TypeValueKnownValues.Value_CyclingWomensRoadCyclingTimeTrial;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(chars, 14, "rackCycling", 0, 11, false) == 0)
                                                  {
                                                    switch (chars[25])
                                                      {
                                                        case 'I':
                                                            if (String.Compare(chars, 26, "ndividual", 0, 9, false) == 0)
                                                              {
                                                                switch (chars[35])
                                                                  {
                                                                    case 'P':
                                                                        if ((String.Compare(chars, 36, "ursuit", 0, 6, false) == 0) && (chars.Length == 42))
                                                                            return TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualPursuit;
                                                                        break;
                                                                    case 'S':
                                                                        if ((String.Compare(chars, 36, "print", 0, 5, false) == 0) && (chars.Length == 41))
                                                                            return TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualSprint;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(chars, 26, "eirin", 0, 5, false) == 0) && (chars.Length == 31))
                                                                return TypeValueKnownValues.Value_CyclingWomensTrackCyclingKeirin;
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(chars, 26, "adison", 0, 6, false) == 0) && (chars.Length == 32))
                                                                return TypeValueKnownValues.Value_CyclingWomensTrackCyclingMadison;
                                                            break;
                                                        case 'O':
                                                            if ((String.Compare(chars, 26, "mnium", 0, 5, false) == 0) && (chars.Length == 31))
                                                                return TypeValueKnownValues.Value_CyclingWomensTrackCyclingOmnium;
                                                            break;
                                                        case 'P':
                                                            if ((String.Compare(chars, 26, "ointsRace", 0, 9, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_CyclingWomensTrackCyclingPointsRace;
                                                            break;
                                                        case 'T':
                                                            switch (chars[26])
                                                              {
                                                                case 'e':
                                                                    if (String.Compare(chars, 27, "am", 0, 2, false) == 0)
                                                                      {
                                                                        switch (chars[29])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(chars, 30, "ursuit", 0, 6, false) == 0) && (chars.Length == 36))
                                                                                    return TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamPursuit;
                                                                                break;
                                                                            case 'S':
                                                                                if ((String.Compare(chars, 30, "print", 0, 5, false) == 0) && (chars.Length == 35))
                                                                                    return TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamSprint;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'i':
                                                                    if ((String.Compare(chars, 27, "meTrial", 0, 7, false) == 0) && (chars.Length == 34))
                                                                        return TypeValueKnownValues.Value_CyclingWomensTrackCyclingTimeTrial;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'D':
                if (String.Compare(chars, 1, "iving", 0, 5, false) == 0)
                  {
                    switch (chars[6])
                      {
                        case 'M':
                            if (String.Compare(chars, 7, "ens", 0, 3, false) == 0)
                              {
                                switch (chars[10])
                                  {
                                    case 'P':
                                        if ((String.Compare(chars, 11, "latform", 0, 7, false) == 0) && (chars.Length == 18))
                                            return TypeValueKnownValues.Value_DivingMensPlatform;
                                        break;
                                    case 'S':
                                        switch (chars[11])
                                          {
                                            case 'p':
                                                if ((String.Compare(chars, 12, "ringboard", 0, 9, false) == 0) && (chars.Length == 21))
                                                    return TypeValueKnownValues.Value_DivingMensSpringboard;
                                                break;
                                            case 'y':
                                                if (String.Compare(chars, 12, "nchronized", 0, 10, false) == 0)
                                                  {
                                                    switch (chars[22])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(chars, 23, "latform", 0, 7, false) == 0) && (chars.Length == 30))
                                                                return TypeValueKnownValues.Value_DivingMensSynchronizedPlatform;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 23, "pringboard", 0, 10, false) == 0) && (chars.Length == 33))
                                                                return TypeValueKnownValues.Value_DivingMensSynchronizedSpringboard;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'W':
                            if (String.Compare(chars, 7, "omens", 0, 5, false) == 0)
                              {
                                switch (chars[12])
                                  {
                                    case 'P':
                                        if ((String.Compare(chars, 13, "latform", 0, 7, false) == 0) && (chars.Length == 20))
                                            return TypeValueKnownValues.Value_DivingWomensPlatform;
                                        break;
                                    case 'S':
                                        switch (chars[13])
                                          {
                                            case 'p':
                                                if ((String.Compare(chars, 14, "ringboard", 0, 9, false) == 0) && (chars.Length == 23))
                                                    return TypeValueKnownValues.Value_DivingWomensSpringboard;
                                                break;
                                            case 'y':
                                                if (String.Compare(chars, 14, "nchronized", 0, 10, false) == 0)
                                                  {
                                                    switch (chars[24])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(chars, 25, "latform", 0, 7, false) == 0) && (chars.Length == 32))
                                                                return TypeValueKnownValues.Value_DivingWomensSynchronizedPlatform;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 25, "pringboard", 0, 10, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_DivingWomensSynchronizedSpringboard;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'E':
                if (String.Compare(chars, 1, "questrian", 0, 9, false) == 0)
                  {
                    switch (chars[10])
                      {
                        case 'I':
                            if (String.Compare(chars, 11, "ndividual", 0, 9, false) == 0)
                              {
                                switch (chars[20])
                                  {
                                    case 'D':
                                        if ((String.Compare(chars, 21, "ressage", 0, 7, false) == 0) && (chars.Length == 28))
                                            return TypeValueKnownValues.Value_EquestrianIndividualDressage;
                                        break;
                                    case 'E':
                                        if ((String.Compare(chars, 21, "venting", 0, 7, false) == 0) && (chars.Length == 28))
                                            return TypeValueKnownValues.Value_EquestrianIndividualEventing;
                                        break;
                                    case 'J':
                                        if ((String.Compare(chars, 21, "umping", 0, 6, false) == 0) && (chars.Length == 27))
                                            return TypeValueKnownValues.Value_EquestrianIndividualJumping;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'T':
                            if (String.Compare(chars, 11, "eam", 0, 3, false) == 0)
                              {
                                switch (chars[14])
                                  {
                                    case 'D':
                                        if ((String.Compare(chars, 15, "ressage", 0, 7, false) == 0) && (chars.Length == 22))
                                            return TypeValueKnownValues.Value_EquestrianTeamDressage;
                                        break;
                                    case 'E':
                                        if ((String.Compare(chars, 15, "venting", 0, 7, false) == 0) && (chars.Length == 22))
                                            return TypeValueKnownValues.Value_EquestrianTeamEventing;
                                        break;
                                    case 'J':
                                        if ((String.Compare(chars, 15, "umping", 0, 6, false) == 0) && (chars.Length == 21))
                                            return TypeValueKnownValues.Value_EquestrianTeamJumping;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'F':
                switch (chars[1])
                  {
                    case 'e':
                        if (String.Compare(chars, 2, "ncing", 0, 5, false) == 0)
                          {
                            switch (chars[7])
                              {
                                case 'M':
                                    if (String.Compare(chars, 8, "ens", 0, 3, false) == 0)
                                      {
                                        switch (chars[11])
                                          {
                                            case 'I':
                                                if (String.Compare(chars, 12, "ndividual", 0, 9, false) == 0)
                                                  {
                                                    switch (chars[21])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(chars, 22, "pee", 0, 3, false) == 0) && (chars.Length == 25))
                                                                return TypeValueKnownValues.Value_FencingMensIndividualEpee;
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(chars, 22, "oil", 0, 3, false) == 0) && (chars.Length == 25))
                                                                return TypeValueKnownValues.Value_FencingMensIndividualFoil;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 22, "abre", 0, 4, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_FencingMensIndividualSabre;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(chars, 12, "eam", 0, 3, false) == 0)
                                                  {
                                                    switch (chars[15])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(chars, 16, "pee", 0, 3, false) == 0) && (chars.Length == 19))
                                                                return TypeValueKnownValues.Value_FencingMensTeamEpee;
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(chars, 16, "oil", 0, 3, false) == 0) && (chars.Length == 19))
                                                                return TypeValueKnownValues.Value_FencingMensTeamFoil;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 16, "abre", 0, 4, false) == 0) && (chars.Length == 20))
                                                                return TypeValueKnownValues.Value_FencingMensTeamSabre;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 8, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[13])
                                          {
                                            case 'I':
                                                if (String.Compare(chars, 14, "ndividual", 0, 9, false) == 0)
                                                  {
                                                    switch (chars[23])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(chars, 24, "pee", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_FencingWomensIndividualEpee;
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(chars, 24, "oil", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_FencingWomensIndividualFoil;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 24, "abre", 0, 4, false) == 0) && (chars.Length == 28))
                                                                return TypeValueKnownValues.Value_FencingWomensIndividualSabre;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(chars, 14, "eam", 0, 3, false) == 0)
                                                  {
                                                    switch (chars[17])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(chars, 18, "pee", 0, 3, false) == 0) && (chars.Length == 21))
                                                                return TypeValueKnownValues.Value_FencingWomensTeamEpee;
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(chars, 18, "oil", 0, 3, false) == 0) && (chars.Length == 21))
                                                                return TypeValueKnownValues.Value_FencingWomensTeamFoil;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 18, "abre", 0, 4, false) == 0) && (chars.Length == 22))
                                                                return TypeValueKnownValues.Value_FencingWomensTeamSabre;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'i':
                        switch (chars[2])
                          {
                            case 'e':
                                if (String.Compare(chars, 3, "ldHockey", 0, 8, false) == 0)
                                  {
                                    switch (chars[11])
                                      {
                                        case 'M':
                                            if ((String.Compare(chars, 12, "ens", 0, 3, false) == 0) && (chars.Length == 15))
                                                return TypeValueKnownValues.Value_FieldHockeyMens;
                                            break;
                                        case 'W':
                                            if ((String.Compare(chars, 12, "omens", 0, 5, false) == 0) && (chars.Length == 17))
                                                return TypeValueKnownValues.Value_FieldHockeyWomens;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'g':
                                if (String.Compare(chars, 3, "ureSkating", 0, 10, false) == 0)
                                  {
                                    switch (chars[13])
                                      {
                                        case 'I':
                                            if ((String.Compare(chars, 14, "ceDancing", 0, 9, false) == 0) && (chars.Length == 23))
                                                return TypeValueKnownValues.Value_FigureSkatingIceDancing;
                                            break;
                                        case 'M':
                                            if ((String.Compare(chars, 14, "ensSingles", 0, 10, false) == 0) && (chars.Length == 24))
                                                return TypeValueKnownValues.Value_FigureSkatingMensSingles;
                                            break;
                                        case 'P':
                                            if ((String.Compare(chars, 14, "air", 0, 3, false) == 0) && (chars.Length == 17))
                                                return TypeValueKnownValues.Value_FigureSkatingPair;
                                            break;
                                        case 'T':
                                            if ((String.Compare(chars, 14, "eamTrophy", 0, 9, false) == 0) && (chars.Length == 23))
                                                return TypeValueKnownValues.Value_FigureSkatingTeamTrophy;
                                            break;
                                        case 'W':
                                            if ((String.Compare(chars, 14, "omensSingles", 0, 12, false) == 0) && (chars.Length == 26))
                                                return TypeValueKnownValues.Value_FigureSkatingWomensSingles;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'o':
                        if (String.Compare(chars, 2, "otball", 0, 6, false) == 0)
                          {
                            switch (chars[8])
                              {
                                case 'M':
                                    if ((String.Compare(chars, 9, "ens", 0, 3, false) == 0) && (chars.Length == 12))
                                        return TypeValueKnownValues.Value_FootballMens;
                                    break;
                                case 'W':
                                    if ((String.Compare(chars, 9, "omens", 0, 5, false) == 0) && (chars.Length == 14))
                                        return TypeValueKnownValues.Value_FootballWomens;
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(chars, 2, "eestyleSkiing", 0, 13, false) == 0)
                          {
                            switch (chars[15])
                              {
                                case 'M':
                                    switch (chars[16])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 17, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[19])
                                                  {
                                                    case 'A':
                                                        if ((String.Compare(chars, 20, "erials", 0, 6, false) == 0) && (chars.Length == 26))
                                                            return TypeValueKnownValues.Value_FreestyleSkiingMensAerials;
                                                        break;
                                                    case 'B':
                                                        if ((String.Compare(chars, 20, "igAir", 0, 5, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_FreestyleSkiingMensBigAir;
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(chars, 20, "alfpipe", 0, 7, false) == 0) && (chars.Length == 27))
                                                            return TypeValueKnownValues.Value_FreestyleSkiingMensHalfpipe;
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(chars, 20, "oguls", 0, 5, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_FreestyleSkiingMensMoguls;
                                                        break;
                                                    case 'S':
                                                        switch (chars[20])
                                                          {
                                                            case 'k':
                                                                if ((String.Compare(chars, 21, "iCross", 0, 6, false) == 0) && (chars.Length == 27))
                                                                    return TypeValueKnownValues.Value_FreestyleSkiingMensSkiCross;
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(chars, 21, "opestyle", 0, 8, false) == 0) && (chars.Length == 29))
                                                                    return TypeValueKnownValues.Value_FreestyleSkiingMensSlopestyle;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 17, "xedTeamAerials", 0, 14, false) == 0) && (chars.Length == 31))
                                                return TypeValueKnownValues.Value_FreestyleSkiingMixedTeamAerials;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 16, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[21])
                                          {
                                            case 'A':
                                                if ((String.Compare(chars, 22, "erials", 0, 6, false) == 0) && (chars.Length == 28))
                                                    return TypeValueKnownValues.Value_FreestyleSkiingWomensAerials;
                                                break;
                                            case 'B':
                                                if ((String.Compare(chars, 22, "igAir", 0, 5, false) == 0) && (chars.Length == 27))
                                                    return TypeValueKnownValues.Value_FreestyleSkiingWomensBigAir;
                                                break;
                                            case 'H':
                                                if ((String.Compare(chars, 22, "alfpipe", 0, 7, false) == 0) && (chars.Length == 29))
                                                    return TypeValueKnownValues.Value_FreestyleSkiingWomensHalfpipe;
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 22, "oguls", 0, 5, false) == 0) && (chars.Length == 27))
                                                    return TypeValueKnownValues.Value_FreestyleSkiingWomensMoguls;
                                                break;
                                            case 'S':
                                                switch (chars[22])
                                                  {
                                                    case 'k':
                                                        if ((String.Compare(chars, 23, "iCross", 0, 6, false) == 0) && (chars.Length == 29))
                                                            return TypeValueKnownValues.Value_FreestyleSkiingWomensSkiCross;
                                                        break;
                                                    case 'l':
                                                        if ((String.Compare(chars, 23, "opestyle", 0, 8, false) == 0) && (chars.Length == 31))
                                                            return TypeValueKnownValues.Value_FreestyleSkiingWomensSlopestyle;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'G':
                switch (chars[1])
                  {
                    case 'o':
                        if (String.Compare(chars, 2, "lf", 0, 2, false) == 0)
                          {
                            switch (chars[4])
                              {
                                case 'M':
                                    if ((String.Compare(chars, 5, "ensIndividual", 0, 13, false) == 0) && (chars.Length == 18))
                                        return TypeValueKnownValues.Value_GolfMensIndividual;
                                    break;
                                case 'W':
                                    if ((String.Compare(chars, 5, "omensIndividual", 0, 15, false) == 0) && (chars.Length == 20))
                                        return TypeValueKnownValues.Value_GolfWomensIndividual;
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'y':
                        if (String.Compare(chars, 2, "mnastics", 0, 8, false) == 0)
                          {
                            switch (chars[10])
                              {
                                case 'M':
                                    if (String.Compare(chars, 11, "ens", 0, 3, false) == 0)
                                      {
                                        switch (chars[14])
                                          {
                                            case 'A':
                                                if (String.Compare(chars, 15, "rtistic", 0, 7, false) == 0)
                                                  {
                                                    switch (chars[22])
                                                      {
                                                        case 'F':
                                                            if ((String.Compare(chars, 23, "loorExercise", 0, 12, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_GymnasticsMensArtisticFloorExercise;
                                                            break;
                                                        case 'H':
                                                            if ((String.Compare(chars, 23, "orizontalBar", 0, 12, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_GymnasticsMensArtisticHorizontalBar;
                                                            break;
                                                        case 'I':
                                                            if ((String.Compare(chars, 23, "ndividualAllAround", 0, 18, false) == 0) && (chars.Length == 41))
                                                                return TypeValueKnownValues.Value_GymnasticsMensArtisticIndividualAllAround;
                                                            break;
                                                        case 'P':
                                                            switch (chars[23])
                                                              {
                                                                case 'a':
                                                                    if ((String.Compare(chars, 24, "rallelBars", 0, 10, false) == 0) && (chars.Length == 34))
                                                                        return TypeValueKnownValues.Value_GymnasticsMensArtisticParallelBars;
                                                                    break;
                                                                case 'o':
                                                                    if ((String.Compare(chars, 24, "mmelHorse", 0, 9, false) == 0) && (chars.Length == 33))
                                                                        return TypeValueKnownValues.Value_GymnasticsMensArtisticPommelHorse;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(chars, 23, "ings", 0, 4, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_GymnasticsMensArtisticRings;
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(chars, 23, "eamAllAround", 0, 12, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_GymnasticsMensArtisticTeamAllAround;
                                                            break;
                                                        case 'V':
                                                            if ((String.Compare(chars, 23, "ault", 0, 4, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_GymnasticsMensArtisticVault;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if ((String.Compare(chars, 15, "rampolineIndividual", 0, 19, false) == 0) && (chars.Length == 34))
                                                    return TypeValueKnownValues.Value_GymnasticsMensTrampolineIndividual;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 11, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[16])
                                          {
                                            case 'A':
                                                if (String.Compare(chars, 17, "rtistic", 0, 7, false) == 0)
                                                  {
                                                    switch (chars[24])
                                                      {
                                                        case 'B':
                                                            if ((String.Compare(chars, 25, "alanceBeam", 0, 10, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensArtisticBalanceBeam;
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(chars, 25, "loorExercise", 0, 12, false) == 0) && (chars.Length == 37))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensArtisticFloorExercise;
                                                            break;
                                                        case 'I':
                                                            if ((String.Compare(chars, 25, "ndividualAllAround", 0, 18, false) == 0) && (chars.Length == 43))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensArtisticIndividualAllAround;
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(chars, 25, "eamAllAround", 0, 12, false) == 0) && (chars.Length == 37))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensArtisticTeamAllAround;
                                                            break;
                                                        case 'U':
                                                            if ((String.Compare(chars, 25, "nevenBars", 0, 9, false) == 0) && (chars.Length == 34))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensArtisticUnevenBars;
                                                            break;
                                                        case 'V':
                                                            if ((String.Compare(chars, 25, "ault", 0, 4, false) == 0) && (chars.Length == 29))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensArtisticVault;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'R':
                                                if (String.Compare(chars, 17, "hythmic", 0, 7, false) == 0)
                                                  {
                                                    switch (chars[24])
                                                      {
                                                        case 'G':
                                                            if ((String.Compare(chars, 25, "roupAllAround", 0, 13, false) == 0) && (chars.Length == 38))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensRhythmicGroupAllAround;
                                                            break;
                                                        case 'I':
                                                            if ((String.Compare(chars, 25, "ndividualAllAround", 0, 18, false) == 0) && (chars.Length == 43))
                                                                return TypeValueKnownValues.Value_GymnasticsWomensRhythmicIndividualAllAround;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if ((String.Compare(chars, 17, "rampolineIndividual", 0, 19, false) == 0) && (chars.Length == 36))
                                                    return TypeValueKnownValues.Value_GymnasticsWomensTrampolineIndividual;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'H':
                if (String.Compare(chars, 1, "andball", 0, 7, false) == 0)
                  {
                    switch (chars[8])
                      {
                        case 'M':
                            if ((String.Compare(chars, 9, "ens", 0, 3, false) == 0) && (chars.Length == 12))
                                return TypeValueKnownValues.Value_HandballMens;
                            break;
                        case 'W':
                            if ((String.Compare(chars, 9, "omens", 0, 5, false) == 0) && (chars.Length == 14))
                                return TypeValueKnownValues.Value_HandballWomens;
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'I':
                if (String.Compare(chars, 1, "ceHockey", 0, 8, false) == 0)
                  {
                    switch (chars[9])
                      {
                        case 'M':
                            if ((String.Compare(chars, 10, "ens", 0, 3, false) == 0) && (chars.Length == 13))
                                return TypeValueKnownValues.Value_IceHockeyMens;
                            break;
                        case 'W':
                            if ((String.Compare(chars, 10, "omens", 0, 5, false) == 0) && (chars.Length == 15))
                                return TypeValueKnownValues.Value_IceHockeyWomens;
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'J':
                if (String.Compare(chars, 1, "udo", 0, 3, false) == 0)
                  {
                    switch (chars[4])
                      {
                        case 'M':
                            switch (chars[5])
                              {
                                case 'e':
                                    if (String.Compare(chars, 6, "ns", 0, 2, false) == 0)
                                      {
                                        switch (chars[8])
                                          {
                                            case 'E':
                                                if ((String.Compare(chars, 9, "xtraLightweight", 0, 15, false) == 0) && (chars.Length == 24))
                                                    return TypeValueKnownValues.Value_JudoMensExtraLightweight;
                                                break;
                                            case 'H':
                                                switch (chars[9])
                                                  {
                                                    case 'a':
                                                        if (String.Compare(chars, 10, "lf", 0, 2, false) == 0)
                                                          {
                                                            switch (chars[12])
                                                              {
                                                                case 'H':
                                                                    if ((String.Compare(chars, 13, "eavyweight", 0, 10, false) == 0) && (chars.Length == 23))
                                                                        return TypeValueKnownValues.Value_JudoMensHalfHeavyweight;
                                                                    break;
                                                                case 'L':
                                                                    if ((String.Compare(chars, 13, "ightweight", 0, 10, false) == 0) && (chars.Length == 23))
                                                                        return TypeValueKnownValues.Value_JudoMensHalfLightweight;
                                                                    break;
                                                                case 'M':
                                                                    if ((String.Compare(chars, 13, "iddleweight", 0, 11, false) == 0) && (chars.Length == 24))
                                                                        return TypeValueKnownValues.Value_JudoMensHalfMiddleweight;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'e':
                                                        if ((String.Compare(chars, 10, "avyweight", 0, 9, false) == 0) && (chars.Length == 19))
                                                            return TypeValueKnownValues.Value_JudoMensHeavyweight;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'L':
                                                if ((String.Compare(chars, 9, "ightweight", 0, 10, false) == 0) && (chars.Length == 19))
                                                    return TypeValueKnownValues.Value_JudoMensLightweight;
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 9, "iddleweight", 0, 11, false) == 0) && (chars.Length == 20))
                                                    return TypeValueKnownValues.Value_JudoMensMiddleweight;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if ((String.Compare(chars, 6, "xedTeam", 0, 7, false) == 0) && (chars.Length == 13))
                                        return TypeValueKnownValues.Value_JudoMixedTeam;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'W':
                            if (String.Compare(chars, 5, "omens", 0, 5, false) == 0)
                              {
                                switch (chars[10])
                                  {
                                    case 'E':
                                        if ((String.Compare(chars, 11, "xtraLightweight", 0, 15, false) == 0) && (chars.Length == 26))
                                            return TypeValueKnownValues.Value_JudoWomensExtraLightweight;
                                        break;
                                    case 'H':
                                        switch (chars[11])
                                          {
                                            case 'a':
                                                if (String.Compare(chars, 12, "lf", 0, 2, false) == 0)
                                                  {
                                                    switch (chars[14])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(chars, 15, "eavyweight", 0, 10, false) == 0) && (chars.Length == 25))
                                                                return TypeValueKnownValues.Value_JudoWomensHalfHeavyweight;
                                                            break;
                                                        case 'L':
                                                            if ((String.Compare(chars, 15, "ightweight", 0, 10, false) == 0) && (chars.Length == 25))
                                                                return TypeValueKnownValues.Value_JudoWomensHalfLightweight;
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(chars, 15, "iddleweight", 0, 11, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_JudoWomensHalfMiddleweight;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'e':
                                                if ((String.Compare(chars, 12, "avyweight", 0, 9, false) == 0) && (chars.Length == 21))
                                                    return TypeValueKnownValues.Value_JudoWomensHeavyweight;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'L':
                                        if ((String.Compare(chars, 11, "ightweight", 0, 10, false) == 0) && (chars.Length == 21))
                                            return TypeValueKnownValues.Value_JudoWomensLightweight;
                                        break;
                                    case 'M':
                                        if ((String.Compare(chars, 11, "iddleweight", 0, 11, false) == 0) && (chars.Length == 22))
                                            return TypeValueKnownValues.Value_JudoWomensMiddleweight;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'K':
                if (String.Compare(chars, 1, "arate", 0, 5, false) == 0)
                  {
                    switch (chars[6])
                      {
                        case 'M':
                            if (String.Compare(chars, 7, "ens", 0, 3, false) == 0)
                              {
                                switch (chars[10])
                                  {
                                    case '6':
                                        if ((String.Compare(chars, 11, "7Kg", 0, 3, false) == 0) && (chars.Length == 14))
                                            return TypeValueKnownValues.Value_KarateMens67Kg;
                                        break;
                                    case '7':
                                        if (String.Compare(chars, 11, "5Kg", 0, 3, false) == 0)
                                          {
                                            if (chars.Length == 14)
                                              {
                                                return TypeValueKnownValues.Value_KarateMens75Kg;
                                              }
                                            switch (chars[14])
                                              {
                                                case 'P':
                                                    if ((String.Compare(chars, 15, "lus", 0, 3, false) == 0) && (chars.Length == 18))
                                                        return TypeValueKnownValues.Value_KarateMens75KgPlus;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'K':
                                        if ((String.Compare(chars, 11, "ata", 0, 3, false) == 0) && (chars.Length == 14))
                                            return TypeValueKnownValues.Value_KarateMensKata;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'W':
                            if (String.Compare(chars, 7, "omens", 0, 5, false) == 0)
                              {
                                switch (chars[12])
                                  {
                                    case '5':
                                        if ((String.Compare(chars, 13, "5Kg", 0, 3, false) == 0) && (chars.Length == 16))
                                            return TypeValueKnownValues.Value_KarateWomens55Kg;
                                        break;
                                    case '6':
                                        if (String.Compare(chars, 13, "1Kg", 0, 3, false) == 0)
                                          {
                                            if (chars.Length == 16)
                                              {
                                                return TypeValueKnownValues.Value_KarateWomens61Kg;
                                              }
                                            switch (chars[16])
                                              {
                                                case 'P':
                                                    if ((String.Compare(chars, 17, "lus", 0, 3, false) == 0) && (chars.Length == 20))
                                                        return TypeValueKnownValues.Value_KarateWomens61KgPlus;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'K':
                                        if ((String.Compare(chars, 13, "ata", 0, 3, false) == 0) && (chars.Length == 16))
                                            return TypeValueKnownValues.Value_KarateWomensKata;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'L':
                if (String.Compare(chars, 1, "uge", 0, 3, false) == 0)
                  {
                    switch (chars[4])
                      {
                        case 'D':
                            if ((String.Compare(chars, 5, "oubles", 0, 6, false) == 0) && (chars.Length == 11))
                                return TypeValueKnownValues.Value_LugeDoubles;
                            break;
                        case 'M':
                            if ((String.Compare(chars, 5, "ensSingles", 0, 10, false) == 0) && (chars.Length == 15))
                                return TypeValueKnownValues.Value_LugeMensSingles;
                            break;
                        case 'T':
                            if ((String.Compare(chars, 5, "eamRelay", 0, 8, false) == 0) && (chars.Length == 13))
                                return TypeValueKnownValues.Value_LugeTeamRelay;
                            break;
                        case 'W':
                            if ((String.Compare(chars, 5, "omensSingles", 0, 12, false) == 0) && (chars.Length == 17))
                                return TypeValueKnownValues.Value_LugeWomensSingles;
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'M':
                if (String.Compare(chars, 1, "odernPentathlon", 0, 15, false) == 0)
                  {
                    switch (chars[16])
                      {
                        case 'M':
                            if ((String.Compare(chars, 17, "ens", 0, 3, false) == 0) && (chars.Length == 20))
                                return TypeValueKnownValues.Value_ModernPentathlonMens;
                            break;
                        case 'W':
                            if ((String.Compare(chars, 17, "omens", 0, 5, false) == 0) && (chars.Length == 22))
                                return TypeValueKnownValues.Value_ModernPentathlonWomens;
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'N':
                if (String.Compare(chars, 1, "ordicCombined", 0, 13, false) == 0)
                  {
                    switch (chars[14])
                      {
                        case 'I':
                            if (String.Compare(chars, 15, "ndividual", 0, 9, false) == 0)
                              {
                                switch (chars[24])
                                  {
                                    case 'L':
                                        if ((String.Compare(chars, 25, "argeHill10KM", 0, 12, false) == 0) && (chars.Length == 37))
                                            return TypeValueKnownValues.Value_NordicCombinedIndividualLargeHill10KM;
                                        break;
                                    case 'N':
                                        if ((String.Compare(chars, 25, "ormalHill10KM", 0, 13, false) == 0) && (chars.Length == 38))
                                            return TypeValueKnownValues.Value_NordicCombinedIndividualNormalHill10KM;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'T':
                            if ((String.Compare(chars, 15, "eamLargeHill4X5KM", 0, 17, false) == 0) && (chars.Length == 32))
                                return TypeValueKnownValues.Value_NordicCombinedTeamLargeHill4X5KM;
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'R':
                switch (chars[1])
                  {
                    case 'o':
                        if (String.Compare(chars, 2, "wing", 0, 4, false) == 0)
                          {
                            switch (chars[6])
                              {
                                case 'M':
                                    if (String.Compare(chars, 7, "ens", 0, 3, false) == 0)
                                      {
                                        switch (chars[10])
                                          {
                                            case 'C':
                                                if (String.Compare(chars, 11, "ox", 0, 2, false) == 0)
                                                  {
                                                    switch (chars[13])
                                                      {
                                                        case 'e':
                                                            if (String.Compare(chars, 14, "d", 0, 1, false) == 0)
                                                              {
                                                                switch (chars[15])
                                                                  {
                                                                    case 'E':
                                                                        if ((String.Compare(chars, 16, "ight", 0, 4, false) == 0) && (chars.Length == 20))
                                                                            return TypeValueKnownValues.Value_RowingMensCoxedEight;
                                                                        break;
                                                                    case 'F':
                                                                        if ((String.Compare(chars, 16, "our", 0, 3, false) == 0) && (chars.Length == 19))
                                                                            return TypeValueKnownValues.Value_RowingMensCoxedFour;
                                                                        break;
                                                                    case 'P':
                                                                        if ((String.Compare(chars, 16, "air", 0, 3, false) == 0) && (chars.Length == 19))
                                                                            return TypeValueKnownValues.Value_RowingMensCoxedPair;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'l':
                                                            if (String.Compare(chars, 14, "ess", 0, 3, false) == 0)
                                                              {
                                                                switch (chars[17])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(chars, 18, "our", 0, 3, false) == 0) && (chars.Length == 21))
                                                                            return TypeValueKnownValues.Value_RowingMensCoxlessFour;
                                                                        break;
                                                                    case 'P':
                                                                        if ((String.Compare(chars, 18, "air", 0, 3, false) == 0) && (chars.Length == 21))
                                                                            return TypeValueKnownValues.Value_RowingMensCoxlessPair;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'D':
                                                if ((String.Compare(chars, 11, "oubleSculls", 0, 11, false) == 0) && (chars.Length == 22))
                                                    return TypeValueKnownValues.Value_RowingMensDoubleSculls;
                                                break;
                                            case 'L':
                                                if (String.Compare(chars, 11, "ightweight", 0, 10, false) == 0)
                                                  {
                                                    switch (chars[21])
                                                      {
                                                        case 'C':
                                                            if ((String.Compare(chars, 22, "oxlessFour", 0, 10, false) == 0) && (chars.Length == 32))
                                                                return TypeValueKnownValues.Value_RowingMensLightweightCoxlessFour;
                                                            break;
                                                        case 'D':
                                                            if ((String.Compare(chars, 22, "oubleSculls", 0, 11, false) == 0) && (chars.Length == 33))
                                                                return TypeValueKnownValues.Value_RowingMensLightweightDoubleSculls;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'Q':
                                                if ((String.Compare(chars, 11, "uadrupleSculls", 0, 14, false) == 0) && (chars.Length == 25))
                                                    return TypeValueKnownValues.Value_RowingMensQuadrupleSculls;
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 11, "ingleSculls", 0, 11, false) == 0) && (chars.Length == 22))
                                                    return TypeValueKnownValues.Value_RowingMensSingleSculls;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 7, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[12])
                                          {
                                            case 'C':
                                                if (String.Compare(chars, 13, "ox", 0, 2, false) == 0)
                                                  {
                                                    switch (chars[15])
                                                      {
                                                        case 'e':
                                                            if (String.Compare(chars, 16, "d", 0, 1, false) == 0)
                                                              {
                                                                switch (chars[17])
                                                                  {
                                                                    case 'E':
                                                                        if ((String.Compare(chars, 18, "ight", 0, 4, false) == 0) && (chars.Length == 22))
                                                                            return TypeValueKnownValues.Value_RowingWomensCoxedEight;
                                                                        break;
                                                                    case 'F':
                                                                        if ((String.Compare(chars, 18, "our", 0, 3, false) == 0) && (chars.Length == 21))
                                                                            return TypeValueKnownValues.Value_RowingWomensCoxedFour;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'l':
                                                            if (String.Compare(chars, 16, "ess", 0, 3, false) == 0)
                                                              {
                                                                switch (chars[19])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(chars, 20, "our", 0, 3, false) == 0) && (chars.Length == 23))
                                                                            return TypeValueKnownValues.Value_RowingWomensCoxlessFour;
                                                                        break;
                                                                    case 'P':
                                                                        if ((String.Compare(chars, 20, "air", 0, 3, false) == 0) && (chars.Length == 23))
                                                                            return TypeValueKnownValues.Value_RowingWomensCoxlessPair;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'D':
                                                if ((String.Compare(chars, 13, "oubleSculls", 0, 11, false) == 0) && (chars.Length == 24))
                                                    return TypeValueKnownValues.Value_RowingWomensDoubleSculls;
                                                break;
                                            case 'L':
                                                if ((String.Compare(chars, 13, "ightweightDoubleSculls", 0, 22, false) == 0) && (chars.Length == 35))
                                                    return TypeValueKnownValues.Value_RowingWomensLightweightDoubleSculls;
                                                break;
                                            case 'Q':
                                                if ((String.Compare(chars, 13, "uadrupleSculls", 0, 14, false) == 0) && (chars.Length == 27))
                                                    return TypeValueKnownValues.Value_RowingWomensQuadrupleSculls;
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 13, "ingleSculls", 0, 11, false) == 0) && (chars.Length == 24))
                                                    return TypeValueKnownValues.Value_RowingWomensSingleSculls;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'u':
                        if (String.Compare(chars, 2, "gby", 0, 3, false) == 0)
                          {
                            switch (chars[5])
                              {
                                case 'M':
                                    if ((String.Compare(chars, 6, "ens", 0, 3, false) == 0) && (chars.Length == 9))
                                        return TypeValueKnownValues.Value_RugbyMens;
                                    break;
                                case 'W':
                                    if ((String.Compare(chars, 6, "omens", 0, 5, false) == 0) && (chars.Length == 11))
                                        return TypeValueKnownValues.Value_RugbyWomens;
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'S':
                switch (chars[1])
                  {
                    case 'a':
                        if (String.Compare(chars, 2, "iling", 0, 5, false) == 0)
                          {
                            switch (chars[7])
                              {
                                case 'M':
                                    switch (chars[8])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 9, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[11])
                                                  {
                                                    case '4':
                                                        switch (chars[12])
                                                          {
                                                            case '7':
                                                                if ((String.Compare(chars, 13, "0", 0, 1, false) == 0) && (chars.Length == 14))
                                                                    return TypeValueKnownValues.Value_SailingMens470;
                                                                break;
                                                            case '9':
                                                                if (String.Compare(chars, 13, "er", 0, 2, false) == 0)
                                                                  {
                                                                    if (chars.Length == 15)
                                                                      {
                                                                        return TypeValueKnownValues.Value_SailingMens49er;
                                                                      }
                                                                    switch (chars[15])
                                                                      {
                                                                        case 'F':
                                                                            if ((String.Compare(chars, 16, "X", 0, 1, false) == 0) && (chars.Length == 17))
                                                                                return TypeValueKnownValues.Value_SailingMens49erFX;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'F':
                                                        if ((String.Compare(chars, 12, "inn", 0, 3, false) == 0) && (chars.Length == 15))
                                                            return TypeValueKnownValues.Value_SailingMensFinn;
                                                        break;
                                                    case 'L':
                                                        if ((String.Compare(chars, 12, "aser", 0, 4, false) == 0) && (chars.Length == 16))
                                                            return TypeValueKnownValues.Value_SailingMensLaser;
                                                        break;
                                                    case 'R':
                                                        if ((String.Compare(chars, 12, "SX", 0, 2, false) == 0) && (chars.Length == 14))
                                                            return TypeValueKnownValues.Value_SailingMensRSX;
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(chars, 12, "tar", 0, 3, false) == 0) && (chars.Length == 15))
                                                            return TypeValueKnownValues.Value_SailingMensStar;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if (String.Compare(chars, 9, "xed", 0, 3, false) == 0)
                                              {
                                                switch (chars[12])
                                                  {
                                                    case '4':
                                                        if ((String.Compare(chars, 13, "9erFX", 0, 5, false) == 0) && (chars.Length == 18))
                                                            return TypeValueKnownValues.Value_SailingMixed49erFX;
                                                        break;
                                                    case 'F':
                                                        if ((String.Compare(chars, 13, "inn", 0, 3, false) == 0) && (chars.Length == 16))
                                                            return TypeValueKnownValues.Value_SailingMixedFinn;
                                                        break;
                                                    case 'N':
                                                        if ((String.Compare(chars, 13, "acra17", 0, 6, false) == 0) && (chars.Length == 19))
                                                            return TypeValueKnownValues.Value_SailingMixedNacra17;
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 13, "ornado", 0, 6, false) == 0) && (chars.Length == 19))
                                                            return TypeValueKnownValues.Value_SailingMixedTornado;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 8, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[13])
                                          {
                                            case '4':
                                                switch (chars[14])
                                                  {
                                                    case '7':
                                                        if ((String.Compare(chars, 15, "0", 0, 1, false) == 0) && (chars.Length == 16))
                                                            return TypeValueKnownValues.Value_SailingWomens470;
                                                        break;
                                                    case '9':
                                                        if ((String.Compare(chars, 15, "erFX", 0, 4, false) == 0) && (chars.Length == 19))
                                                            return TypeValueKnownValues.Value_SailingWomens49erFX;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'E':
                                                if ((String.Compare(chars, 14, "lliott6M", 0, 8, false) == 0) && (chars.Length == 22))
                                                    return TypeValueKnownValues.Value_SailingWomensElliott6M;
                                                break;
                                            case 'L':
                                                if (String.Compare(chars, 14, "aser", 0, 4, false) == 0)
                                                  {
                                                    if (chars.Length == 18)
                                                      {
                                                        return TypeValueKnownValues.Value_SailingWomensLaser;
                                                      }
                                                    switch (chars[18])
                                                      {
                                                        case 'R':
                                                            if ((String.Compare(chars, 19, "adial", 0, 5, false) == 0) && (chars.Length == 24))
                                                                return TypeValueKnownValues.Value_SailingWomensLaserRadial;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'R':
                                                if ((String.Compare(chars, 14, "SX", 0, 2, false) == 0) && (chars.Length == 16))
                                                    return TypeValueKnownValues.Value_SailingWomensRSX;
                                                break;
                                            case 'Y':
                                                if ((String.Compare(chars, 14, "ngling", 0, 6, false) == 0) && (chars.Length == 20))
                                                    return TypeValueKnownValues.Value_SailingWomensYngling;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'h':
                        if (String.Compare(chars, 2, "o", 0, 1, false) == 0)
                          {
                            switch (chars[3])
                              {
                                case 'o':
                                    if (String.Compare(chars, 4, "ting", 0, 4, false) == 0)
                                      {
                                        switch (chars[8])
                                          {
                                            case 'M':
                                                switch (chars[9])
                                                  {
                                                    case 'e':
                                                        if (String.Compare(chars, 10, "ns", 0, 2, false) == 0)
                                                          {
                                                            switch (chars[12])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(chars, 13, "0MRunningTarget", 0, 15, false) == 0) && (chars.Length == 28))
                                                                        return TypeValueKnownValues.Value_ShootingMens10MRunningTarget;
                                                                    break;
                                                                case 'A':
                                                                    if (String.Compare(chars, 13, "ir", 0, 2, false) == 0)
                                                                      {
                                                                        switch (chars[15])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(chars, 16, "istol10M", 0, 8, false) == 0) && (chars.Length == 24))
                                                                                    return TypeValueKnownValues.Value_ShootingMensAirPistol10M;
                                                                                break;
                                                                            case 'R':
                                                                                if ((String.Compare(chars, 16, "ifle10M", 0, 7, false) == 0) && (chars.Length == 23))
                                                                                    return TypeValueKnownValues.Value_ShootingMensAirRifle10M;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'D':
                                                                    if ((String.Compare(chars, 13, "oubleTrap", 0, 9, false) == 0) && (chars.Length == 22))
                                                                        return TypeValueKnownValues.Value_ShootingMensDoubleTrap;
                                                                    break;
                                                                case 'P':
                                                                    if ((String.Compare(chars, 13, "istol50M", 0, 8, false) == 0) && (chars.Length == 21))
                                                                        return TypeValueKnownValues.Value_ShootingMensPistol50M;
                                                                    break;
                                                                case 'R':
                                                                    switch (chars[13])
                                                                      {
                                                                        case 'a':
                                                                            if ((String.Compare(chars, 14, "pidFirePistol25M", 0, 16, false) == 0) && (chars.Length == 30))
                                                                                return TypeValueKnownValues.Value_ShootingMensRapidFirePistol25M;
                                                                            break;
                                                                        case 'i':
                                                                            if (String.Compare(chars, 14, "fle", 0, 3, false) == 0)
                                                                              {
                                                                                switch (chars[17])
                                                                                  {
                                                                                    case 'P':
                                                                                        if ((String.Compare(chars, 18, "rone50M", 0, 7, false) == 0) && (chars.Length == 25))
                                                                                            return TypeValueKnownValues.Value_ShootingMensRifleProne50M;
                                                                                        break;
                                                                                    case 'T':
                                                                                        if ((String.Compare(chars, 18, "hreePositions50M", 0, 16, false) == 0) && (chars.Length == 34))
                                                                                            return TypeValueKnownValues.Value_ShootingMensRifleThreePositions50M;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case 'S':
                                                                    if ((String.Compare(chars, 13, "keet", 0, 4, false) == 0) && (chars.Length == 17))
                                                                        return TypeValueKnownValues.Value_ShootingMensSkeet;
                                                                    break;
                                                                case 'T':
                                                                    if ((String.Compare(chars, 13, "rap", 0, 3, false) == 0) && (chars.Length == 16))
                                                                        return TypeValueKnownValues.Value_ShootingMensTrap;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'i':
                                                        if (String.Compare(chars, 10, "xed", 0, 3, false) == 0)
                                                          {
                                                            switch (chars[13])
                                                              {
                                                                case 'A':
                                                                    if (String.Compare(chars, 14, "ir", 0, 2, false) == 0)
                                                                      {
                                                                        switch (chars[16])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(chars, 17, "istolTeam", 0, 9, false) == 0) && (chars.Length == 26))
                                                                                    return TypeValueKnownValues.Value_ShootingMixedAirPistolTeam;
                                                                                break;
                                                                            case 'R':
                                                                                if ((String.Compare(chars, 17, "ifleTeam", 0, 8, false) == 0) && (chars.Length == 25))
                                                                                    return TypeValueKnownValues.Value_ShootingMixedAirRifleTeam;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'T':
                                                                    if ((String.Compare(chars, 14, "rapTeam", 0, 7, false) == 0) && (chars.Length == 21))
                                                                        return TypeValueKnownValues.Value_ShootingMixedTrapTeam;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'W':
                                                if (String.Compare(chars, 9, "omens", 0, 5, false) == 0)
                                                  {
                                                    switch (chars[14])
                                                      {
                                                        case 'A':
                                                            if (String.Compare(chars, 15, "ir", 0, 2, false) == 0)
                                                              {
                                                                switch (chars[17])
                                                                  {
                                                                    case 'P':
                                                                        if ((String.Compare(chars, 18, "istol10M", 0, 8, false) == 0) && (chars.Length == 26))
                                                                            return TypeValueKnownValues.Value_ShootingWomensAirPistol10M;
                                                                        break;
                                                                    case 'R':
                                                                        if ((String.Compare(chars, 18, "ifle10M", 0, 7, false) == 0) && (chars.Length == 25))
                                                                            return TypeValueKnownValues.Value_ShootingWomensAirRifle10M;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'D':
                                                            if ((String.Compare(chars, 15, "oubleTrap", 0, 9, false) == 0) && (chars.Length == 24))
                                                                return TypeValueKnownValues.Value_ShootingWomensDoubleTrap;
                                                            break;
                                                        case 'P':
                                                            if ((String.Compare(chars, 15, "istol25M", 0, 8, false) == 0) && (chars.Length == 23))
                                                                return TypeValueKnownValues.Value_ShootingWomensPistol25M;
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(chars, 15, "ifleThreePositions50M", 0, 21, false) == 0) && (chars.Length == 36))
                                                                return TypeValueKnownValues.Value_ShootingWomensRifleThreePositions50M;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 15, "keet", 0, 4, false) == 0) && (chars.Length == 19))
                                                                return TypeValueKnownValues.Value_ShootingWomensSkeet;
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(chars, 15, "rap", 0, 3, false) == 0) && (chars.Length == 18))
                                                                return TypeValueKnownValues.Value_ShootingWomensTrap;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (String.Compare(chars, 4, "tTrackSpeedSkating", 0, 18, false) == 0)
                                      {
                                        switch (chars[22])
                                          {
                                            case 'M':
                                                switch (chars[23])
                                                  {
                                                    case 'e':
                                                        if (String.Compare(chars, 24, "ns", 0, 2, false) == 0)
                                                          {
                                                            switch (chars[26])
                                                              {
                                                                case '1':
                                                                    switch (chars[27])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(chars, 28, "00M", 0, 3, false) == 0) && (chars.Length == 31))
                                                                                return TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1000M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 28, "00M", 0, 3, false) == 0) && (chars.Length == 31))
                                                                                return TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '5':
                                                                    if (String.Compare(chars, 27, "00", 0, 2, false) == 0)
                                                                      {
                                                                        switch (chars[29])
                                                                          {
                                                                            case '0':
                                                                                if ((String.Compare(chars, 30, "MRelay", 0, 6, false) == 0) && (chars.Length == 36))
                                                                                    return TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens5000MRelay;
                                                                                break;
                                                                            case 'M':
                                                                                if (chars.Length == 30)
                                                                                    return TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens500M;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'i':
                                                        if ((String.Compare(chars, 24, "xed2000MRelay", 0, 13, false) == 0) && (chars.Length == 37))
                                                            return TypeValueKnownValues.Value_ShortTrackSpeedSkatingMixed2000MRelay;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'W':
                                                if (String.Compare(chars, 23, "omens", 0, 5, false) == 0)
                                                  {
                                                    switch (chars[28])
                                                      {
                                                        case '1':
                                                            switch (chars[29])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(chars, 30, "00M", 0, 3, false) == 0) && (chars.Length == 33))
                                                                        return TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1000M;
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(chars, 30, "00M", 0, 3, false) == 0) && (chars.Length == 33))
                                                                        return TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1500M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '3':
                                                            if ((String.Compare(chars, 29, "000MRelay", 0, 9, false) == 0) && (chars.Length == 38))
                                                                return TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens3000MRelay;
                                                            break;
                                                        case '5':
                                                            if ((String.Compare(chars, 29, "00M", 0, 3, false) == 0) && (chars.Length == 32))
                                                                return TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens500M;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'k':
                        switch (chars[2])
                          {
                            case 'a':
                                if (String.Compare(chars, 3, "teboarding", 0, 10, false) == 0)
                                  {
                                    switch (chars[13])
                                      {
                                        case 'M':
                                            if (String.Compare(chars, 14, "ens", 0, 3, false) == 0)
                                              {
                                                switch (chars[17])
                                                  {
                                                    case 'P':
                                                        if ((String.Compare(chars, 18, "ark", 0, 3, false) == 0) && (chars.Length == 21))
                                                            return TypeValueKnownValues.Value_SkateboardingMensPark;
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(chars, 18, "treet", 0, 5, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_SkateboardingMensStreet;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 14, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[19])
                                                  {
                                                    case 'P':
                                                        if ((String.Compare(chars, 20, "ark", 0, 3, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_SkateboardingWomensPark;
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(chars, 20, "treet", 0, 5, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_SkateboardingWomensStreet;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'e':
                                if (String.Compare(chars, 3, "leton", 0, 5, false) == 0)
                                  {
                                    switch (chars[8])
                                      {
                                        case 'M':
                                            if ((String.Compare(chars, 9, "ens", 0, 3, false) == 0) && (chars.Length == 12))
                                                return TypeValueKnownValues.Value_SkeletonMens;
                                            break;
                                        case 'W':
                                            if ((String.Compare(chars, 9, "omens", 0, 5, false) == 0) && (chars.Length == 14))
                                                return TypeValueKnownValues.Value_SkeletonWomens;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'i':
                                if (String.Compare(chars, 3, "Jumping", 0, 7, false) == 0)
                                  {
                                    switch (chars[10])
                                      {
                                        case 'M':
                                            switch (chars[11])
                                              {
                                                case 'e':
                                                    if (String.Compare(chars, 12, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (chars[14])
                                                          {
                                                            case 'I':
                                                                if (String.Compare(chars, 15, "ndividual", 0, 9, false) == 0)
                                                                  {
                                                                    switch (chars[24])
                                                                      {
                                                                        case 'L':
                                                                            if ((String.Compare(chars, 25, "argeHill", 0, 8, false) == 0) && (chars.Length == 33))
                                                                                return TypeValueKnownValues.Value_SkiJumpingMensIndividualLargeHill;
                                                                            break;
                                                                        case 'N':
                                                                            if ((String.Compare(chars, 25, "ormalHill", 0, 9, false) == 0) && (chars.Length == 34))
                                                                                return TypeValueKnownValues.Value_SkiJumpingMensIndividualNormalHill;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if ((String.Compare(chars, 15, "eamLargeHill", 0, 12, false) == 0) && (chars.Length == 27))
                                                                    return TypeValueKnownValues.Value_SkiJumpingMensTeamLargeHill;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(chars, 12, "xedTeamNormalHill", 0, 17, false) == 0) && (chars.Length == 29))
                                                        return TypeValueKnownValues.Value_SkiJumpingMixedTeamNormalHill;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if ((String.Compare(chars, 11, "omensIndividualNormalHill", 0, 25, false) == 0) && (chars.Length == 36))
                                                return TypeValueKnownValues.Value_SkiJumpingWomensIndividualNormalHill;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'n':
                        if (String.Compare(chars, 2, "owboarding", 0, 10, false) == 0)
                          {
                            switch (chars[12])
                              {
                                case 'M':
                                    switch (chars[13])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 14, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[16])
                                                  {
                                                    case 'B':
                                                        if ((String.Compare(chars, 17, "igAir", 0, 5, false) == 0) && (chars.Length == 22))
                                                            return TypeValueKnownValues.Value_SnowboardingMensBigAir;
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(chars, 17, "alfpipe", 0, 7, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_SnowboardingMensHalfpipe;
                                                        break;
                                                    case 'P':
                                                        if (String.Compare(chars, 17, "arallel", 0, 7, false) == 0)
                                                          {
                                                            switch (chars[24])
                                                              {
                                                                case 'G':
                                                                    if ((String.Compare(chars, 25, "iantSlalom", 0, 10, false) == 0) && (chars.Length == 35))
                                                                        return TypeValueKnownValues.Value_SnowboardingMensParallelGiantSlalom;
                                                                    break;
                                                                case 'S':
                                                                    if ((String.Compare(chars, 25, "lalom", 0, 5, false) == 0) && (chars.Length == 30))
                                                                        return TypeValueKnownValues.Value_SnowboardingMensParallelSlalom;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'S':
                                                        switch (chars[17])
                                                          {
                                                            case 'l':
                                                                if ((String.Compare(chars, 18, "opestyle", 0, 8, false) == 0) && (chars.Length == 26))
                                                                    return TypeValueKnownValues.Value_SnowboardingMensSlopestyle;
                                                                break;
                                                            case 'n':
                                                                if ((String.Compare(chars, 18, "owboardCross", 0, 12, false) == 0) && (chars.Length == 30))
                                                                    return TypeValueKnownValues.Value_SnowboardingMensSnowboardCross;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 14, "xedTeamSnowboardCross", 0, 21, false) == 0) && (chars.Length == 35))
                                                return TypeValueKnownValues.Value_SnowboardingMixedTeamSnowboardCross;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 13, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[18])
                                          {
                                            case 'B':
                                                if ((String.Compare(chars, 19, "igAir", 0, 5, false) == 0) && (chars.Length == 24))
                                                    return TypeValueKnownValues.Value_SnowboardingWomensBigAir;
                                                break;
                                            case 'H':
                                                if ((String.Compare(chars, 19, "alfpipe", 0, 7, false) == 0) && (chars.Length == 26))
                                                    return TypeValueKnownValues.Value_SnowboardingWomensHalfpipe;
                                                break;
                                            case 'P':
                                                if (String.Compare(chars, 19, "arallel", 0, 7, false) == 0)
                                                  {
                                                    switch (chars[26])
                                                      {
                                                        case 'G':
                                                            if ((String.Compare(chars, 27, "iantSlalom", 0, 10, false) == 0) && (chars.Length == 37))
                                                                return TypeValueKnownValues.Value_SnowboardingWomensParallelGiantSlalom;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 27, "lalom", 0, 5, false) == 0) && (chars.Length == 32))
                                                                return TypeValueKnownValues.Value_SnowboardingWomensParallelSlalom;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'S':
                                                switch (chars[19])
                                                  {
                                                    case 'l':
                                                        if ((String.Compare(chars, 20, "opestyle", 0, 8, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_SnowboardingWomensSlopestyle;
                                                        break;
                                                    case 'n':
                                                        if ((String.Compare(chars, 20, "owboardCross", 0, 12, false) == 0) && (chars.Length == 32))
                                                            return TypeValueKnownValues.Value_SnowboardingWomensSnowboardCross;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'o':
                        if ((String.Compare(chars, 2, "ftballWomens", 0, 12, false) == 0) && (chars.Length == 14))
                            return TypeValueKnownValues.Value_SoftballWomens;
                        break;
                    case 'p':
                        switch (chars[2])
                          {
                            case 'e':
                                if (String.Compare(chars, 3, "edSkating", 0, 9, false) == 0)
                                  {
                                    switch (chars[12])
                                      {
                                        case 'M':
                                            if (String.Compare(chars, 13, "ens", 0, 3, false) == 0)
                                              {
                                                switch (chars[16])
                                                  {
                                                    case '1':
                                                        switch (chars[17])
                                                          {
                                                            case '0':
                                                                if (String.Compare(chars, 18, "00", 0, 2, false) == 0)
                                                                  {
                                                                    switch (chars[20])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(chars, 21, "M", 0, 1, false) == 0) && (chars.Length == 22))
                                                                                return TypeValueKnownValues.Value_SpeedSkatingMens10000M;
                                                                            break;
                                                                        case 'M':
                                                                            if (chars.Length == 21)
                                                                                return TypeValueKnownValues.Value_SpeedSkatingMens1000M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case '5':
                                                                if ((String.Compare(chars, 18, "00M", 0, 3, false) == 0) && (chars.Length == 21))
                                                                    return TypeValueKnownValues.Value_SpeedSkatingMens1500M;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '5':
                                                        if (String.Compare(chars, 17, "00", 0, 2, false) == 0)
                                                          {
                                                            switch (chars[19])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(chars, 20, "M", 0, 1, false) == 0) && (chars.Length == 21))
                                                                        return TypeValueKnownValues.Value_SpeedSkatingMens5000M;
                                                                    break;
                                                                case 'M':
                                                                    if (chars.Length == 20)
                                                                        return TypeValueKnownValues.Value_SpeedSkatingMens500M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'A':
                                                        if ((String.Compare(chars, 17, "llRound", 0, 7, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_SpeedSkatingMensAllRound;
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(chars, 17, "assStart", 0, 8, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_SpeedSkatingMensMassStart;
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 17, "eamPursuit", 0, 10, false) == 0) && (chars.Length == 27))
                                                            return TypeValueKnownValues.Value_SpeedSkatingMensTeamPursuit;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 13, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[18])
                                                  {
                                                    case '1':
                                                        switch (chars[19])
                                                          {
                                                            case '0':
                                                                if ((String.Compare(chars, 20, "00M", 0, 3, false) == 0) && (chars.Length == 23))
                                                                    return TypeValueKnownValues.Value_SpeedSkatingWomens1000M;
                                                                break;
                                                            case '5':
                                                                if ((String.Compare(chars, 20, "00M", 0, 3, false) == 0) && (chars.Length == 23))
                                                                    return TypeValueKnownValues.Value_SpeedSkatingWomens1500M;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '3':
                                                        if ((String.Compare(chars, 19, "000M", 0, 4, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_SpeedSkatingWomens3000M;
                                                        break;
                                                    case '5':
                                                        if (String.Compare(chars, 19, "00", 0, 2, false) == 0)
                                                          {
                                                            switch (chars[21])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(chars, 22, "M", 0, 1, false) == 0) && (chars.Length == 23))
                                                                        return TypeValueKnownValues.Value_SpeedSkatingWomens5000M;
                                                                    break;
                                                                case 'M':
                                                                    if (chars.Length == 22)
                                                                        return TypeValueKnownValues.Value_SpeedSkatingWomens500M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(chars, 19, "assStart", 0, 8, false) == 0) && (chars.Length == 27))
                                                            return TypeValueKnownValues.Value_SpeedSkatingWomensMassStart;
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 19, "eamPursuit", 0, 10, false) == 0) && (chars.Length == 29))
                                                            return TypeValueKnownValues.Value_SpeedSkatingWomensTeamPursuit;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'o':
                                if (String.Compare(chars, 3, "rt", 0, 2, false) == 0)
                                  {
                                    switch (chars[5])
                                      {
                                        case 'C':
                                            if (String.Compare(chars, 6, "limbing", 0, 7, false) == 0)
                                              {
                                                switch (chars[13])
                                                  {
                                                    case 'M':
                                                        if ((String.Compare(chars, 14, "ensCombined", 0, 11, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_SportClimbingMensCombined;
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(chars, 14, "omensCombined", 0, 13, false) == 0) && (chars.Length == 27))
                                                            return TypeValueKnownValues.Value_SportClimbingWomensCombined;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (String.Compare(chars, 6, "urfing", 0, 6, false) == 0)
                                              {
                                                switch (chars[12])
                                                  {
                                                    case 'M':
                                                        if ((String.Compare(chars, 13, "ens", 0, 3, false) == 0) && (chars.Length == 16))
                                                            return TypeValueKnownValues.Value_SportSurfingMens;
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(chars, 13, "omens", 0, 5, false) == 0) && (chars.Length == 18))
                                                            return TypeValueKnownValues.Value_SportSurfingWomens;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'w':
                        if (String.Compare(chars, 2, "imming", 0, 6, false) == 0)
                          {
                            switch (chars[8])
                              {
                                case 'M':
                                    switch (chars[9])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 10, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[12])
                                                  {
                                                    case '4':
                                                        if (String.Compare(chars, 13, "X", 0, 1, false) == 0)
                                                          {
                                                            switch (chars[14])
                                                              {
                                                                case '1':
                                                                    if (String.Compare(chars, 15, "00M", 0, 3, false) == 0)
                                                                      {
                                                                        switch (chars[18])
                                                                          {
                                                                            case 'F':
                                                                                if ((String.Compare(chars, 19, "reestyleRelay", 0, 13, false) == 0) && (chars.Length == 32))
                                                                                    return TypeValueKnownValues.Value_SwimmingMens4X100MFreestyleRelay;
                                                                                break;
                                                                            case 'M':
                                                                                if ((String.Compare(chars, 19, "edleyRelay", 0, 10, false) == 0) && (chars.Length == 29))
                                                                                    return TypeValueKnownValues.Value_SwimmingMens4X100MMedleyRelay;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(chars, 15, "00MFreestyleRelay", 0, 17, false) == 0) && (chars.Length == 32))
                                                                        return TypeValueKnownValues.Value_SwimmingMens4X200MFreestyleRelay;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'B':
                                                        switch (chars[13])
                                                          {
                                                            case 'a':
                                                                if (String.Compare(chars, 14, "ckstroke", 0, 8, false) == 0)
                                                                  {
                                                                    switch (chars[22])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 23, "00M", 0, 3, false) == 0) && (chars.Length == 26))
                                                                                return TypeValueKnownValues.Value_SwimmingMensBackstroke100M;
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(chars, 23, "00M", 0, 3, false) == 0) && (chars.Length == 26))
                                                                                return TypeValueKnownValues.Value_SwimmingMensBackstroke200M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'r':
                                                                if (String.Compare(chars, 14, "eaststroke", 0, 10, false) == 0)
                                                                  {
                                                                    switch (chars[24])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 25, "00M", 0, 3, false) == 0) && (chars.Length == 28))
                                                                                return TypeValueKnownValues.Value_SwimmingMensBreaststroke100M;
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(chars, 25, "00M", 0, 3, false) == 0) && (chars.Length == 28))
                                                                                return TypeValueKnownValues.Value_SwimmingMensBreaststroke200M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'u':
                                                                if (String.Compare(chars, 14, "tterfly", 0, 7, false) == 0)
                                                                  {
                                                                    switch (chars[21])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(chars, 22, "00M", 0, 3, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_SwimmingMensButterfly100M;
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(chars, 22, "00M", 0, 3, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_SwimmingMensButterfly200M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'F':
                                                        if (String.Compare(chars, 13, "reestyle", 0, 8, false) == 0)
                                                          {
                                                            switch (chars[21])
                                                              {
                                                                case '1':
                                                                    switch (chars[22])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(chars, 23, "0M", 0, 2, false) == 0) && (chars.Length == 25))
                                                                                return TypeValueKnownValues.Value_SwimmingMensFreestyle100M;
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(chars, 23, "00M", 0, 3, false) == 0) && (chars.Length == 26))
                                                                                return TypeValueKnownValues.Value_SwimmingMensFreestyle1500M;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(chars, 22, "00M", 0, 3, false) == 0) && (chars.Length == 25))
                                                                        return TypeValueKnownValues.Value_SwimmingMensFreestyle200M;
                                                                    break;
                                                                case '4':
                                                                    if ((String.Compare(chars, 22, "00M", 0, 3, false) == 0) && (chars.Length == 25))
                                                                        return TypeValueKnownValues.Value_SwimmingMensFreestyle400M;
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(chars, 22, "0M", 0, 2, false) == 0) && (chars.Length == 24))
                                                                        return TypeValueKnownValues.Value_SwimmingMensFreestyle50M;
                                                                    break;
                                                                case '8':
                                                                    if ((String.Compare(chars, 22, "00M", 0, 3, false) == 0) && (chars.Length == 25))
                                                                        return TypeValueKnownValues.Value_SwimmingMensFreestyle800M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'I':
                                                        if (String.Compare(chars, 13, "ndividualMedley", 0, 15, false) == 0)
                                                          {
                                                            switch (chars[28])
                                                              {
                                                                case '2':
                                                                    if ((String.Compare(chars, 29, "00M", 0, 3, false) == 0) && (chars.Length == 32))
                                                                        return TypeValueKnownValues.Value_SwimmingMensIndividualMedley200M;
                                                                    break;
                                                                case '4':
                                                                    if ((String.Compare(chars, 29, "00M", 0, 3, false) == 0) && (chars.Length == 32))
                                                                        return TypeValueKnownValues.Value_SwimmingMensIndividualMedley400M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'O':
                                                        if ((String.Compare(chars, 13, "penWater10KM", 0, 12, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_SwimmingMensOpenWater10KM;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 10, "xed4X100MMedleyRelay", 0, 20, false) == 0) && (chars.Length == 30))
                                                return TypeValueKnownValues.Value_SwimmingMixed4X100MMedleyRelay;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 9, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[14])
                                          {
                                            case '4':
                                                if (String.Compare(chars, 15, "X", 0, 1, false) == 0)
                                                  {
                                                    switch (chars[16])
                                                      {
                                                        case '1':
                                                            if (String.Compare(chars, 17, "00M", 0, 3, false) == 0)
                                                              {
                                                                switch (chars[20])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(chars, 21, "reestyleRelay", 0, 13, false) == 0) && (chars.Length == 34))
                                                                            return TypeValueKnownValues.Value_SwimmingWomens4X100MFreestyleRelay;
                                                                        break;
                                                                    case 'M':
                                                                        if ((String.Compare(chars, 21, "edleyRelay", 0, 10, false) == 0) && (chars.Length == 31))
                                                                            return TypeValueKnownValues.Value_SwimmingWomens4X100MMedleyRelay;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case '2':
                                                            if ((String.Compare(chars, 17, "00MFreestyleRelay", 0, 17, false) == 0) && (chars.Length == 34))
                                                                return TypeValueKnownValues.Value_SwimmingWomens4X200MFreestyleRelay;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'B':
                                                switch (chars[15])
                                                  {
                                                    case 'a':
                                                        if (String.Compare(chars, 16, "ckstroke", 0, 8, false) == 0)
                                                          {
                                                            switch (chars[24])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(chars, 25, "00M", 0, 3, false) == 0) && (chars.Length == 28))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensBackstroke100M;
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(chars, 25, "00M", 0, 3, false) == 0) && (chars.Length == 28))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensBackstroke200M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'r':
                                                        if (String.Compare(chars, 16, "eaststroke", 0, 10, false) == 0)
                                                          {
                                                            switch (chars[26])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(chars, 27, "00M", 0, 3, false) == 0) && (chars.Length == 30))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensBreaststroke100M;
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(chars, 27, "00M", 0, 3, false) == 0) && (chars.Length == 30))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensBreaststroke200M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'u':
                                                        if (String.Compare(chars, 16, "tterfly", 0, 7, false) == 0)
                                                          {
                                                            switch (chars[23])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(chars, 24, "00M", 0, 3, false) == 0) && (chars.Length == 27))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensButterfly100M;
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(chars, 24, "00M", 0, 3, false) == 0) && (chars.Length == 27))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensButterfly200M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'F':
                                                if (String.Compare(chars, 15, "reestyle", 0, 8, false) == 0)
                                                  {
                                                    switch (chars[23])
                                                      {
                                                        case '1':
                                                            switch (chars[24])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(chars, 25, "0M", 0, 2, false) == 0) && (chars.Length == 27))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensFreestyle100M;
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(chars, 25, "00M", 0, 3, false) == 0) && (chars.Length == 28))
                                                                        return TypeValueKnownValues.Value_SwimmingWomensFreestyle1500M;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '2':
                                                            if ((String.Compare(chars, 24, "00M", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_SwimmingWomensFreestyle200M;
                                                            break;
                                                        case '4':
                                                            if ((String.Compare(chars, 24, "00M", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_SwimmingWomensFreestyle400M;
                                                            break;
                                                        case '5':
                                                            if ((String.Compare(chars, 24, "0M", 0, 2, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_SwimmingWomensFreestyle50M;
                                                            break;
                                                        case '8':
                                                            if ((String.Compare(chars, 24, "00M", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_SwimmingWomensFreestyle800M;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'I':
                                                if ((String.Compare(chars, 15, "ndividualMedley200M", 0, 19, false) == 0) && (chars.Length == 34))
                                                    return TypeValueKnownValues.Value_SwimmingWomensIndividualMedley200M;
                                                break;
                                            case 'O':
                                                if ((String.Compare(chars, 15, "penWater10KM", 0, 12, false) == 0) && (chars.Length == 27))
                                                    return TypeValueKnownValues.Value_SwimmingWomensOpenWater10KM;
                                                break;
                                            case 'i':
                                                if ((String.Compare(chars, 15, "ndividualMedley400M", 0, 19, false) == 0) && (chars.Length == 34))
                                                    return TypeValueKnownValues.Value_SwimmingWomensindividualMedley400M;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'T':
                switch (chars[1])
                  {
                    case 'a':
                        switch (chars[2])
                          {
                            case 'b':
                                if (String.Compare(chars, 3, "leTennis", 0, 8, false) == 0)
                                  {
                                    switch (chars[11])
                                      {
                                        case 'M':
                                            switch (chars[12])
                                              {
                                                case 'e':
                                                    if (String.Compare(chars, 13, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (chars[15])
                                                          {
                                                            case 'S':
                                                                if ((String.Compare(chars, 16, "ingles", 0, 6, false) == 0) && (chars.Length == 22))
                                                                    return TypeValueKnownValues.Value_TableTennisMensSingles;
                                                                break;
                                                            case 'T':
                                                                if ((String.Compare(chars, 16, "eam", 0, 3, false) == 0) && (chars.Length == 19))
                                                                    return TypeValueKnownValues.Value_TableTennisMensTeam;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(chars, 13, "xedDoubles", 0, 10, false) == 0) && (chars.Length == 23))
                                                        return TypeValueKnownValues.Value_TableTennisMixedDoubles;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 12, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[17])
                                                  {
                                                    case 'S':
                                                        if ((String.Compare(chars, 18, "ingles", 0, 6, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_TableTennisWomensSingles;
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(chars, 18, "eam", 0, 3, false) == 0) && (chars.Length == 21))
                                                            return TypeValueKnownValues.Value_TableTennisWomensTeam;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'e':
                                if (String.Compare(chars, 3, "kwondo", 0, 6, false) == 0)
                                  {
                                    switch (chars[9])
                                      {
                                        case 'M':
                                            if (String.Compare(chars, 10, "ens", 0, 3, false) == 0)
                                              {
                                                switch (chars[13])
                                                  {
                                                    case 'F':
                                                        switch (chars[14])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(chars, 15, "atherweight", 0, 11, false) == 0) && (chars.Length == 26))
                                                                    return TypeValueKnownValues.Value_TaekwondoMensFeatherweight;
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(chars, 15, "yweight", 0, 7, false) == 0) && (chars.Length == 22))
                                                                    return TypeValueKnownValues.Value_TaekwondoMensFlyweight;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(chars, 14, "eavyweight", 0, 10, false) == 0) && (chars.Length == 24))
                                                            return TypeValueKnownValues.Value_TaekwondoMensHeavyweight;
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(chars, 14, "elterweight", 0, 11, false) == 0) && (chars.Length == 25))
                                                            return TypeValueKnownValues.Value_TaekwondoMensWelterweight;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(chars, 10, "omens", 0, 5, false) == 0)
                                              {
                                                switch (chars[15])
                                                  {
                                                    case 'F':
                                                        switch (chars[16])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(chars, 17, "atherweight", 0, 11, false) == 0) && (chars.Length == 28))
                                                                    return TypeValueKnownValues.Value_TaekwondoWomensFeatherweight;
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(chars, 17, "yweight", 0, 7, false) == 0) && (chars.Length == 24))
                                                                    return TypeValueKnownValues.Value_TaekwondoWomensFlyweight;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(chars, 16, "eavyweight", 0, 10, false) == 0) && (chars.Length == 26))
                                                            return TypeValueKnownValues.Value_TaekwondoWomensHeavyweight;
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(chars, 16, "elterweight", 0, 11, false) == 0) && (chars.Length == 27))
                                                            return TypeValueKnownValues.Value_TaekwondoWomensWelterweight;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'e':
                        if (String.Compare(chars, 2, "nnis", 0, 4, false) == 0)
                          {
                            switch (chars[6])
                              {
                                case 'M':
                                    switch (chars[7])
                                      {
                                        case 'e':
                                            if (String.Compare(chars, 8, "ns", 0, 2, false) == 0)
                                              {
                                                switch (chars[10])
                                                  {
                                                    case 'D':
                                                        if ((String.Compare(chars, 11, "oubles", 0, 6, false) == 0) && (chars.Length == 17))
                                                            return TypeValueKnownValues.Value_TennisMensDoubles;
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(chars, 11, "ingles", 0, 6, false) == 0) && (chars.Length == 17))
                                                            return TypeValueKnownValues.Value_TennisMensSingles;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 8, "xedDoubles", 0, 10, false) == 0) && (chars.Length == 18))
                                                return TypeValueKnownValues.Value_TennisMixedDoubles;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 7, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[12])
                                          {
                                            case 'D':
                                                if ((String.Compare(chars, 13, "oubles", 0, 6, false) == 0) && (chars.Length == 19))
                                                    return TypeValueKnownValues.Value_TennisWomensDoubles;
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 13, "ingles", 0, 6, false) == 0) && (chars.Length == 19))
                                                    return TypeValueKnownValues.Value_TennisWomensSingles;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(chars, 2, "iathlon", 0, 7, false) == 0)
                          {
                            switch (chars[9])
                              {
                                case 'M':
                                    switch (chars[10])
                                      {
                                        case 'e':
                                            if ((String.Compare(chars, 11, "nsIndividual", 0, 12, false) == 0) && (chars.Length == 23))
                                                return TypeValueKnownValues.Value_TriathlonMensIndividual;
                                            break;
                                        case 'i':
                                            if ((String.Compare(chars, 11, "xedRelay", 0, 8, false) == 0) && (chars.Length == 19))
                                                return TypeValueKnownValues.Value_TriathlonMixedRelay;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if ((String.Compare(chars, 10, "omensIndividual", 0, 15, false) == 0) && (chars.Length == 25))
                                        return TypeValueKnownValues.Value_TriathlonWomensIndividual;
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'V':
                if (String.Compare(chars, 1, "olleyball", 0, 9, false) == 0)
                  {
                    switch (chars[10])
                      {
                        case 'M':
                            if (String.Compare(chars, 11, "ens", 0, 3, false) == 0)
                              {
                                switch (chars[14])
                                  {
                                    case 'B':
                                        if ((String.Compare(chars, 15, "each", 0, 4, false) == 0) && (chars.Length == 19))
                                            return TypeValueKnownValues.Value_VolleyballMensBeach;
                                        break;
                                    case 'I':
                                        if ((String.Compare(chars, 15, "ndoor", 0, 5, false) == 0) && (chars.Length == 20))
                                            return TypeValueKnownValues.Value_VolleyballMensIndoor;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'W':
                            if (String.Compare(chars, 11, "omens", 0, 5, false) == 0)
                              {
                                switch (chars[16])
                                  {
                                    case 'B':
                                        if ((String.Compare(chars, 17, "each", 0, 4, false) == 0) && (chars.Length == 21))
                                            return TypeValueKnownValues.Value_VolleyballWomensBeach;
                                        break;
                                    case 'I':
                                        if ((String.Compare(chars, 17, "ndoor", 0, 5, false) == 0) && (chars.Length == 22))
                                            return TypeValueKnownValues.Value_VolleyballWomensIndoor;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'W':
                switch (chars[1])
                  {
                    case 'a':
                        if (String.Compare(chars, 2, "terPolo", 0, 7, false) == 0)
                          {
                            switch (chars[9])
                              {
                                case 'M':
                                    if ((String.Compare(chars, 10, "ens", 0, 3, false) == 0) && (chars.Length == 13))
                                        return TypeValueKnownValues.Value_WaterPoloMens;
                                    break;
                                case 'W':
                                    if ((String.Compare(chars, 10, "omens", 0, 5, false) == 0) && (chars.Length == 15))
                                        return TypeValueKnownValues.Value_WaterPoloWomens;
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'e':
                        if (String.Compare(chars, 2, "ightlifting", 0, 11, false) == 0)
                          {
                            switch (chars[13])
                              {
                                case 'M':
                                    if (String.Compare(chars, 14, "ens", 0, 3, false) == 0)
                                      {
                                        switch (chars[17])
                                          {
                                            case '1':
                                                if (String.Compare(chars, 18, "09Kg", 0, 4, false) == 0)
                                                  {
                                                    if (chars.Length == 22)
                                                      {
                                                        return TypeValueKnownValues.Value_WeightliftingMens109Kg;
                                                      }
                                                    switch (chars[22])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(chars, 23, "lus", 0, 3, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_WeightliftingMens109KgPlus;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case '6':
                                                switch (chars[18])
                                                  {
                                                    case '1':
                                                        if ((String.Compare(chars, 19, "Kg", 0, 2, false) == 0) && (chars.Length == 21))
                                                            return TypeValueKnownValues.Value_WeightliftingMens61Kg;
                                                        break;
                                                    case '7':
                                                        if ((String.Compare(chars, 19, "Kg", 0, 2, false) == 0) && (chars.Length == 21))
                                                            return TypeValueKnownValues.Value_WeightliftingMens67Kg;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '7':
                                                if ((String.Compare(chars, 18, "3Kg", 0, 3, false) == 0) && (chars.Length == 21))
                                                    return TypeValueKnownValues.Value_WeightliftingMens73Kg;
                                                break;
                                            case '8':
                                                if ((String.Compare(chars, 18, "1Kg", 0, 3, false) == 0) && (chars.Length == 21))
                                                    return TypeValueKnownValues.Value_WeightliftingMens81Kg;
                                                break;
                                            case '9':
                                                if ((String.Compare(chars, 18, "6Kg", 0, 3, false) == 0) && (chars.Length == 21))
                                                    return TypeValueKnownValues.Value_WeightliftingMens96Kg;
                                                break;
                                            case 'B':
                                                if ((String.Compare(chars, 18, "antamweight", 0, 11, false) == 0) && (chars.Length == 29))
                                                    return TypeValueKnownValues.Value_WeightliftingMensBantamweight;
                                                break;
                                            case 'F':
                                                switch (chars[18])
                                                  {
                                                    case 'e':
                                                        if ((String.Compare(chars, 19, "atherweight", 0, 11, false) == 0) && (chars.Length == 30))
                                                            return TypeValueKnownValues.Value_WeightliftingMensFeatherweight;
                                                        break;
                                                    case 'i':
                                                        if ((String.Compare(chars, 19, "rstHeavyweight", 0, 14, false) == 0) && (chars.Length == 33))
                                                            return TypeValueKnownValues.Value_WeightliftingMensFirstHeavyweight;
                                                        break;
                                                    case 'l':
                                                        if ((String.Compare(chars, 19, "yweight", 0, 7, false) == 0) && (chars.Length == 26))
                                                            return TypeValueKnownValues.Value_WeightliftingMensFlyweight;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'H':
                                                if ((String.Compare(chars, 18, "eavyweight", 0, 10, false) == 0) && (chars.Length == 28))
                                                    return TypeValueKnownValues.Value_WeightliftingMensHeavyweight;
                                                break;
                                            case 'L':
                                                if (String.Compare(chars, 18, "ight", 0, 4, false) == 0)
                                                  {
                                                    switch (chars[22])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(chars, 23, "eavyweight", 0, 10, false) == 0) && (chars.Length == 33))
                                                                return TypeValueKnownValues.Value_WeightliftingMensLightHeavyweight;
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(chars, 23, "eight", 0, 5, false) == 0) && (chars.Length == 28))
                                                                return TypeValueKnownValues.Value_WeightliftingMensLightweight;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if (String.Compare(chars, 18, "iddle", 0, 5, false) == 0)
                                                  {
                                                    switch (chars[23])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(chars, 24, "eavyweight", 0, 10, false) == 0) && (chars.Length == 34))
                                                                return TypeValueKnownValues.Value_WeightliftingMensMiddleHeavyweight;
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(chars, 24, "eight", 0, 5, false) == 0) && (chars.Length == 29))
                                                                return TypeValueKnownValues.Value_WeightliftingMensMiddleweight;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 18, "uperHeavyweight", 0, 15, false) == 0) && (chars.Length == 33))
                                                    return TypeValueKnownValues.Value_WeightliftingMensSuperHeavyweight;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 14, "omens", 0, 5, false) == 0)
                                      {
                                        switch (chars[19])
                                          {
                                            case '4':
                                                if ((String.Compare(chars, 20, "9Kg", 0, 3, false) == 0) && (chars.Length == 23))
                                                    return TypeValueKnownValues.Value_WeightliftingWomens49Kg;
                                                break;
                                            case '5':
                                                switch (chars[20])
                                                  {
                                                    case '5':
                                                        if ((String.Compare(chars, 21, "Kg", 0, 2, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_WeightliftingWomens55Kg;
                                                        break;
                                                    case '9':
                                                        if ((String.Compare(chars, 21, "Kg", 0, 2, false) == 0) && (chars.Length == 23))
                                                            return TypeValueKnownValues.Value_WeightliftingWomens59Kg;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '6':
                                                if ((String.Compare(chars, 20, "4Kg", 0, 3, false) == 0) && (chars.Length == 23))
                                                    return TypeValueKnownValues.Value_WeightliftingWomens64Kg;
                                                break;
                                            case '7':
                                                if ((String.Compare(chars, 20, "6Kg", 0, 3, false) == 0) && (chars.Length == 23))
                                                    return TypeValueKnownValues.Value_WeightliftingWomens76Kg;
                                                break;
                                            case '8':
                                                if (String.Compare(chars, 20, "7Kg", 0, 3, false) == 0)
                                                  {
                                                    if (chars.Length == 23)
                                                      {
                                                        return TypeValueKnownValues.Value_WeightliftingWomens87Kg;
                                                      }
                                                    switch (chars[23])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(chars, 24, "lus", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_WeightliftingWomens87KgPlus;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'F':
                                                switch (chars[20])
                                                  {
                                                    case 'e':
                                                        if ((String.Compare(chars, 21, "atherweight", 0, 11, false) == 0) && (chars.Length == 32))
                                                            return TypeValueKnownValues.Value_WeightliftingWomensFeatherweight;
                                                        break;
                                                    case 'l':
                                                        if ((String.Compare(chars, 21, "yweight", 0, 7, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_WeightliftingWomensFlyweight;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'H':
                                                if ((String.Compare(chars, 20, "eavyweight", 0, 10, false) == 0) && (chars.Length == 30))
                                                    return TypeValueKnownValues.Value_WeightliftingWomensHeavyweight;
                                                break;
                                            case 'L':
                                                if (String.Compare(chars, 20, "ight", 0, 4, false) == 0)
                                                  {
                                                    switch (chars[24])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(chars, 25, "eavyweight", 0, 10, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_WeightliftingWomensLightHeavyweight;
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(chars, 25, "eight", 0, 5, false) == 0) && (chars.Length == 30))
                                                                return TypeValueKnownValues.Value_WeightliftingWomensLightweight;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 20, "iddleweight", 0, 11, false) == 0) && (chars.Length == 31))
                                                    return TypeValueKnownValues.Value_WeightliftingWomensMiddleweight;
                                                break;
                                            case 'S':
                                                if ((String.Compare(chars, 20, "uperHeavyweight", 0, 15, false) == 0) && (chars.Length == 35))
                                                    return TypeValueKnownValues.Value_WeightliftingWomensSuperHeavyweight;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(chars, 2, "estling", 0, 7, false) == 0)
                          {
                            switch (chars[9])
                              {
                                case 'M':
                                    if (String.Compare(chars, 10, "ens", 0, 3, false) == 0)
                                      {
                                        switch (chars[13])
                                          {
                                            case 'F':
                                                if (String.Compare(chars, 14, "reestyle", 0, 8, false) == 0)
                                                  {
                                                    switch (chars[22])
                                                      {
                                                        case '1':
                                                            if ((String.Compare(chars, 23, "25Kg", 0, 4, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyle125Kg;
                                                            break;
                                                        case '5':
                                                            if ((String.Compare(chars, 23, "7Kg", 0, 3, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyle57Kg;
                                                            break;
                                                        case '6':
                                                            if ((String.Compare(chars, 23, "5Kg", 0, 3, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyle65Kg;
                                                            break;
                                                        case '7':
                                                            if ((String.Compare(chars, 23, "4Kg", 0, 3, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyle74Kg;
                                                            break;
                                                        case '8':
                                                            if ((String.Compare(chars, 23, "6Kg", 0, 3, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyle86Kg;
                                                            break;
                                                        case '9':
                                                            if ((String.Compare(chars, 23, "7Kg", 0, 3, false) == 0) && (chars.Length == 26))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyle97Kg;
                                                            break;
                                                        case 'B':
                                                            if ((String.Compare(chars, 23, "antamweight", 0, 11, false) == 0) && (chars.Length == 34))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyleBantamweight;
                                                            break;
                                                        case 'F':
                                                            switch (chars[23])
                                                              {
                                                                case 'e':
                                                                    if ((String.Compare(chars, 24, "atherweight", 0, 11, false) == 0) && (chars.Length == 35))
                                                                        return TypeValueKnownValues.Value_WrestlingMensFreestyleFeatherweight;
                                                                    break;
                                                                case 'l':
                                                                    if ((String.Compare(chars, 24, "yweight", 0, 7, false) == 0) && (chars.Length == 31))
                                                                        return TypeValueKnownValues.Value_WrestlingMensFreestyleFlyweight;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'H':
                                                            if ((String.Compare(chars, 23, "eavyweight", 0, 10, false) == 0) && (chars.Length == 33))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyleHeavyweight;
                                                            break;
                                                        case 'L':
                                                            if (String.Compare(chars, 23, "ight", 0, 4, false) == 0)
                                                              {
                                                                switch (chars[27])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(chars, 28, "lyweight", 0, 8, false) == 0) && (chars.Length == 36))
                                                                            return TypeValueKnownValues.Value_WrestlingMensFreestyleLightFlyweight;
                                                                        break;
                                                                    case 'H':
                                                                        if ((String.Compare(chars, 28, "eavyweight", 0, 10, false) == 0) && (chars.Length == 38))
                                                                            return TypeValueKnownValues.Value_WrestlingMensFreestyleLightHeavyweight;
                                                                        break;
                                                                    case 'w':
                                                                        if ((String.Compare(chars, 28, "eight", 0, 5, false) == 0) && (chars.Length == 33))
                                                                            return TypeValueKnownValues.Value_WrestlingMensFreestyleLightweight;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(chars, 23, "iddleweight", 0, 11, false) == 0) && (chars.Length == 34))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyleMiddleweight;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 23, "uperHeavyweight", 0, 15, false) == 0) && (chars.Length == 38))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyleSuperHeavyweight;
                                                            break;
                                                        case 'W':
                                                            if ((String.Compare(chars, 23, "elterweight", 0, 11, false) == 0) && (chars.Length == 34))
                                                                return TypeValueKnownValues.Value_WrestlingMensFreestyleWelterweight;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'G':
                                                if (String.Compare(chars, 14, "recoRoman", 0, 9, false) == 0)
                                                  {
                                                    switch (chars[23])
                                                      {
                                                        case '1':
                                                            if ((String.Compare(chars, 24, "30Kg", 0, 4, false) == 0) && (chars.Length == 28))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRoman130Kg;
                                                            break;
                                                        case '6':
                                                            switch (chars[24])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(chars, 25, "Kg", 0, 2, false) == 0) && (chars.Length == 27))
                                                                        return TypeValueKnownValues.Value_WrestlingMensGrecoRoman60Kg;
                                                                    break;
                                                                case '7':
                                                                    if ((String.Compare(chars, 25, "Kg", 0, 2, false) == 0) && (chars.Length == 27))
                                                                        return TypeValueKnownValues.Value_WrestlingMensGrecoRoman67Kg;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '7':
                                                            if ((String.Compare(chars, 24, "7Kg", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRoman77Kg;
                                                            break;
                                                        case '8':
                                                            if ((String.Compare(chars, 24, "7Kg", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRoman87Kg;
                                                            break;
                                                        case '9':
                                                            if ((String.Compare(chars, 24, "7Kg", 0, 3, false) == 0) && (chars.Length == 27))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRoman97Kg;
                                                            break;
                                                        case 'B':
                                                            if ((String.Compare(chars, 24, "antamweight", 0, 11, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRomanBantamweight;
                                                            break;
                                                        case 'F':
                                                            switch (chars[24])
                                                              {
                                                                case 'e':
                                                                    if ((String.Compare(chars, 25, "atherweight", 0, 11, false) == 0) && (chars.Length == 36))
                                                                        return TypeValueKnownValues.Value_WrestlingMensGrecoRomanFeatherweight;
                                                                    break;
                                                                case 'l':
                                                                    if ((String.Compare(chars, 25, "yweight", 0, 7, false) == 0) && (chars.Length == 32))
                                                                        return TypeValueKnownValues.Value_WrestlingMensGrecoRomanFlyweight;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'H':
                                                            if ((String.Compare(chars, 24, "eavyweight", 0, 10, false) == 0) && (chars.Length == 34))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRomanHeavyweight;
                                                            break;
                                                        case 'L':
                                                            if (String.Compare(chars, 24, "ight", 0, 4, false) == 0)
                                                              {
                                                                switch (chars[28])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(chars, 29, "lyweight", 0, 8, false) == 0) && (chars.Length == 37))
                                                                            return TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightFlyweight;
                                                                        break;
                                                                    case 'H':
                                                                        if ((String.Compare(chars, 29, "eavyweight", 0, 10, false) == 0) && (chars.Length == 39))
                                                                            return TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightHeavyweight;
                                                                        break;
                                                                    case 'w':
                                                                        if ((String.Compare(chars, 29, "eight", 0, 5, false) == 0) && (chars.Length == 34))
                                                                            return TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightweight;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(chars, 24, "iddleweight", 0, 11, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRomanMiddleweight;
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(chars, 24, "uperHeavyweight", 0, 15, false) == 0) && (chars.Length == 39))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRomanSuperHeavyweight;
                                                            break;
                                                        case 'W':
                                                            if ((String.Compare(chars, 24, "elterweight", 0, 11, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_WrestlingMensGrecoRomanWelterweight;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(chars, 10, "omensFreestyle", 0, 14, false) == 0)
                                      {
                                        switch (chars[24])
                                          {
                                            case '5':
                                                switch (chars[25])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(chars, 26, "Kg", 0, 2, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_WrestlingWomensFreestyle50Kg;
                                                        break;
                                                    case '3':
                                                        if ((String.Compare(chars, 26, "Kg", 0, 2, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_WrestlingWomensFreestyle53Kg;
                                                        break;
                                                    case '7':
                                                        if ((String.Compare(chars, 26, "Kg", 0, 2, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_WrestlingWomensFreestyle57Kg;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '6':
                                                switch (chars[25])
                                                  {
                                                    case '2':
                                                        if ((String.Compare(chars, 26, "Kg", 0, 2, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_WrestlingWomensFreestyle62Kg;
                                                        break;
                                                    case '8':
                                                        if ((String.Compare(chars, 26, "Kg", 0, 2, false) == 0) && (chars.Length == 28))
                                                            return TypeValueKnownValues.Value_WrestlingWomensFreestyle68Kg;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '7':
                                                if ((String.Compare(chars, 25, "6Kg", 0, 3, false) == 0) && (chars.Length == 28))
                                                    return TypeValueKnownValues.Value_WrestlingWomensFreestyle76Kg;
                                                break;
                                            case 'B':
                                                if ((String.Compare(chars, 25, "antamweight", 0, 11, false) == 0) && (chars.Length == 36))
                                                    return TypeValueKnownValues.Value_WrestlingWomensFreestyleBantamweight;
                                                break;
                                            case 'F':
                                                if ((String.Compare(chars, 25, "lyweight", 0, 8, false) == 0) && (chars.Length == 33))
                                                    return TypeValueKnownValues.Value_WrestlingWomensFreestyleFlyweight;
                                                break;
                                            case 'H':
                                                if ((String.Compare(chars, 25, "eavyweight", 0, 10, false) == 0) && (chars.Length == 35))
                                                    return TypeValueKnownValues.Value_WrestlingWomensFreestyleHeavyweight;
                                                break;
                                            case 'L':
                                                if (String.Compare(chars, 25, "ight", 0, 4, false) == 0)
                                                  {
                                                    switch (chars[29])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(chars, 30, "eavyweight", 0, 10, false) == 0) && (chars.Length == 40))
                                                                return TypeValueKnownValues.Value_WrestlingWomensFreestyleLightHeavyweight;
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(chars, 30, "eight", 0, 5, false) == 0) && (chars.Length == 35))
                                                                return TypeValueKnownValues.Value_WrestlingWomensFreestyleLightweight;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(chars, 25, "iddleweight", 0, 11, false) == 0) && (chars.Length == 36))
                                                    return TypeValueKnownValues.Value_WrestlingWomensFreestyleMiddleweight;
                                                break;
                                            case 'W':
                                                if ((String.Compare(chars, 25, "elterweight", 0, 11, false) == 0) && (chars.Length == 36))
                                                    return TypeValueKnownValues.Value_WrestlingWomensFreestyleWelterweight;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            default:
                break;
          }
        return TypeValueKnownValues.Value__none;
      }

    public static string  stringFromValue(TypeValueKnownValues the_enum)
      {
        switch (the_enum)
          {
            case TypeValueKnownValues.Value_AlpineSkiingMensDownhill:
                return "AlpineSkiingMensDownhill";
            case TypeValueKnownValues.Value_AlpineSkiingMensSuperG:
                return "AlpineSkiingMensSuperG";
            case TypeValueKnownValues.Value_AlpineSkiingMensGiantSlalom:
                return "AlpineSkiingMensGiantSlalom";
            case TypeValueKnownValues.Value_AlpineSkiingMensSlalom:
                return "AlpineSkiingMensSlalom";
            case TypeValueKnownValues.Value_AlpineSkiingMensCombined:
                return "AlpineSkiingMensCombined";
            case TypeValueKnownValues.Value_AlpineSkiingWomensDownhill:
                return "AlpineSkiingWomensDownhill";
            case TypeValueKnownValues.Value_AlpineSkiingWomensSuperG:
                return "AlpineSkiingWomensSuperG";
            case TypeValueKnownValues.Value_AlpineSkiingWomensGiantSlalom:
                return "AlpineSkiingWomensGiantSlalom";
            case TypeValueKnownValues.Value_AlpineSkiingWomensSlalom:
                return "AlpineSkiingWomensSlalom";
            case TypeValueKnownValues.Value_AlpineSkiingWomensCombined:
                return "AlpineSkiingWomensCombined";
            case TypeValueKnownValues.Value_AlpineSkiingMixedTeam:
                return "AlpineSkiingMixedTeam";
            case TypeValueKnownValues.Value_BiathlonMensIndividual:
                return "BiathlonMensIndividual";
            case TypeValueKnownValues.Value_BiathlonMensSprint:
                return "BiathlonMensSprint";
            case TypeValueKnownValues.Value_BiathlonMensPursuit:
                return "BiathlonMensPursuit";
            case TypeValueKnownValues.Value_BiathlonMensMassStart:
                return "BiathlonMensMassStart";
            case TypeValueKnownValues.Value_BiathlonMensRelay:
                return "BiathlonMensRelay";
            case TypeValueKnownValues.Value_BiathlonMensMilitaryPatrol:
                return "BiathlonMensMilitaryPatrol";
            case TypeValueKnownValues.Value_BiathlonWomensIndividual:
                return "BiathlonWomensIndividual";
            case TypeValueKnownValues.Value_BiathlonWomensSprint:
                return "BiathlonWomensSprint";
            case TypeValueKnownValues.Value_BiathlonWomensPursuit:
                return "BiathlonWomensPursuit";
            case TypeValueKnownValues.Value_BiathlonWomensMassStart:
                return "BiathlonWomensMassStart";
            case TypeValueKnownValues.Value_BiathlonWomensRelay:
                return "BiathlonWomensRelay";
            case TypeValueKnownValues.Value_BiathlonMixedRelay:
                return "BiathlonMixedRelay";
            case TypeValueKnownValues.Value_BobsleighMensTwo:
                return "BobsleighMensTwo";
            case TypeValueKnownValues.Value_BobsleighMensFour:
                return "BobsleighMensFour";
            case TypeValueKnownValues.Value_BobsleighWomensTwo:
                return "BobsleighWomensTwo";
            case TypeValueKnownValues.Value_BobsleighWomensMonobob:
                return "BobsleighWomensMonobob";
            case TypeValueKnownValues.Value_CrossCountrySkiingMens10KMClassical:
                return "CrossCountrySkiingMens10KMClassical";
            case TypeValueKnownValues.Value_CrossCountrySkiingMens15KMClassical:
                return "CrossCountrySkiingMens15KMClassical";
            case TypeValueKnownValues.Value_CrossCountrySkiingMens18KM:
                return "CrossCountrySkiingMens18KM";
            case TypeValueKnownValues.Value_CrossCountrySkiingMens30KMSkiathlon:
                return "CrossCountrySkiingMens30KMSkiathlon";
            case TypeValueKnownValues.Value_CrossCountrySkiingMens50KMFreestyle:
                return "CrossCountrySkiingMens50KMFreestyle";
            case TypeValueKnownValues.Value_CrossCountrySkiingMens4X10KMRelay:
                return "CrossCountrySkiingMens4X10KMRelay";
            case TypeValueKnownValues.Value_CrossCountrySkiingMens2X10KMPursuit:
                return "CrossCountrySkiingMens2X10KMPursuit";
            case TypeValueKnownValues.Value_CrossCountrySkiingMensSprint:
                return "CrossCountrySkiingMensSprint";
            case TypeValueKnownValues.Value_CrossCountrySkiingMensTeamSprint:
                return "CrossCountrySkiingMensTeamSprint";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomens5KM:
                return "CrossCountrySkiingWomens5KM";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomens10KMClassical:
                return "CrossCountrySkiingWomens10KMClassical";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomens15KMSkiathlon:
                return "CrossCountrySkiingWomens15KMSkiathlon";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomens20KM:
                return "CrossCountrySkiingWomens20KM";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomens30KMFreestyle:
                return "CrossCountrySkiingWomens30KMFreestyle";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomens4X5KMRelay:
                return "CrossCountrySkiingWomens4X5KMRelay";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomens2X5KMPursuit:
                return "CrossCountrySkiingWomens2X5KMPursuit";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomensSprint:
                return "CrossCountrySkiingWomensSprint";
            case TypeValueKnownValues.Value_CrossCountrySkiingWomensTeamSprint:
                return "CrossCountrySkiingWomensTeamSprint";
            case TypeValueKnownValues.Value_CurlingMens:
                return "CurlingMens";
            case TypeValueKnownValues.Value_CurlingWomens:
                return "CurlingWomens";
            case TypeValueKnownValues.Value_CurlingMixedDoubles:
                return "CurlingMixedDoubles";
            case TypeValueKnownValues.Value_FigureSkatingMensSingles:
                return "FigureSkatingMensSingles";
            case TypeValueKnownValues.Value_FigureSkatingWomensSingles:
                return "FigureSkatingWomensSingles";
            case TypeValueKnownValues.Value_FigureSkatingPair:
                return "FigureSkatingPair";
            case TypeValueKnownValues.Value_FigureSkatingIceDancing:
                return "FigureSkatingIceDancing";
            case TypeValueKnownValues.Value_FigureSkatingTeamTrophy:
                return "FigureSkatingTeamTrophy";
            case TypeValueKnownValues.Value_FreestyleSkiingMensAerials:
                return "FreestyleSkiingMensAerials";
            case TypeValueKnownValues.Value_FreestyleSkiingMensHalfpipe:
                return "FreestyleSkiingMensHalfpipe";
            case TypeValueKnownValues.Value_FreestyleSkiingMensMoguls:
                return "FreestyleSkiingMensMoguls";
            case TypeValueKnownValues.Value_FreestyleSkiingMensSlopestyle:
                return "FreestyleSkiingMensSlopestyle";
            case TypeValueKnownValues.Value_FreestyleSkiingMensSkiCross:
                return "FreestyleSkiingMensSkiCross";
            case TypeValueKnownValues.Value_FreestyleSkiingMensBigAir:
                return "FreestyleSkiingMensBigAir";
            case TypeValueKnownValues.Value_FreestyleSkiingWomensAerials:
                return "FreestyleSkiingWomensAerials";
            case TypeValueKnownValues.Value_FreestyleSkiingWomensHalfpipe:
                return "FreestyleSkiingWomensHalfpipe";
            case TypeValueKnownValues.Value_FreestyleSkiingWomensMoguls:
                return "FreestyleSkiingWomensMoguls";
            case TypeValueKnownValues.Value_FreestyleSkiingWomensSlopestyle:
                return "FreestyleSkiingWomensSlopestyle";
            case TypeValueKnownValues.Value_FreestyleSkiingWomensSkiCross:
                return "FreestyleSkiingWomensSkiCross";
            case TypeValueKnownValues.Value_FreestyleSkiingWomensBigAir:
                return "FreestyleSkiingWomensBigAir";
            case TypeValueKnownValues.Value_FreestyleSkiingMixedTeamAerials:
                return "FreestyleSkiingMixedTeamAerials";
            case TypeValueKnownValues.Value_IceHockeyMens:
                return "IceHockeyMens";
            case TypeValueKnownValues.Value_IceHockeyWomens:
                return "IceHockeyWomens";
            case TypeValueKnownValues.Value_LugeMensSingles:
                return "LugeMensSingles";
            case TypeValueKnownValues.Value_LugeWomensSingles:
                return "LugeWomensSingles";
            case TypeValueKnownValues.Value_LugeDoubles:
                return "LugeDoubles";
            case TypeValueKnownValues.Value_LugeTeamRelay:
                return "LugeTeamRelay";
            case TypeValueKnownValues.Value_NordicCombinedIndividualLargeHill10KM:
                return "NordicCombinedIndividualLargeHill10KM";
            case TypeValueKnownValues.Value_NordicCombinedIndividualNormalHill10KM:
                return "NordicCombinedIndividualNormalHill10KM";
            case TypeValueKnownValues.Value_NordicCombinedTeamLargeHill4X5KM:
                return "NordicCombinedTeamLargeHill4X5KM";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens500M:
                return "ShortTrackSpeedSkatingMens500M";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1000M:
                return "ShortTrackSpeedSkatingMens1000M";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1500M:
                return "ShortTrackSpeedSkatingMens1500M";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens5000MRelay:
                return "ShortTrackSpeedSkatingMens5000MRelay";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens500M:
                return "ShortTrackSpeedSkatingWomens500M";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1000M:
                return "ShortTrackSpeedSkatingWomens1000M";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1500M:
                return "ShortTrackSpeedSkatingWomens1500M";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens3000MRelay:
                return "ShortTrackSpeedSkatingWomens3000MRelay";
            case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMixed2000MRelay:
                return "ShortTrackSpeedSkatingMixed2000MRelay";
            case TypeValueKnownValues.Value_SkeletonMens:
                return "SkeletonMens";
            case TypeValueKnownValues.Value_SkeletonWomens:
                return "SkeletonWomens";
            case TypeValueKnownValues.Value_SkiJumpingMensIndividualNormalHill:
                return "SkiJumpingMensIndividualNormalHill";
            case TypeValueKnownValues.Value_SkiJumpingMensIndividualLargeHill:
                return "SkiJumpingMensIndividualLargeHill";
            case TypeValueKnownValues.Value_SkiJumpingMensTeamLargeHill:
                return "SkiJumpingMensTeamLargeHill";
            case TypeValueKnownValues.Value_SkiJumpingWomensIndividualNormalHill:
                return "SkiJumpingWomensIndividualNormalHill";
            case TypeValueKnownValues.Value_SkiJumpingMixedTeamNormalHill:
                return "SkiJumpingMixedTeamNormalHill";
            case TypeValueKnownValues.Value_SnowboardingMensParallelSlalom:
                return "SnowboardingMensParallelSlalom";
            case TypeValueKnownValues.Value_SnowboardingMensParallelGiantSlalom:
                return "SnowboardingMensParallelGiantSlalom";
            case TypeValueKnownValues.Value_SnowboardingMensHalfpipe:
                return "SnowboardingMensHalfpipe";
            case TypeValueKnownValues.Value_SnowboardingMensSlopestyle:
                return "SnowboardingMensSlopestyle";
            case TypeValueKnownValues.Value_SnowboardingMensSnowboardCross:
                return "SnowboardingMensSnowboardCross";
            case TypeValueKnownValues.Value_SnowboardingMensBigAir:
                return "SnowboardingMensBigAir";
            case TypeValueKnownValues.Value_SnowboardingWomensParallelSlalom:
                return "SnowboardingWomensParallelSlalom";
            case TypeValueKnownValues.Value_SnowboardingWomensParallelGiantSlalom:
                return "SnowboardingWomensParallelGiantSlalom";
            case TypeValueKnownValues.Value_SnowboardingWomensHalfpipe:
                return "SnowboardingWomensHalfpipe";
            case TypeValueKnownValues.Value_SnowboardingWomensSlopestyle:
                return "SnowboardingWomensSlopestyle";
            case TypeValueKnownValues.Value_SnowboardingWomensSnowboardCross:
                return "SnowboardingWomensSnowboardCross";
            case TypeValueKnownValues.Value_SnowboardingWomensBigAir:
                return "SnowboardingWomensBigAir";
            case TypeValueKnownValues.Value_SnowboardingMixedTeamSnowboardCross:
                return "SnowboardingMixedTeamSnowboardCross";
            case TypeValueKnownValues.Value_SpeedSkatingMens500M:
                return "SpeedSkatingMens500M";
            case TypeValueKnownValues.Value_SpeedSkatingMens1000M:
                return "SpeedSkatingMens1000M";
            case TypeValueKnownValues.Value_SpeedSkatingMens1500M:
                return "SpeedSkatingMens1500M";
            case TypeValueKnownValues.Value_SpeedSkatingMens5000M:
                return "SpeedSkatingMens5000M";
            case TypeValueKnownValues.Value_SpeedSkatingMens10000M:
                return "SpeedSkatingMens10000M";
            case TypeValueKnownValues.Value_SpeedSkatingMensTeamPursuit:
                return "SpeedSkatingMensTeamPursuit";
            case TypeValueKnownValues.Value_SpeedSkatingMensMassStart:
                return "SpeedSkatingMensMassStart";
            case TypeValueKnownValues.Value_SpeedSkatingMensAllRound:
                return "SpeedSkatingMensAllRound";
            case TypeValueKnownValues.Value_SpeedSkatingWomens500M:
                return "SpeedSkatingWomens500M";
            case TypeValueKnownValues.Value_SpeedSkatingWomens1000M:
                return "SpeedSkatingWomens1000M";
            case TypeValueKnownValues.Value_SpeedSkatingWomens1500M:
                return "SpeedSkatingWomens1500M";
            case TypeValueKnownValues.Value_SpeedSkatingWomens3000M:
                return "SpeedSkatingWomens3000M";
            case TypeValueKnownValues.Value_SpeedSkatingWomens5000M:
                return "SpeedSkatingWomens5000M";
            case TypeValueKnownValues.Value_SpeedSkatingWomensTeamPursuit:
                return "SpeedSkatingWomensTeamPursuit";
            case TypeValueKnownValues.Value_SpeedSkatingWomensMassStart:
                return "SpeedSkatingWomensMassStart";
            case TypeValueKnownValues.Value_ArcheryMensIndividual:
                return "ArcheryMensIndividual";
            case TypeValueKnownValues.Value_ArcheryMensTeam:
                return "ArcheryMensTeam";
            case TypeValueKnownValues.Value_ArcheryWomensIndividual:
                return "ArcheryWomensIndividual";
            case TypeValueKnownValues.Value_ArcheryWomensTeam:
                return "ArcheryWomensTeam";
            case TypeValueKnownValues.Value_ArcheryMixedTeam:
                return "ArcheryMixedTeam";
            case TypeValueKnownValues.Value_ArtisticSwimmingWomensDuet:
                return "ArtisticSwimmingWomensDuet";
            case TypeValueKnownValues.Value_ArtisticSwimmingWomensTeam:
                return "ArtisticSwimmingWomensTeam";
            case TypeValueKnownValues.Value_ArtisticSwimmingWomensSolo:
                return "ArtisticSwimmingWomensSolo";
            case TypeValueKnownValues.Value_AthleticsMens100M:
                return "AthleticsMens100M";
            case TypeValueKnownValues.Value_AthleticsMens200M:
                return "AthleticsMens200M";
            case TypeValueKnownValues.Value_AthleticsMens400M:
                return "AthleticsMens400M";
            case TypeValueKnownValues.Value_AthleticsMens800M:
                return "AthleticsMens800M";
            case TypeValueKnownValues.Value_AthleticsMens1500M:
                return "AthleticsMens1500M";
            case TypeValueKnownValues.Value_AthleticsMens5000M:
                return "AthleticsMens5000M";
            case TypeValueKnownValues.Value_AthleticsMens10000M:
                return "AthleticsMens10000M";
            case TypeValueKnownValues.Value_AthleticsMensHurdles110M:
                return "AthleticsMensHurdles110M";
            case TypeValueKnownValues.Value_AthleticsMensHurdles400M:
                return "AthleticsMensHurdles400M";
            case TypeValueKnownValues.Value_AthleticsMensSteeplechase3000M:
                return "AthleticsMensSteeplechase3000M";
            case TypeValueKnownValues.Value_AthleticsMens4X100MRelay:
                return "AthleticsMens4X100MRelay";
            case TypeValueKnownValues.Value_AthleticsMens4X400MRelay:
                return "AthleticsMens4X400MRelay";
            case TypeValueKnownValues.Value_AthleticsMensMarathon:
                return "AthleticsMensMarathon";
            case TypeValueKnownValues.Value_AthleticsMensWalk20KM:
                return "AthleticsMensWalk20KM";
            case TypeValueKnownValues.Value_AthleticsMensWalk50KM:
                return "AthleticsMensWalk50KM";
            case TypeValueKnownValues.Value_AthleticsMensHighJump:
                return "AthleticsMensHighJump";
            case TypeValueKnownValues.Value_AthleticsMensPoleVault:
                return "AthleticsMensPoleVault";
            case TypeValueKnownValues.Value_AthleticsMensLongJump:
                return "AthleticsMensLongJump";
            case TypeValueKnownValues.Value_AthleticsMensTripleJump:
                return "AthleticsMensTripleJump";
            case TypeValueKnownValues.Value_AthleticsMensShotPut:
                return "AthleticsMensShotPut";
            case TypeValueKnownValues.Value_AthleticsMensDiscusThrow:
                return "AthleticsMensDiscusThrow";
            case TypeValueKnownValues.Value_AthleticsMensHammerThrow:
                return "AthleticsMensHammerThrow";
            case TypeValueKnownValues.Value_AthleticsMensJavelinThrow:
                return "AthleticsMensJavelinThrow";
            case TypeValueKnownValues.Value_AthleticsMensDecathlon:
                return "AthleticsMensDecathlon";
            case TypeValueKnownValues.Value_AthleticsWomens100M:
                return "AthleticsWomens100M";
            case TypeValueKnownValues.Value_AthleticsWomens200M:
                return "AthleticsWomens200M";
            case TypeValueKnownValues.Value_AthleticsWomens400M:
                return "AthleticsWomens400M";
            case TypeValueKnownValues.Value_AthleticsWomens800M:
                return "AthleticsWomens800M";
            case TypeValueKnownValues.Value_AthleticsWomens1500M:
                return "AthleticsWomens1500M";
            case TypeValueKnownValues.Value_AthleticsWomens3000M:
                return "AthleticsWomens3000M";
            case TypeValueKnownValues.Value_AthleticsWomens5000M:
                return "AthleticsWomens5000M";
            case TypeValueKnownValues.Value_AthleticsWomens10000M:
                return "AthleticsWomens10000M";
            case TypeValueKnownValues.Value_AthleticsWomensHurdles100M:
                return "AthleticsWomensHurdles100M";
            case TypeValueKnownValues.Value_AthleticsWomenshurdles400M:
                return "AthleticsWomenshurdles400M";
            case TypeValueKnownValues.Value_AthleticsWomensSteeplechase3000M:
                return "AthleticsWomensSteeplechase3000M";
            case TypeValueKnownValues.Value_AthleticsWomens4X100MRelay:
                return "AthleticsWomens4X100MRelay";
            case TypeValueKnownValues.Value_AthleticsWomens4X400MRelay:
                return "AthleticsWomens4X400MRelay";
            case TypeValueKnownValues.Value_AthleticsWomensMarathon:
                return "AthleticsWomensMarathon";
            case TypeValueKnownValues.Value_AthleticsWomensWalk10KM:
                return "AthleticsWomensWalk10KM";
            case TypeValueKnownValues.Value_AthleticsWomensWalk20KM:
                return "AthleticsWomensWalk20KM";
            case TypeValueKnownValues.Value_AthleticsWomensHighJump:
                return "AthleticsWomensHighJump";
            case TypeValueKnownValues.Value_AthleticsWomensPoleVault:
                return "AthleticsWomensPoleVault";
            case TypeValueKnownValues.Value_AthleticsWomensLongJump:
                return "AthleticsWomensLongJump";
            case TypeValueKnownValues.Value_AthleticsWomensTripleJump:
                return "AthleticsWomensTripleJump";
            case TypeValueKnownValues.Value_AthleticsWomensShotPut:
                return "AthleticsWomensShotPut";
            case TypeValueKnownValues.Value_AthleticsWomensDiscusThrow:
                return "AthleticsWomensDiscusThrow";
            case TypeValueKnownValues.Value_AthleticsWomensHammerThrow:
                return "AthleticsWomensHammerThrow";
            case TypeValueKnownValues.Value_AthleticsWomensJavelinThrow:
                return "AthleticsWomensJavelinThrow";
            case TypeValueKnownValues.Value_AthleticsWomensHeptathlon:
                return "AthleticsWomensHeptathlon";
            case TypeValueKnownValues.Value_AthleticsMixed4X400MRelay:
                return "AthleticsMixed4X400MRelay";
            case TypeValueKnownValues.Value_BadmintonMensSingles:
                return "BadmintonMensSingles";
            case TypeValueKnownValues.Value_BadmintonMensDoubles:
                return "BadmintonMensDoubles";
            case TypeValueKnownValues.Value_BadmintonWomensSingles:
                return "BadmintonWomensSingles";
            case TypeValueKnownValues.Value_BadmintonWomensDoubles:
                return "BadmintonWomensDoubles";
            case TypeValueKnownValues.Value_BadmintonMixedDoubles:
                return "BadmintonMixedDoubles";
            case TypeValueKnownValues.Value_BaseballMens:
                return "BaseballMens";
            case TypeValueKnownValues.Value_BasketballMens:
                return "BasketballMens";
            case TypeValueKnownValues.Value_BasketballWomens:
                return "BasketballWomens";
            case TypeValueKnownValues.Value_BasketballMens3x3:
                return "BasketballMens3x3";
            case TypeValueKnownValues.Value_BasketballWomens3x3:
                return "BasketballWomens3x3";
            case TypeValueKnownValues.Value_BoxingMensLightFlyweight:
                return "BoxingMensLightFlyweight";
            case TypeValueKnownValues.Value_BoxingMensFlyweight:
                return "BoxingMensFlyweight";
            case TypeValueKnownValues.Value_BoxingMensBantamweight:
                return "BoxingMensBantamweight";
            case TypeValueKnownValues.Value_BoxingMensFeatherweight:
                return "BoxingMensFeatherweight";
            case TypeValueKnownValues.Value_BoxingMensLightweight:
                return "BoxingMensLightweight";
            case TypeValueKnownValues.Value_BoxingMensLightWelterweight:
                return "BoxingMensLightWelterweight";
            case TypeValueKnownValues.Value_BoxingMensWelterweight:
                return "BoxingMensWelterweight";
            case TypeValueKnownValues.Value_BoxingMensLightMiddleweight:
                return "BoxingMensLightMiddleweight";
            case TypeValueKnownValues.Value_BoxingMensMiddleweight:
                return "BoxingMensMiddleweight";
            case TypeValueKnownValues.Value_BoxingMensLightHeavyweight:
                return "BoxingMensLightHeavyweight";
            case TypeValueKnownValues.Value_BoxingMensHeavyweight:
                return "BoxingMensHeavyweight";
            case TypeValueKnownValues.Value_BoxingMensSuperHeavyweight:
                return "BoxingMensSuperHeavyweight";
            case TypeValueKnownValues.Value_BoxingWomensFlyweight:
                return "BoxingWomensFlyweight";
            case TypeValueKnownValues.Value_BoxingWomensFeatherweight:
                return "BoxingWomensFeatherweight";
            case TypeValueKnownValues.Value_BoxingWomensLightweight:
                return "BoxingWomensLightweight";
            case TypeValueKnownValues.Value_BoxingWomensWelterweight:
                return "BoxingWomensWelterweight";
            case TypeValueKnownValues.Value_BoxingWomensMiddleweight:
                return "BoxingWomensMiddleweight";
            case TypeValueKnownValues.Value_CanoeingMensSlalomC1:
                return "CanoeingMensSlalomC1";
            case TypeValueKnownValues.Value_CanoeingMensSlalomC2:
                return "CanoeingMensSlalomC2";
            case TypeValueKnownValues.Value_CanoeingMensSlalomK1:
                return "CanoeingMensSlalomK1";
            case TypeValueKnownValues.Value_CanoeingMensSprintC1200M:
                return "CanoeingMensSprintC1200M";
            case TypeValueKnownValues.Value_CanoeingMensSprintC1500M:
                return "CanoeingMensSprintC1500M";
            case TypeValueKnownValues.Value_CanoeingMensSprintC11000M:
                return "CanoeingMensSprintC11000M";
            case TypeValueKnownValues.Value_CanoeingMensSprintC2500M:
                return "CanoeingMensSprintC2500M";
            case TypeValueKnownValues.Value_CanoeingMensSprintC21000M:
                return "CanoeingMensSprintC21000M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK1200M:
                return "CanoeingMensSprintK1200M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK1500M:
                return "CanoeingMensSprintK1500M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK11000M:
                return "CanoeingMensSprintK11000M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK2200M:
                return "CanoeingMensSprintK2200M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK2500M:
                return "CanoeingMensSprintK2500M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK21000M:
                return "CanoeingMensSprintK21000M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK4500M:
                return "CanoeingMensSprintK4500M";
            case TypeValueKnownValues.Value_CanoeingMensSprintK41000M:
                return "CanoeingMensSprintK41000M";
            case TypeValueKnownValues.Value_CanoeingWomensSlalomC1:
                return "CanoeingWomensSlalomC1";
            case TypeValueKnownValues.Value_CanoeingWomensSlalomK1:
                return "CanoeingWomensSlalomK1";
            case TypeValueKnownValues.Value_CanoeingWomensSprintC1200M:
                return "CanoeingWomensSprintC1200M";
            case TypeValueKnownValues.Value_CanoeingWomensSprintC2500M:
                return "CanoeingWomensSprintC2500M";
            case TypeValueKnownValues.Value_CanoeingWomensSprintK1200M:
                return "CanoeingWomensSprintK1200M";
            case TypeValueKnownValues.Value_CanoeingWomensSprintK1500M:
                return "CanoeingWomensSprintK1500M";
            case TypeValueKnownValues.Value_CanoeingWomensSprintK2500M:
                return "CanoeingWomensSprintK2500M";
            case TypeValueKnownValues.Value_CanoeingWomensSprintK4500M:
                return "CanoeingWomensSprintK4500M";
            case TypeValueKnownValues.Value_CyclingMensRoadCyclingRoadRace:
                return "CyclingMensRoadCyclingRoadRace";
            case TypeValueKnownValues.Value_CyclingMensRoadCyclingTimeTrial:
                return "CyclingMensRoadCyclingTimeTrial";
            case TypeValueKnownValues.Value_CyclingMensRoadCyclingTeamTimeTrial:
                return "CyclingMensRoadCyclingTeamTimeTrial";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingKeirin:
                return "CyclingMensTrackCyclingKeirin";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingMadison:
                return "CyclingMensTrackCyclingMadison";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingOmnium:
                return "CyclingMensTrackCyclingOmnium";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingPointsRace:
                return "CyclingMensTrackCyclingPointsRace";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualPursuit:
                return "CyclingMensTrackCyclingIndividualPursuit";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamPursuit:
                return "CyclingMensTrackCyclingTeamPursuit";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualSprint:
                return "CyclingMensTrackCyclingIndividualSprint";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamSprint:
                return "CyclingMensTrackCyclingTeamSprint";
            case TypeValueKnownValues.Value_CyclingMensTrackCyclingTimeTrial:
                return "CyclingMensTrackCyclingTimeTrial";
            case TypeValueKnownValues.Value_CyclingMensMountainBikingCrossCountry:
                return "CyclingMensMountainBikingCrossCountry";
            case TypeValueKnownValues.Value_CyclingMensBMX:
                return "CyclingMensBMX";
            case TypeValueKnownValues.Value_CyclingMensBMXRace:
                return "CyclingMensBMXRace";
            case TypeValueKnownValues.Value_CyclingMensBMXFreestyle:
                return "CyclingMensBMXFreestyle";
            case TypeValueKnownValues.Value_CyclingWomensRoadCyclingRoadRace:
                return "CyclingWomensRoadCyclingRoadRace";
            case TypeValueKnownValues.Value_CyclingWomensRoadCyclingTimeTrial:
                return "CyclingWomensRoadCyclingTimeTrial";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingKeirin:
                return "CyclingWomensTrackCyclingKeirin";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingMadison:
                return "CyclingWomensTrackCyclingMadison";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingOmnium:
                return "CyclingWomensTrackCyclingOmnium";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingPointsRace:
                return "CyclingWomensTrackCyclingPointsRace";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualPursuit:
                return "CyclingWomensTrackCyclingIndividualPursuit";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamPursuit:
                return "CyclingWomensTrackCyclingTeamPursuit";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualSprint:
                return "CyclingWomensTrackCyclingIndividualSprint";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamSprint:
                return "CyclingWomensTrackCyclingTeamSprint";
            case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTimeTrial:
                return "CyclingWomensTrackCyclingTimeTrial";
            case TypeValueKnownValues.Value_CyclingWomensMountainBikingCrossCountry:
                return "CyclingWomensMountainBikingCrossCountry";
            case TypeValueKnownValues.Value_CyclingWomensBMX:
                return "CyclingWomensBMX";
            case TypeValueKnownValues.Value_CyclingWomensBMXRace:
                return "CyclingWomensBMXRace";
            case TypeValueKnownValues.Value_CyclingWomensBMXFreestyle:
                return "CyclingWomensBMXFreestyle";
            case TypeValueKnownValues.Value_DivingMensSpringboard:
                return "DivingMensSpringboard";
            case TypeValueKnownValues.Value_DivingMensPlatform:
                return "DivingMensPlatform";
            case TypeValueKnownValues.Value_DivingMensSynchronizedSpringboard:
                return "DivingMensSynchronizedSpringboard";
            case TypeValueKnownValues.Value_DivingMensSynchronizedPlatform:
                return "DivingMensSynchronizedPlatform";
            case TypeValueKnownValues.Value_DivingWomensSpringboard:
                return "DivingWomensSpringboard";
            case TypeValueKnownValues.Value_DivingWomensPlatform:
                return "DivingWomensPlatform";
            case TypeValueKnownValues.Value_DivingWomensSynchronizedSpringboard:
                return "DivingWomensSynchronizedSpringboard";
            case TypeValueKnownValues.Value_DivingWomensSynchronizedPlatform:
                return "DivingWomensSynchronizedPlatform";
            case TypeValueKnownValues.Value_EquestrianIndividualDressage:
                return "EquestrianIndividualDressage";
            case TypeValueKnownValues.Value_EquestrianTeamDressage:
                return "EquestrianTeamDressage";
            case TypeValueKnownValues.Value_EquestrianIndividualEventing:
                return "EquestrianIndividualEventing";
            case TypeValueKnownValues.Value_EquestrianTeamEventing:
                return "EquestrianTeamEventing";
            case TypeValueKnownValues.Value_EquestrianIndividualJumping:
                return "EquestrianIndividualJumping";
            case TypeValueKnownValues.Value_EquestrianTeamJumping:
                return "EquestrianTeamJumping";
            case TypeValueKnownValues.Value_FencingMensIndividualEpee:
                return "FencingMensIndividualEpee";
            case TypeValueKnownValues.Value_FencingMensTeamEpee:
                return "FencingMensTeamEpee";
            case TypeValueKnownValues.Value_FencingMensIndividualFoil:
                return "FencingMensIndividualFoil";
            case TypeValueKnownValues.Value_FencingMensTeamFoil:
                return "FencingMensTeamFoil";
            case TypeValueKnownValues.Value_FencingMensIndividualSabre:
                return "FencingMensIndividualSabre";
            case TypeValueKnownValues.Value_FencingMensTeamSabre:
                return "FencingMensTeamSabre";
            case TypeValueKnownValues.Value_FencingWomensIndividualEpee:
                return "FencingWomensIndividualEpee";
            case TypeValueKnownValues.Value_FencingWomensTeamEpee:
                return "FencingWomensTeamEpee";
            case TypeValueKnownValues.Value_FencingWomensIndividualFoil:
                return "FencingWomensIndividualFoil";
            case TypeValueKnownValues.Value_FencingWomensTeamFoil:
                return "FencingWomensTeamFoil";
            case TypeValueKnownValues.Value_FencingWomensIndividualSabre:
                return "FencingWomensIndividualSabre";
            case TypeValueKnownValues.Value_FencingWomensTeamSabre:
                return "FencingWomensTeamSabre";
            case TypeValueKnownValues.Value_FieldHockeyMens:
                return "FieldHockeyMens";
            case TypeValueKnownValues.Value_FieldHockeyWomens:
                return "FieldHockeyWomens";
            case TypeValueKnownValues.Value_FootballMens:
                return "FootballMens";
            case TypeValueKnownValues.Value_FootballWomens:
                return "FootballWomens";
            case TypeValueKnownValues.Value_GolfMensIndividual:
                return "GolfMensIndividual";
            case TypeValueKnownValues.Value_GolfWomensIndividual:
                return "GolfWomensIndividual";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticTeamAllAround:
                return "GymnasticsMensArtisticTeamAllAround";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticIndividualAllAround:
                return "GymnasticsMensArtisticIndividualAllAround";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticFloorExercise:
                return "GymnasticsMensArtisticFloorExercise";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticHorizontalBar:
                return "GymnasticsMensArtisticHorizontalBar";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticParallelBars:
                return "GymnasticsMensArtisticParallelBars";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticPommelHorse:
                return "GymnasticsMensArtisticPommelHorse";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticRings:
                return "GymnasticsMensArtisticRings";
            case TypeValueKnownValues.Value_GymnasticsMensArtisticVault:
                return "GymnasticsMensArtisticVault";
            case TypeValueKnownValues.Value_GymnasticsMensTrampolineIndividual:
                return "GymnasticsMensTrampolineIndividual";
            case TypeValueKnownValues.Value_GymnasticsWomensArtisticTeamAllAround:
                return "GymnasticsWomensArtisticTeamAllAround";
            case TypeValueKnownValues.Value_GymnasticsWomensArtisticIndividualAllAround:
                return "GymnasticsWomensArtisticIndividualAllAround";
            case TypeValueKnownValues.Value_GymnasticsWomensArtisticBalanceBeam:
                return "GymnasticsWomensArtisticBalanceBeam";
            case TypeValueKnownValues.Value_GymnasticsWomensArtisticFloorExercise:
                return "GymnasticsWomensArtisticFloorExercise";
            case TypeValueKnownValues.Value_GymnasticsWomensArtisticUnevenBars:
                return "GymnasticsWomensArtisticUnevenBars";
            case TypeValueKnownValues.Value_GymnasticsWomensArtisticVault:
                return "GymnasticsWomensArtisticVault";
            case TypeValueKnownValues.Value_GymnasticsWomensRhythmicIndividualAllAround:
                return "GymnasticsWomensRhythmicIndividualAllAround";
            case TypeValueKnownValues.Value_GymnasticsWomensRhythmicGroupAllAround:
                return "GymnasticsWomensRhythmicGroupAllAround";
            case TypeValueKnownValues.Value_GymnasticsWomensTrampolineIndividual:
                return "GymnasticsWomensTrampolineIndividual";
            case TypeValueKnownValues.Value_HandballMens:
                return "HandballMens";
            case TypeValueKnownValues.Value_HandballWomens:
                return "HandballWomens";
            case TypeValueKnownValues.Value_JudoMensExtraLightweight:
                return "JudoMensExtraLightweight";
            case TypeValueKnownValues.Value_JudoMensHalfLightweight:
                return "JudoMensHalfLightweight";
            case TypeValueKnownValues.Value_JudoMensLightweight:
                return "JudoMensLightweight";
            case TypeValueKnownValues.Value_JudoMensHalfMiddleweight:
                return "JudoMensHalfMiddleweight";
            case TypeValueKnownValues.Value_JudoMensMiddleweight:
                return "JudoMensMiddleweight";
            case TypeValueKnownValues.Value_JudoMensHalfHeavyweight:
                return "JudoMensHalfHeavyweight";
            case TypeValueKnownValues.Value_JudoMensHeavyweight:
                return "JudoMensHeavyweight";
            case TypeValueKnownValues.Value_JudoWomensExtraLightweight:
                return "JudoWomensExtraLightweight";
            case TypeValueKnownValues.Value_JudoWomensHalfLightweight:
                return "JudoWomensHalfLightweight";
            case TypeValueKnownValues.Value_JudoWomensLightweight:
                return "JudoWomensLightweight";
            case TypeValueKnownValues.Value_JudoWomensHalfMiddleweight:
                return "JudoWomensHalfMiddleweight";
            case TypeValueKnownValues.Value_JudoWomensMiddleweight:
                return "JudoWomensMiddleweight";
            case TypeValueKnownValues.Value_JudoWomensHalfHeavyweight:
                return "JudoWomensHalfHeavyweight";
            case TypeValueKnownValues.Value_JudoWomensHeavyweight:
                return "JudoWomensHeavyweight";
            case TypeValueKnownValues.Value_JudoMixedTeam:
                return "JudoMixedTeam";
            case TypeValueKnownValues.Value_KarateMens67Kg:
                return "KarateMens67Kg";
            case TypeValueKnownValues.Value_KarateMens75Kg:
                return "KarateMens75Kg";
            case TypeValueKnownValues.Value_KarateMens75KgPlus:
                return "KarateMens75KgPlus";
            case TypeValueKnownValues.Value_KarateMensKata:
                return "KarateMensKata";
            case TypeValueKnownValues.Value_KarateWomens55Kg:
                return "KarateWomens55Kg";
            case TypeValueKnownValues.Value_KarateWomens61Kg:
                return "KarateWomens61Kg";
            case TypeValueKnownValues.Value_KarateWomens61KgPlus:
                return "KarateWomens61KgPlus";
            case TypeValueKnownValues.Value_KarateWomensKata:
                return "KarateWomensKata";
            case TypeValueKnownValues.Value_ModernPentathlonMens:
                return "ModernPentathlonMens";
            case TypeValueKnownValues.Value_ModernPentathlonWomens:
                return "ModernPentathlonWomens";
            case TypeValueKnownValues.Value_RowingMensSingleSculls:
                return "RowingMensSingleSculls";
            case TypeValueKnownValues.Value_RowingMensDoubleSculls:
                return "RowingMensDoubleSculls";
            case TypeValueKnownValues.Value_RowingMensQuadrupleSculls:
                return "RowingMensQuadrupleSculls";
            case TypeValueKnownValues.Value_RowingMensCoxlessPair:
                return "RowingMensCoxlessPair";
            case TypeValueKnownValues.Value_RowingMensCoxedPair:
                return "RowingMensCoxedPair";
            case TypeValueKnownValues.Value_RowingMensCoxlessFour:
                return "RowingMensCoxlessFour";
            case TypeValueKnownValues.Value_RowingMensCoxedFour:
                return "RowingMensCoxedFour";
            case TypeValueKnownValues.Value_RowingMensCoxedEight:
                return "RowingMensCoxedEight";
            case TypeValueKnownValues.Value_RowingMensLightweightDoubleSculls:
                return "RowingMensLightweightDoubleSculls";
            case TypeValueKnownValues.Value_RowingMensLightweightCoxlessFour:
                return "RowingMensLightweightCoxlessFour";
            case TypeValueKnownValues.Value_RowingWomensSingleSculls:
                return "RowingWomensSingleSculls";
            case TypeValueKnownValues.Value_RowingWomensDoubleSculls:
                return "RowingWomensDoubleSculls";
            case TypeValueKnownValues.Value_RowingWomensQuadrupleSculls:
                return "RowingWomensQuadrupleSculls";
            case TypeValueKnownValues.Value_RowingWomensCoxlessPair:
                return "RowingWomensCoxlessPair";
            case TypeValueKnownValues.Value_RowingWomensCoxlessFour:
                return "RowingWomensCoxlessFour";
            case TypeValueKnownValues.Value_RowingWomensCoxedFour:
                return "RowingWomensCoxedFour";
            case TypeValueKnownValues.Value_RowingWomensCoxedEight:
                return "RowingWomensCoxedEight";
            case TypeValueKnownValues.Value_RowingWomensLightweightDoubleSculls:
                return "RowingWomensLightweightDoubleSculls";
            case TypeValueKnownValues.Value_RugbyMens:
                return "RugbyMens";
            case TypeValueKnownValues.Value_RugbyWomens:
                return "RugbyWomens";
            case TypeValueKnownValues.Value_SailingMensRSX:
                return "SailingMensRSX";
            case TypeValueKnownValues.Value_SailingMensLaser:
                return "SailingMensLaser";
            case TypeValueKnownValues.Value_SailingMensFinn:
                return "SailingMensFinn";
            case TypeValueKnownValues.Value_SailingMens470:
                return "SailingMens470";
            case TypeValueKnownValues.Value_SailingMens49er:
                return "SailingMens49er";
            case TypeValueKnownValues.Value_SailingMens49erFX:
                return "SailingMens49erFX";
            case TypeValueKnownValues.Value_SailingMensStar:
                return "SailingMensStar";
            case TypeValueKnownValues.Value_SailingWomensRSX:
                return "SailingWomensRSX";
            case TypeValueKnownValues.Value_SailingWomensLaser:
                return "SailingWomensLaser";
            case TypeValueKnownValues.Value_SailingWomensLaserRadial:
                return "SailingWomensLaserRadial";
            case TypeValueKnownValues.Value_SailingWomens470:
                return "SailingWomens470";
            case TypeValueKnownValues.Value_SailingWomens49erFX:
                return "SailingWomens49erFX";
            case TypeValueKnownValues.Value_SailingWomensElliott6M:
                return "SailingWomensElliott6M";
            case TypeValueKnownValues.Value_SailingWomensYngling:
                return "SailingWomensYngling";
            case TypeValueKnownValues.Value_SailingMixedNacra17:
                return "SailingMixedNacra17";
            case TypeValueKnownValues.Value_SailingMixed49erFX:
                return "SailingMixed49erFX";
            case TypeValueKnownValues.Value_SailingMixedFinn:
                return "SailingMixedFinn";
            case TypeValueKnownValues.Value_SailingMixedTornado:
                return "SailingMixedTornado";
            case TypeValueKnownValues.Value_ShootingMensAirPistol10M:
                return "ShootingMensAirPistol10M";
            case TypeValueKnownValues.Value_ShootingMensAirRifle10M:
                return "ShootingMensAirRifle10M";
            case TypeValueKnownValues.Value_ShootingMensRapidFirePistol25M:
                return "ShootingMensRapidFirePistol25M";
            case TypeValueKnownValues.Value_ShootingMensPistol50M:
                return "ShootingMensPistol50M";
            case TypeValueKnownValues.Value_ShootingMensRifleProne50M:
                return "ShootingMensRifleProne50M";
            case TypeValueKnownValues.Value_ShootingMensRifleThreePositions50M:
                return "ShootingMensRifleThreePositions50M";
            case TypeValueKnownValues.Value_ShootingMensSkeet:
                return "ShootingMensSkeet";
            case TypeValueKnownValues.Value_ShootingMensTrap:
                return "ShootingMensTrap";
            case TypeValueKnownValues.Value_ShootingMensDoubleTrap:
                return "ShootingMensDoubleTrap";
            case TypeValueKnownValues.Value_ShootingMens10MRunningTarget:
                return "ShootingMens10MRunningTarget";
            case TypeValueKnownValues.Value_ShootingWomensAirPistol10M:
                return "ShootingWomensAirPistol10M";
            case TypeValueKnownValues.Value_ShootingWomensAirRifle10M:
                return "ShootingWomensAirRifle10M";
            case TypeValueKnownValues.Value_ShootingWomensPistol25M:
                return "ShootingWomensPistol25M";
            case TypeValueKnownValues.Value_ShootingWomensRifleThreePositions50M:
                return "ShootingWomensRifleThreePositions50M";
            case TypeValueKnownValues.Value_ShootingWomensSkeet:
                return "ShootingWomensSkeet";
            case TypeValueKnownValues.Value_ShootingWomensTrap:
                return "ShootingWomensTrap";
            case TypeValueKnownValues.Value_ShootingWomensDoubleTrap:
                return "ShootingWomensDoubleTrap";
            case TypeValueKnownValues.Value_ShootingMixedAirPistolTeam:
                return "ShootingMixedAirPistolTeam";
            case TypeValueKnownValues.Value_ShootingMixedAirRifleTeam:
                return "ShootingMixedAirRifleTeam";
            case TypeValueKnownValues.Value_ShootingMixedTrapTeam:
                return "ShootingMixedTrapTeam";
            case TypeValueKnownValues.Value_SkateboardingMensPark:
                return "SkateboardingMensPark";
            case TypeValueKnownValues.Value_SkateboardingMensStreet:
                return "SkateboardingMensStreet";
            case TypeValueKnownValues.Value_SkateboardingWomensPark:
                return "SkateboardingWomensPark";
            case TypeValueKnownValues.Value_SkateboardingWomensStreet:
                return "SkateboardingWomensStreet";
            case TypeValueKnownValues.Value_SoftballWomens:
                return "SoftballWomens";
            case TypeValueKnownValues.Value_SportClimbingMensCombined:
                return "SportClimbingMensCombined";
            case TypeValueKnownValues.Value_SportClimbingWomensCombined:
                return "SportClimbingWomensCombined";
            case TypeValueKnownValues.Value_SportSurfingMens:
                return "SportSurfingMens";
            case TypeValueKnownValues.Value_SportSurfingWomens:
                return "SportSurfingWomens";
            case TypeValueKnownValues.Value_SwimmingMensFreestyle50M:
                return "SwimmingMensFreestyle50M";
            case TypeValueKnownValues.Value_SwimmingMensFreestyle100M:
                return "SwimmingMensFreestyle100M";
            case TypeValueKnownValues.Value_SwimmingMensFreestyle200M:
                return "SwimmingMensFreestyle200M";
            case TypeValueKnownValues.Value_SwimmingMensFreestyle400M:
                return "SwimmingMensFreestyle400M";
            case TypeValueKnownValues.Value_SwimmingMensFreestyle800M:
                return "SwimmingMensFreestyle800M";
            case TypeValueKnownValues.Value_SwimmingMensFreestyle1500M:
                return "SwimmingMensFreestyle1500M";
            case TypeValueKnownValues.Value_SwimmingMensBackstroke100M:
                return "SwimmingMensBackstroke100M";
            case TypeValueKnownValues.Value_SwimmingMensBackstroke200M:
                return "SwimmingMensBackstroke200M";
            case TypeValueKnownValues.Value_SwimmingMensBreaststroke100M:
                return "SwimmingMensBreaststroke100M";
            case TypeValueKnownValues.Value_SwimmingMensBreaststroke200M:
                return "SwimmingMensBreaststroke200M";
            case TypeValueKnownValues.Value_SwimmingMensButterfly100M:
                return "SwimmingMensButterfly100M";
            case TypeValueKnownValues.Value_SwimmingMensButterfly200M:
                return "SwimmingMensButterfly200M";
            case TypeValueKnownValues.Value_SwimmingMensIndividualMedley200M:
                return "SwimmingMensIndividualMedley200M";
            case TypeValueKnownValues.Value_SwimmingMensIndividualMedley400M:
                return "SwimmingMensIndividualMedley400M";
            case TypeValueKnownValues.Value_SwimmingMens4X100MFreestyleRelay:
                return "SwimmingMens4X100MFreestyleRelay";
            case TypeValueKnownValues.Value_SwimmingMens4X200MFreestyleRelay:
                return "SwimmingMens4X200MFreestyleRelay";
            case TypeValueKnownValues.Value_SwimmingMens4X100MMedleyRelay:
                return "SwimmingMens4X100MMedleyRelay";
            case TypeValueKnownValues.Value_SwimmingMensOpenWater10KM:
                return "SwimmingMensOpenWater10KM";
            case TypeValueKnownValues.Value_SwimmingWomensFreestyle50M:
                return "SwimmingWomensFreestyle50M";
            case TypeValueKnownValues.Value_SwimmingWomensFreestyle100M:
                return "SwimmingWomensFreestyle100M";
            case TypeValueKnownValues.Value_SwimmingWomensFreestyle200M:
                return "SwimmingWomensFreestyle200M";
            case TypeValueKnownValues.Value_SwimmingWomensFreestyle400M:
                return "SwimmingWomensFreestyle400M";
            case TypeValueKnownValues.Value_SwimmingWomensFreestyle800M:
                return "SwimmingWomensFreestyle800M";
            case TypeValueKnownValues.Value_SwimmingWomensFreestyle1500M:
                return "SwimmingWomensFreestyle1500M";
            case TypeValueKnownValues.Value_SwimmingWomensBackstroke100M:
                return "SwimmingWomensBackstroke100M";
            case TypeValueKnownValues.Value_SwimmingWomensBackstroke200M:
                return "SwimmingWomensBackstroke200M";
            case TypeValueKnownValues.Value_SwimmingWomensBreaststroke100M:
                return "SwimmingWomensBreaststroke100M";
            case TypeValueKnownValues.Value_SwimmingWomensBreaststroke200M:
                return "SwimmingWomensBreaststroke200M";
            case TypeValueKnownValues.Value_SwimmingWomensButterfly100M:
                return "SwimmingWomensButterfly100M";
            case TypeValueKnownValues.Value_SwimmingWomensButterfly200M:
                return "SwimmingWomensButterfly200M";
            case TypeValueKnownValues.Value_SwimmingWomensIndividualMedley200M:
                return "SwimmingWomensIndividualMedley200M";
            case TypeValueKnownValues.Value_SwimmingWomensindividualMedley400M:
                return "SwimmingWomensindividualMedley400M";
            case TypeValueKnownValues.Value_SwimmingWomens4X100MFreestyleRelay:
                return "SwimmingWomens4X100MFreestyleRelay";
            case TypeValueKnownValues.Value_SwimmingWomens4X200MFreestyleRelay:
                return "SwimmingWomens4X200MFreestyleRelay";
            case TypeValueKnownValues.Value_SwimmingWomens4X100MMedleyRelay:
                return "SwimmingWomens4X100MMedleyRelay";
            case TypeValueKnownValues.Value_SwimmingWomensOpenWater10KM:
                return "SwimmingWomensOpenWater10KM";
            case TypeValueKnownValues.Value_SwimmingMixed4X100MMedleyRelay:
                return "SwimmingMixed4X100MMedleyRelay";
            case TypeValueKnownValues.Value_TableTennisMensSingles:
                return "TableTennisMensSingles";
            case TypeValueKnownValues.Value_TableTennisMensTeam:
                return "TableTennisMensTeam";
            case TypeValueKnownValues.Value_TableTennisWomensSingles:
                return "TableTennisWomensSingles";
            case TypeValueKnownValues.Value_TableTennisWomensTeam:
                return "TableTennisWomensTeam";
            case TypeValueKnownValues.Value_TableTennisMixedDoubles:
                return "TableTennisMixedDoubles";
            case TypeValueKnownValues.Value_TaekwondoMensFlyweight:
                return "TaekwondoMensFlyweight";
            case TypeValueKnownValues.Value_TaekwondoMensFeatherweight:
                return "TaekwondoMensFeatherweight";
            case TypeValueKnownValues.Value_TaekwondoMensWelterweight:
                return "TaekwondoMensWelterweight";
            case TypeValueKnownValues.Value_TaekwondoMensHeavyweight:
                return "TaekwondoMensHeavyweight";
            case TypeValueKnownValues.Value_TaekwondoWomensFlyweight:
                return "TaekwondoWomensFlyweight";
            case TypeValueKnownValues.Value_TaekwondoWomensFeatherweight:
                return "TaekwondoWomensFeatherweight";
            case TypeValueKnownValues.Value_TaekwondoWomensWelterweight:
                return "TaekwondoWomensWelterweight";
            case TypeValueKnownValues.Value_TaekwondoWomensHeavyweight:
                return "TaekwondoWomensHeavyweight";
            case TypeValueKnownValues.Value_TennisMensSingles:
                return "TennisMensSingles";
            case TypeValueKnownValues.Value_TennisMensDoubles:
                return "TennisMensDoubles";
            case TypeValueKnownValues.Value_TennisWomensSingles:
                return "TennisWomensSingles";
            case TypeValueKnownValues.Value_TennisWomensDoubles:
                return "TennisWomensDoubles";
            case TypeValueKnownValues.Value_TennisMixedDoubles:
                return "TennisMixedDoubles";
            case TypeValueKnownValues.Value_TriathlonMensIndividual:
                return "TriathlonMensIndividual";
            case TypeValueKnownValues.Value_TriathlonWomensIndividual:
                return "TriathlonWomensIndividual";
            case TypeValueKnownValues.Value_TriathlonMixedRelay:
                return "TriathlonMixedRelay";
            case TypeValueKnownValues.Value_VolleyballMensIndoor:
                return "VolleyballMensIndoor";
            case TypeValueKnownValues.Value_VolleyballMensBeach:
                return "VolleyballMensBeach";
            case TypeValueKnownValues.Value_VolleyballWomensIndoor:
                return "VolleyballWomensIndoor";
            case TypeValueKnownValues.Value_VolleyballWomensBeach:
                return "VolleyballWomensBeach";
            case TypeValueKnownValues.Value_WaterPoloMens:
                return "WaterPoloMens";
            case TypeValueKnownValues.Value_WaterPoloWomens:
                return "WaterPoloWomens";
            case TypeValueKnownValues.Value_WeightliftingMensFlyweight:
                return "WeightliftingMensFlyweight";
            case TypeValueKnownValues.Value_WeightliftingMensBantamweight:
                return "WeightliftingMensBantamweight";
            case TypeValueKnownValues.Value_WeightliftingMensFeatherweight:
                return "WeightliftingMensFeatherweight";
            case TypeValueKnownValues.Value_WeightliftingMensLightweight:
                return "WeightliftingMensLightweight";
            case TypeValueKnownValues.Value_WeightliftingMensMiddleweight:
                return "WeightliftingMensMiddleweight";
            case TypeValueKnownValues.Value_WeightliftingMensLightHeavyweight:
                return "WeightliftingMensLightHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingMensMiddleHeavyweight:
                return "WeightliftingMensMiddleHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingMensFirstHeavyweight:
                return "WeightliftingMensFirstHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingMensHeavyweight:
                return "WeightliftingMensHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingMensSuperHeavyweight:
                return "WeightliftingMensSuperHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingMens61Kg:
                return "WeightliftingMens61Kg";
            case TypeValueKnownValues.Value_WeightliftingMens67Kg:
                return "WeightliftingMens67Kg";
            case TypeValueKnownValues.Value_WeightliftingMens73Kg:
                return "WeightliftingMens73Kg";
            case TypeValueKnownValues.Value_WeightliftingMens81Kg:
                return "WeightliftingMens81Kg";
            case TypeValueKnownValues.Value_WeightliftingMens96Kg:
                return "WeightliftingMens96Kg";
            case TypeValueKnownValues.Value_WeightliftingMens109Kg:
                return "WeightliftingMens109Kg";
            case TypeValueKnownValues.Value_WeightliftingMens109KgPlus:
                return "WeightliftingMens109KgPlus";
            case TypeValueKnownValues.Value_WeightliftingWomensFlyweight:
                return "WeightliftingWomensFlyweight";
            case TypeValueKnownValues.Value_WeightliftingWomensFeatherweight:
                return "WeightliftingWomensFeatherweight";
            case TypeValueKnownValues.Value_WeightliftingWomensLightweight:
                return "WeightliftingWomensLightweight";
            case TypeValueKnownValues.Value_WeightliftingWomensMiddleweight:
                return "WeightliftingWomensMiddleweight";
            case TypeValueKnownValues.Value_WeightliftingWomensLightHeavyweight:
                return "WeightliftingWomensLightHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingWomensHeavyweight:
                return "WeightliftingWomensHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingWomensSuperHeavyweight:
                return "WeightliftingWomensSuperHeavyweight";
            case TypeValueKnownValues.Value_WeightliftingWomens49Kg:
                return "WeightliftingWomens49Kg";
            case TypeValueKnownValues.Value_WeightliftingWomens55Kg:
                return "WeightliftingWomens55Kg";
            case TypeValueKnownValues.Value_WeightliftingWomens59Kg:
                return "WeightliftingWomens59Kg";
            case TypeValueKnownValues.Value_WeightliftingWomens64Kg:
                return "WeightliftingWomens64Kg";
            case TypeValueKnownValues.Value_WeightliftingWomens76Kg:
                return "WeightliftingWomens76Kg";
            case TypeValueKnownValues.Value_WeightliftingWomens87Kg:
                return "WeightliftingWomens87Kg";
            case TypeValueKnownValues.Value_WeightliftingWomens87KgPlus:
                return "WeightliftingWomens87KgPlus";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightFlyweight:
                return "WrestlingMensGrecoRomanLightFlyweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanFlyweight:
                return "WrestlingMensGrecoRomanFlyweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanBantamweight:
                return "WrestlingMensGrecoRomanBantamweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanFeatherweight:
                return "WrestlingMensGrecoRomanFeatherweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightweight:
                return "WrestlingMensGrecoRomanLightweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanWelterweight:
                return "WrestlingMensGrecoRomanWelterweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanMiddleweight:
                return "WrestlingMensGrecoRomanMiddleweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightHeavyweight:
                return "WrestlingMensGrecoRomanLightHeavyweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanHeavyweight:
                return "WrestlingMensGrecoRomanHeavyweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRomanSuperHeavyweight:
                return "WrestlingMensGrecoRomanSuperHeavyweight";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRoman60Kg:
                return "WrestlingMensGrecoRoman60Kg";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRoman67Kg:
                return "WrestlingMensGrecoRoman67Kg";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRoman77Kg:
                return "WrestlingMensGrecoRoman77Kg";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRoman87Kg:
                return "WrestlingMensGrecoRoman87Kg";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRoman97Kg:
                return "WrestlingMensGrecoRoman97Kg";
            case TypeValueKnownValues.Value_WrestlingMensGrecoRoman130Kg:
                return "WrestlingMensGrecoRoman130Kg";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleLightFlyweight:
                return "WrestlingMensFreestyleLightFlyweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleFlyweight:
                return "WrestlingMensFreestyleFlyweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleBantamweight:
                return "WrestlingMensFreestyleBantamweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleFeatherweight:
                return "WrestlingMensFreestyleFeatherweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleLightweight:
                return "WrestlingMensFreestyleLightweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleWelterweight:
                return "WrestlingMensFreestyleWelterweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleMiddleweight:
                return "WrestlingMensFreestyleMiddleweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleLightHeavyweight:
                return "WrestlingMensFreestyleLightHeavyweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleHeavyweight:
                return "WrestlingMensFreestyleHeavyweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyleSuperHeavyweight:
                return "WrestlingMensFreestyleSuperHeavyweight";
            case TypeValueKnownValues.Value_WrestlingMensFreestyle57Kg:
                return "WrestlingMensFreestyle57Kg";
            case TypeValueKnownValues.Value_WrestlingMensFreestyle65Kg:
                return "WrestlingMensFreestyle65Kg";
            case TypeValueKnownValues.Value_WrestlingMensFreestyle74Kg:
                return "WrestlingMensFreestyle74Kg";
            case TypeValueKnownValues.Value_WrestlingMensFreestyle86Kg:
                return "WrestlingMensFreestyle86Kg";
            case TypeValueKnownValues.Value_WrestlingMensFreestyle97Kg:
                return "WrestlingMensFreestyle97Kg";
            case TypeValueKnownValues.Value_WrestlingMensFreestyle125Kg:
                return "WrestlingMensFreestyle125Kg";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyleFlyweight:
                return "WrestlingWomensFreestyleFlyweight";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyleBantamweight:
                return "WrestlingWomensFreestyleBantamweight";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyleLightweight:
                return "WrestlingWomensFreestyleLightweight";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyleMiddleweight:
                return "WrestlingWomensFreestyleMiddleweight";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyleWelterweight:
                return "WrestlingWomensFreestyleWelterweight";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyleLightHeavyweight:
                return "WrestlingWomensFreestyleLightHeavyweight";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyleHeavyweight:
                return "WrestlingWomensFreestyleHeavyweight";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyle50Kg:
                return "WrestlingWomensFreestyle50Kg";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyle53Kg:
                return "WrestlingWomensFreestyle53Kg";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyle57Kg:
                return "WrestlingWomensFreestyle57Kg";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyle62Kg:
                return "WrestlingWomensFreestyle62Kg";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyle68Kg:
                return "WrestlingWomensFreestyle68Kg";
            case TypeValueKnownValues.Value_WrestlingWomensFreestyle76Kg:
                return "WrestlingWomensFreestyle76Kg";
            default:
                Debug.Assert(false);
                return null;
          }
      }

    private bool flagHasValue;
    private TypeValue storeValue;


    private void  fromJSONValue(JSONValue json_value, bool ignore_extras)
      {
        Debug.Assert(json_value != null);
        JSONStringValue json_string = json_value.string_value();
        if (json_string == null)
            throw new Exception("The value for field Value of SportsOlympicsEventJSON is not a string.");
        TypeValue the_open_enum = new TypeValue();
        switch (json_string.getData()[0])
          {
            case 'A':
                switch (json_string.getData()[1])
                  {
                    case 'l':
                        if (String.Compare(json_string.getData(), 2, "pineSkiing", 0, 10, false) == 0)
                          {
                            switch (json_string.getData()[12])
                              {
                                case 'M':
                                    switch (json_string.getData()[13])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 14, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[16])
                                                  {
                                                    case 'C':
                                                        if ((String.Compare(json_string.getData(), 17, "ombined", 0, 7, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingMensCombined;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'D':
                                                        if ((String.Compare(json_string.getData(), 17, "ownhill", 0, 7, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingMensDownhill;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'G':
                                                        if ((String.Compare(json_string.getData(), 17, "iantSlalom", 0, 10, false) == 0) && (json_string.getData().Length == 27))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingMensGiantSlalom;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        switch (json_string.getData()[17])
                                                          {
                                                            case 'l':
                                                                if ((String.Compare(json_string.getData(), 18, "alom", 0, 4, false) == 0) && (json_string.getData().Length == 22))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingMensSlalom;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'u':
                                                                if ((String.Compare(json_string.getData(), 18, "perG", 0, 4, false) == 0) && (json_string.getData().Length == 22))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingMensSuperG;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 14, "xedTeam", 0, 7, false) == 0) && (json_string.getData().Length == 21))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingMixedTeam;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 13, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[18])
                                          {
                                            case 'C':
                                                if ((String.Compare(json_string.getData(), 19, "ombined", 0, 7, false) == 0) && (json_string.getData().Length == 26))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingWomensCombined;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'D':
                                                if ((String.Compare(json_string.getData(), 19, "ownhill", 0, 7, false) == 0) && (json_string.getData().Length == 26))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingWomensDownhill;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'G':
                                                if ((String.Compare(json_string.getData(), 19, "iantSlalom", 0, 10, false) == 0) && (json_string.getData().Length == 29))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingWomensGiantSlalom;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                switch (json_string.getData()[19])
                                                  {
                                                    case 'l':
                                                        if ((String.Compare(json_string.getData(), 20, "alom", 0, 4, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingWomensSlalom;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'u':
                                                        if ((String.Compare(json_string.getData(), 20, "perG", 0, 4, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AlpineSkiingWomensSuperG;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        switch (json_string.getData()[2])
                          {
                            case 'c':
                                if (String.Compare(json_string.getData(), 3, "hery", 0, 4, false) == 0)
                                  {
                                    switch (json_string.getData()[7])
                                      {
                                        case 'M':
                                            switch (json_string.getData()[8])
                                              {
                                                case 'e':
                                                    if (String.Compare(json_string.getData(), 9, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (json_string.getData()[11])
                                                          {
                                                            case 'I':
                                                                if ((String.Compare(json_string.getData(), 12, "ndividual", 0, 9, false) == 0) && (json_string.getData().Length == 21))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ArcheryMensIndividual;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                if ((String.Compare(json_string.getData(), 12, "eam", 0, 3, false) == 0) && (json_string.getData().Length == 15))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ArcheryMensTeam;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(json_string.getData(), 9, "xedTeam", 0, 7, false) == 0) && (json_string.getData().Length == 16))
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ArcheryMixedTeam;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 8, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[13])
                                                  {
                                                    case 'I':
                                                        if ((String.Compare(json_string.getData(), 14, "ndividual", 0, 9, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_ArcheryWomensIndividual;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 14, "eam", 0, 3, false) == 0) && (json_string.getData().Length == 17))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_ArcheryWomensTeam;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 't':
                                if (String.Compare(json_string.getData(), 3, "isticSwimmingWomens", 0, 19, false) == 0)
                                  {
                                    switch (json_string.getData()[22])
                                      {
                                        case 'D':
                                            if ((String.Compare(json_string.getData(), 23, "uet", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ArtisticSwimmingWomensDuet;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'S':
                                            if ((String.Compare(json_string.getData(), 23, "olo", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ArtisticSwimmingWomensSolo;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'T':
                                            if ((String.Compare(json_string.getData(), 23, "eam", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ArtisticSwimmingWomensTeam;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 't':
                        if (String.Compare(json_string.getData(), 2, "hletics", 0, 7, false) == 0)
                          {
                            switch (json_string.getData()[9])
                              {
                                case 'M':
                                    switch (json_string.getData()[10])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 11, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[13])
                                                  {
                                                    case '1':
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case '0':
                                                                if (String.Compare(json_string.getData(), 15, "0", 0, 1, false) == 0)
                                                                  {
                                                                    switch (json_string.getData()[16])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(json_string.getData(), 17, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 19))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens10000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'M':
                                                                            if (json_string.getData().Length == 17)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens100M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case '5':
                                                                if ((String.Compare(json_string.getData(), 15, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 18))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens1500M;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '2':
                                                        if ((String.Compare(json_string.getData(), 14, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 17))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens200M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '4':
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case '0':
                                                                if ((String.Compare(json_string.getData(), 15, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 17))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens400M;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'X':
                                                                switch (json_string.getData()[15])
                                                                  {
                                                                    case '1':
                                                                        if ((String.Compare(json_string.getData(), 16, "00MRelay", 0, 8, false) == 0) && (json_string.getData().Length == 24))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens4X100MRelay;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '4':
                                                                        if ((String.Compare(json_string.getData(), 16, "00MRelay", 0, 8, false) == 0) && (json_string.getData().Length == 24))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens4X400MRelay;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(json_string.getData(), 14, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 18))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens5000M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '8':
                                                        if ((String.Compare(json_string.getData(), 14, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 17))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMens800M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'D':
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(json_string.getData(), 15, "cathlon", 0, 7, false) == 0) && (json_string.getData().Length == 22))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensDecathlon;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'i':
                                                                if ((String.Compare(json_string.getData(), 15, "scusThrow", 0, 9, false) == 0) && (json_string.getData().Length == 24))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensDiscusThrow;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case 'a':
                                                                if ((String.Compare(json_string.getData(), 15, "mmerThrow", 0, 9, false) == 0) && (json_string.getData().Length == 24))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensHammerThrow;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'i':
                                                                if ((String.Compare(json_string.getData(), 15, "ghJump", 0, 6, false) == 0) && (json_string.getData().Length == 21))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensHighJump;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'u':
                                                                if (String.Compare(json_string.getData(), 15, "rdles", 0, 5, false) == 0)
                                                                  {
                                                                    switch (json_string.getData()[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 21, "10M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensHurdles110M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '4':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensHurdles400M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'J':
                                                        if ((String.Compare(json_string.getData(), 14, "avelinThrow", 0, 11, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensJavelinThrow;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'L':
                                                        if ((String.Compare(json_string.getData(), 14, "ongJump", 0, 7, false) == 0) && (json_string.getData().Length == 21))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensLongJump;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 14, "arathon", 0, 7, false) == 0) && (json_string.getData().Length == 21))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensMarathon;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if ((String.Compare(json_string.getData(), 14, "oleVault", 0, 8, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensPoleVault;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case 'h':
                                                                if ((String.Compare(json_string.getData(), 15, "otPut", 0, 5, false) == 0) && (json_string.getData().Length == 20))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensShotPut;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 't':
                                                                if ((String.Compare(json_string.getData(), 15, "eeplechase3000M", 0, 15, false) == 0) && (json_string.getData().Length == 30))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensSteeplechase3000M;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 14, "ripleJump", 0, 9, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensTripleJump;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if (String.Compare(json_string.getData(), 14, "alk", 0, 3, false) == 0)
                                                          {
                                                            switch (json_string.getData()[17])
                                                              {
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 18, "0KM", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensWalk20KM;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(json_string.getData(), 18, "0KM", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMensWalk50KM;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 11, "xed4X400MRelay", 0, 14, false) == 0) && (json_string.getData().Length == 25))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsMixed4X400MRelay;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 10, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[15])
                                          {
                                            case '1':
                                                switch (json_string.getData()[16])
                                                  {
                                                    case '0':
                                                        if (String.Compare(json_string.getData(), 17, "0", 0, 1, false) == 0)
                                                          {
                                                            switch (json_string.getData()[18])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(json_string.getData(), 19, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 21))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens10000M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'M':
                                                                    if (json_string.getData().Length == 19)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens100M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(json_string.getData(), 17, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 20))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens1500M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '2':
                                                if ((String.Compare(json_string.getData(), 16, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 19))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens200M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '3':
                                                if ((String.Compare(json_string.getData(), 16, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 20))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens3000M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '4':
                                                switch (json_string.getData()[16])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(json_string.getData(), 17, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 19))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens400M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'X':
                                                        switch (json_string.getData()[17])
                                                          {
                                                            case '1':
                                                                if ((String.Compare(json_string.getData(), 18, "00MRelay", 0, 8, false) == 0) && (json_string.getData().Length == 26))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens4X100MRelay;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '4':
                                                                if ((String.Compare(json_string.getData(), 18, "00MRelay", 0, 8, false) == 0) && (json_string.getData().Length == 26))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens4X400MRelay;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '5':
                                                if ((String.Compare(json_string.getData(), 16, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 20))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens5000M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '8':
                                                if ((String.Compare(json_string.getData(), 16, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 19))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomens800M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'D':
                                                if ((String.Compare(json_string.getData(), 16, "iscusThrow", 0, 10, false) == 0) && (json_string.getData().Length == 26))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensDiscusThrow;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'H':
                                                switch (json_string.getData()[16])
                                                  {
                                                    case 'a':
                                                        if ((String.Compare(json_string.getData(), 17, "mmerThrow", 0, 9, false) == 0) && (json_string.getData().Length == 26))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensHammerThrow;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'e':
                                                        if ((String.Compare(json_string.getData(), 17, "ptathlon", 0, 8, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensHeptathlon;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'i':
                                                        if ((String.Compare(json_string.getData(), 17, "ghJump", 0, 6, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensHighJump;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'u':
                                                        if ((String.Compare(json_string.getData(), 17, "rdles100M", 0, 9, false) == 0) && (json_string.getData().Length == 26))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensHurdles100M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'J':
                                                if ((String.Compare(json_string.getData(), 16, "avelinThrow", 0, 11, false) == 0) && (json_string.getData().Length == 27))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensJavelinThrow;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'L':
                                                if ((String.Compare(json_string.getData(), 16, "ongJump", 0, 7, false) == 0) && (json_string.getData().Length == 23))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensLongJump;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 16, "arathon", 0, 7, false) == 0) && (json_string.getData().Length == 23))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensMarathon;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'P':
                                                if ((String.Compare(json_string.getData(), 16, "oleVault", 0, 8, false) == 0) && (json_string.getData().Length == 24))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensPoleVault;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                switch (json_string.getData()[16])
                                                  {
                                                    case 'h':
                                                        if ((String.Compare(json_string.getData(), 17, "otPut", 0, 5, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensShotPut;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 't':
                                                        if ((String.Compare(json_string.getData(), 17, "eeplechase3000M", 0, 15, false) == 0) && (json_string.getData().Length == 32))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensSteeplechase3000M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'T':
                                                if ((String.Compare(json_string.getData(), 16, "ripleJump", 0, 9, false) == 0) && (json_string.getData().Length == 25))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensTripleJump;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'W':
                                                if (String.Compare(json_string.getData(), 16, "alk", 0, 3, false) == 0)
                                                  {
                                                    switch (json_string.getData()[19])
                                                      {
                                                        case '1':
                                                            if ((String.Compare(json_string.getData(), 20, "0KM", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensWalk10KM;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '2':
                                                            if ((String.Compare(json_string.getData(), 20, "0KM", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomensWalk20KM;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'h':
                                                if ((String.Compare(json_string.getData(), 16, "urdles400M", 0, 10, false) == 0) && (json_string.getData().Length == 26))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_AthleticsWomenshurdles400M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'B':
                switch (json_string.getData()[1])
                  {
                    case 'a':
                        switch (json_string.getData()[2])
                          {
                            case 'd':
                                if (String.Compare(json_string.getData(), 3, "minton", 0, 6, false) == 0)
                                  {
                                    switch (json_string.getData()[9])
                                      {
                                        case 'M':
                                            switch (json_string.getData()[10])
                                              {
                                                case 'e':
                                                    if (String.Compare(json_string.getData(), 11, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (json_string.getData()[13])
                                                          {
                                                            case 'D':
                                                                if ((String.Compare(json_string.getData(), 14, "oubles", 0, 6, false) == 0) && (json_string.getData().Length == 20))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BadmintonMensDoubles;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'S':
                                                                if ((String.Compare(json_string.getData(), 14, "ingles", 0, 6, false) == 0) && (json_string.getData().Length == 20))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BadmintonMensSingles;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(json_string.getData(), 11, "xedDoubles", 0, 10, false) == 0) && (json_string.getData().Length == 21))
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_BadmintonMixedDoubles;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 10, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[15])
                                                  {
                                                    case 'D':
                                                        if ((String.Compare(json_string.getData(), 16, "oubles", 0, 6, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BadmintonWomensDoubles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 16, "ingles", 0, 6, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BadmintonWomensSingles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 's':
                                switch (json_string.getData()[3])
                                  {
                                    case 'e':
                                        if ((String.Compare(json_string.getData(), 4, "ballMens", 0, 8, false) == 0) && (json_string.getData().Length == 12))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_BaseballMens;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'k':
                                        if (String.Compare(json_string.getData(), 4, "etball", 0, 6, false) == 0)
                                          {
                                            switch (json_string.getData()[10])
                                              {
                                                case 'M':
                                                    if (String.Compare(json_string.getData(), 11, "ens", 0, 3, false) == 0)
                                                      {
                                                        if (json_string.getData().Length == 14)
                                                          {
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BasketballMens;
                                                                goto open_enum_is_done;
                                                              }
                                                          }
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case '3':
                                                                if ((String.Compare(json_string.getData(), 15, "x3", 0, 2, false) == 0) && (json_string.getData().Length == 17))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BasketballMens3x3;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'W':
                                                    if (String.Compare(json_string.getData(), 11, "omens", 0, 5, false) == 0)
                                                      {
                                                        if (json_string.getData().Length == 16)
                                                          {
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BasketballWomens;
                                                                goto open_enum_is_done;
                                                              }
                                                          }
                                                        switch (json_string.getData()[16])
                                                          {
                                                            case '3':
                                                                if ((String.Compare(json_string.getData(), 17, "x3", 0, 2, false) == 0) && (json_string.getData().Length == 19))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BasketballWomens3x3;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'i':
                        if (String.Compare(json_string.getData(), 2, "athlon", 0, 6, false) == 0)
                          {
                            switch (json_string.getData()[8])
                              {
                                case 'M':
                                    switch (json_string.getData()[9])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 10, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[12])
                                                  {
                                                    case 'I':
                                                        if ((String.Compare(json_string.getData(), 13, "ndividual", 0, 9, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonMensIndividual;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'M':
                                                        switch (json_string.getData()[13])
                                                          {
                                                            case 'a':
                                                                if ((String.Compare(json_string.getData(), 14, "ssStart", 0, 7, false) == 0) && (json_string.getData().Length == 21))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonMensMassStart;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'i':
                                                                if ((String.Compare(json_string.getData(), 14, "litaryPatrol", 0, 12, false) == 0) && (json_string.getData().Length == 26))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonMensMilitaryPatrol;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'P':
                                                        if ((String.Compare(json_string.getData(), 13, "ursuit", 0, 6, false) == 0) && (json_string.getData().Length == 19))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonMensPursuit;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'R':
                                                        if ((String.Compare(json_string.getData(), 13, "elay", 0, 4, false) == 0) && (json_string.getData().Length == 17))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonMensRelay;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 13, "print", 0, 5, false) == 0) && (json_string.getData().Length == 18))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonMensSprint;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 10, "xedRelay", 0, 8, false) == 0) && (json_string.getData().Length == 18))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonMixedRelay;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 9, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[14])
                                          {
                                            case 'I':
                                                if ((String.Compare(json_string.getData(), 15, "ndividual", 0, 9, false) == 0) && (json_string.getData().Length == 24))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonWomensIndividual;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 15, "assStart", 0, 8, false) == 0) && (json_string.getData().Length == 23))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonWomensMassStart;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'P':
                                                if ((String.Compare(json_string.getData(), 15, "ursuit", 0, 6, false) == 0) && (json_string.getData().Length == 21))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonWomensPursuit;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'R':
                                                if ((String.Compare(json_string.getData(), 15, "elay", 0, 4, false) == 0) && (json_string.getData().Length == 19))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonWomensRelay;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 15, "print", 0, 5, false) == 0) && (json_string.getData().Length == 20))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BiathlonWomensSprint;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'o':
                        switch (json_string.getData()[2])
                          {
                            case 'b':
                                if (String.Compare(json_string.getData(), 3, "sleigh", 0, 6, false) == 0)
                                  {
                                    switch (json_string.getData()[9])
                                      {
                                        case 'M':
                                            if (String.Compare(json_string.getData(), 10, "ens", 0, 3, false) == 0)
                                              {
                                                switch (json_string.getData()[13])
                                                  {
                                                    case 'F':
                                                        if ((String.Compare(json_string.getData(), 14, "our", 0, 3, false) == 0) && (json_string.getData().Length == 17))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BobsleighMensFour;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 14, "wo", 0, 2, false) == 0) && (json_string.getData().Length == 16))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BobsleighMensTwo;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 10, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[15])
                                                  {
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 16, "onobob", 0, 6, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BobsleighWomensMonobob;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 16, "wo", 0, 2, false) == 0) && (json_string.getData().Length == 18))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BobsleighWomensTwo;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'x':
                                if (String.Compare(json_string.getData(), 3, "ing", 0, 3, false) == 0)
                                  {
                                    switch (json_string.getData()[6])
                                      {
                                        case 'M':
                                            if (String.Compare(json_string.getData(), 7, "ens", 0, 3, false) == 0)
                                              {
                                                switch (json_string.getData()[10])
                                                  {
                                                    case 'B':
                                                        if ((String.Compare(json_string.getData(), 11, "antamweight", 0, 11, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensBantamweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'F':
                                                        switch (json_string.getData()[11])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(json_string.getData(), 12, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 23))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensFeatherweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(json_string.getData(), 12, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 19))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensFlyweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(json_string.getData(), 11, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 21))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensHeavyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'L':
                                                        if (String.Compare(json_string.getData(), 11, "ight", 0, 4, false) == 0)
                                                          {
                                                            switch (json_string.getData()[15])
                                                              {
                                                                case 'F':
                                                                    if ((String.Compare(json_string.getData(), 16, "lyweight", 0, 8, false) == 0) && (json_string.getData().Length == 24))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensLightFlyweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'H':
                                                                    if ((String.Compare(json_string.getData(), 16, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 26))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensLightHeavyweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'M':
                                                                    if ((String.Compare(json_string.getData(), 16, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 27))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensLightMiddleweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'W':
                                                                    if ((String.Compare(json_string.getData(), 16, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 27))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensLightWelterweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'w':
                                                                    if ((String.Compare(json_string.getData(), 16, "eight", 0, 5, false) == 0) && (json_string.getData().Length == 21))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensLightweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 11, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensMiddleweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 11, "uperHeavyweight", 0, 15, false) == 0) && (json_string.getData().Length == 26))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensSuperHeavyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(json_string.getData(), 11, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingMensWelterweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 7, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[12])
                                                  {
                                                    case 'F':
                                                        switch (json_string.getData()[13])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(json_string.getData(), 14, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 25))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BoxingWomensFeatherweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(json_string.getData(), 14, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 21))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_BoxingWomensFlyweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'L':
                                                        if ((String.Compare(json_string.getData(), 13, "ightweight", 0, 10, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingWomensLightweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 13, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingWomensMiddleweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(json_string.getData(), 13, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_BoxingWomensWelterweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'C':
                switch (json_string.getData()[1])
                  {
                    case 'a':
                        if (String.Compare(json_string.getData(), 2, "noeing", 0, 6, false) == 0)
                          {
                            switch (json_string.getData()[8])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 9, "ensS", 0, 4, false) == 0)
                                      {
                                        switch (json_string.getData()[13])
                                          {
                                            case 'l':
                                                if (String.Compare(json_string.getData(), 14, "alom", 0, 4, false) == 0)
                                                  {
                                                    switch (json_string.getData()[18])
                                                      {
                                                        case 'C':
                                                            switch (json_string.getData()[19])
                                                              {
                                                                case '1':
                                                                    if (json_string.getData().Length == 20)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSlalomC1;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if (json_string.getData().Length == 20)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSlalomC2;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(json_string.getData(), 19, "1", 0, 1, false) == 0) && (json_string.getData().Length == 20))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSlalomK1;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'p':
                                                if (String.Compare(json_string.getData(), 14, "rint", 0, 4, false) == 0)
                                                  {
                                                    switch (json_string.getData()[18])
                                                      {
                                                        case 'C':
                                                            switch (json_string.getData()[19])
                                                              {
                                                                case '1':
                                                                    switch (json_string.getData()[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 21, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintC11000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintC1200M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintC1500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    switch (json_string.getData()[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 21, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintC21000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintC2500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'K':
                                                            switch (json_string.getData()[19])
                                                              {
                                                                case '1':
                                                                    switch (json_string.getData()[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 21, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK11000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK1200M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK1500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    switch (json_string.getData()[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 21, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK21000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK2200M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK2500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '4':
                                                                    switch (json_string.getData()[20])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 21, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK41000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 21, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 24))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingMensSprintK4500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 9, "omensS", 0, 6, false) == 0)
                                      {
                                        switch (json_string.getData()[15])
                                          {
                                            case 'l':
                                                if (String.Compare(json_string.getData(), 16, "alom", 0, 4, false) == 0)
                                                  {
                                                    switch (json_string.getData()[20])
                                                      {
                                                        case 'C':
                                                            if ((String.Compare(json_string.getData(), 21, "1", 0, 1, false) == 0) && (json_string.getData().Length == 22))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSlalomC1;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(json_string.getData(), 21, "1", 0, 1, false) == 0) && (json_string.getData().Length == 22))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSlalomK1;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'p':
                                                if (String.Compare(json_string.getData(), 16, "rint", 0, 4, false) == 0)
                                                  {
                                                    switch (json_string.getData()[20])
                                                      {
                                                        case 'C':
                                                            switch (json_string.getData()[21])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(json_string.getData(), 22, "200M", 0, 4, false) == 0) && (json_string.getData().Length == 26))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSprintC1200M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 22, "500M", 0, 4, false) == 0) && (json_string.getData().Length == 26))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSprintC2500M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'K':
                                                            switch (json_string.getData()[21])
                                                              {
                                                                case '1':
                                                                    switch (json_string.getData()[22])
                                                                      {
                                                                        case '2':
                                                                            if ((String.Compare(json_string.getData(), 23, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSprintK1200M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 23, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSprintK1500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 22, "500M", 0, 4, false) == 0) && (json_string.getData().Length == 26))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSprintK2500M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if ((String.Compare(json_string.getData(), 22, "500M", 0, 4, false) == 0) && (json_string.getData().Length == 26))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CanoeingWomensSprintK4500M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(json_string.getData(), 2, "ossCountrySkiing", 0, 16, false) == 0)
                          {
                            switch (json_string.getData()[18])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 19, "ens", 0, 3, false) == 0)
                                      {
                                        switch (json_string.getData()[22])
                                          {
                                            case '1':
                                                switch (json_string.getData()[23])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(json_string.getData(), 24, "KMClassical", 0, 11, false) == 0) && (json_string.getData().Length == 35))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMens10KMClassical;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(json_string.getData(), 24, "KMClassical", 0, 11, false) == 0) && (json_string.getData().Length == 35))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMens15KMClassical;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '8':
                                                        if ((String.Compare(json_string.getData(), 24, "KM", 0, 2, false) == 0) && (json_string.getData().Length == 26))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMens18KM;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '2':
                                                if ((String.Compare(json_string.getData(), 23, "X10KMPursuit", 0, 12, false) == 0) && (json_string.getData().Length == 35))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMens2X10KMPursuit;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '3':
                                                if ((String.Compare(json_string.getData(), 23, "0KMSkiathlon", 0, 12, false) == 0) && (json_string.getData().Length == 35))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMens30KMSkiathlon;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '4':
                                                if ((String.Compare(json_string.getData(), 23, "X10KMRelay", 0, 10, false) == 0) && (json_string.getData().Length == 33))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMens4X10KMRelay;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '5':
                                                if ((String.Compare(json_string.getData(), 23, "0KMFreestyle", 0, 12, false) == 0) && (json_string.getData().Length == 35))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMens50KMFreestyle;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 23, "print", 0, 5, false) == 0) && (json_string.getData().Length == 28))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMensSprint;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'T':
                                                if ((String.Compare(json_string.getData(), 23, "eamSprint", 0, 9, false) == 0) && (json_string.getData().Length == 32))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingMensTeamSprint;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 19, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[24])
                                          {
                                            case '1':
                                                switch (json_string.getData()[25])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(json_string.getData(), 26, "KMClassical", 0, 11, false) == 0) && (json_string.getData().Length == 37))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomens10KMClassical;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '5':
                                                        if ((String.Compare(json_string.getData(), 26, "KMSkiathlon", 0, 11, false) == 0) && (json_string.getData().Length == 37))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomens15KMSkiathlon;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '2':
                                                switch (json_string.getData()[25])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(json_string.getData(), 26, "KM", 0, 2, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomens20KM;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'X':
                                                        if ((String.Compare(json_string.getData(), 26, "5KMPursuit", 0, 10, false) == 0) && (json_string.getData().Length == 36))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomens2X5KMPursuit;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '3':
                                                if ((String.Compare(json_string.getData(), 25, "0KMFreestyle", 0, 12, false) == 0) && (json_string.getData().Length == 37))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomens30KMFreestyle;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '4':
                                                if ((String.Compare(json_string.getData(), 25, "X5KMRelay", 0, 9, false) == 0) && (json_string.getData().Length == 34))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomens4X5KMRelay;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '5':
                                                if ((String.Compare(json_string.getData(), 25, "KM", 0, 2, false) == 0) && (json_string.getData().Length == 27))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomens5KM;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 25, "print", 0, 5, false) == 0) && (json_string.getData().Length == 30))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomensSprint;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'T':
                                                if ((String.Compare(json_string.getData(), 25, "eamSprint", 0, 9, false) == 0) && (json_string.getData().Length == 34))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CrossCountrySkiingWomensTeamSprint;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'u':
                        if (String.Compare(json_string.getData(), 2, "rling", 0, 5, false) == 0)
                          {
                            switch (json_string.getData()[7])
                              {
                                case 'M':
                                    switch (json_string.getData()[8])
                                      {
                                        case 'e':
                                            if ((String.Compare(json_string.getData(), 9, "ns", 0, 2, false) == 0) && (json_string.getData().Length == 11))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CurlingMens;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 9, "xedDoubles", 0, 10, false) == 0) && (json_string.getData().Length == 19))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CurlingMixedDoubles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if ((String.Compare(json_string.getData(), 8, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 13))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_CurlingWomens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'y':
                        if (String.Compare(json_string.getData(), 2, "cling", 0, 5, false) == 0)
                          {
                            switch (json_string.getData()[7])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 8, "ens", 0, 3, false) == 0)
                                      {
                                        switch (json_string.getData()[11])
                                          {
                                            case 'B':
                                                if (String.Compare(json_string.getData(), 12, "MX", 0, 2, false) == 0)
                                                  {
                                                    if (json_string.getData().Length == 14)
                                                      {
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensBMX;
                                                            goto open_enum_is_done;
                                                          }
                                                      }
                                                    switch (json_string.getData()[14])
                                                      {
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 15, "reestyle", 0, 8, false) == 0) && (json_string.getData().Length == 23))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensBMXFreestyle;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(json_string.getData(), 15, "ace", 0, 3, false) == 0) && (json_string.getData().Length == 18))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensBMXRace;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 12, "ountainBikingCrossCountry", 0, 25, false) == 0) && (json_string.getData().Length == 37))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensMountainBikingCrossCountry;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'R':
                                                if (String.Compare(json_string.getData(), 12, "oadCycling", 0, 10, false) == 0)
                                                  {
                                                    switch (json_string.getData()[22])
                                                      {
                                                        case 'R':
                                                            if ((String.Compare(json_string.getData(), 23, "oadRace", 0, 7, false) == 0) && (json_string.getData().Length == 30))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensRoadCyclingRoadRace;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            switch (json_string.getData()[23])
                                                              {
                                                                case 'e':
                                                                    if ((String.Compare(json_string.getData(), 24, "amTimeTrial", 0, 11, false) == 0) && (json_string.getData().Length == 35))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensRoadCyclingTeamTimeTrial;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'i':
                                                                    if ((String.Compare(json_string.getData(), 24, "meTrial", 0, 7, false) == 0) && (json_string.getData().Length == 31))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensRoadCyclingTimeTrial;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(json_string.getData(), 12, "rackCycling", 0, 11, false) == 0)
                                                  {
                                                    switch (json_string.getData()[23])
                                                      {
                                                        case 'I':
                                                            if (String.Compare(json_string.getData(), 24, "ndividual", 0, 9, false) == 0)
                                                              {
                                                                switch (json_string.getData()[33])
                                                                  {
                                                                    case 'P':
                                                                        if ((String.Compare(json_string.getData(), 34, "ursuit", 0, 6, false) == 0) && (json_string.getData().Length == 40))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualPursuit;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'S':
                                                                        if ((String.Compare(json_string.getData(), 34, "print", 0, 5, false) == 0) && (json_string.getData().Length == 39))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualSprint;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(json_string.getData(), 24, "eirin", 0, 5, false) == 0) && (json_string.getData().Length == 29))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingKeirin;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(json_string.getData(), 24, "adison", 0, 6, false) == 0) && (json_string.getData().Length == 30))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingMadison;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'O':
                                                            if ((String.Compare(json_string.getData(), 24, "mnium", 0, 5, false) == 0) && (json_string.getData().Length == 29))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingOmnium;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'P':
                                                            if ((String.Compare(json_string.getData(), 24, "ointsRace", 0, 9, false) == 0) && (json_string.getData().Length == 33))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingPointsRace;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            switch (json_string.getData()[24])
                                                              {
                                                                case 'e':
                                                                    if (String.Compare(json_string.getData(), 25, "am", 0, 2, false) == 0)
                                                                      {
                                                                        switch (json_string.getData()[27])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(json_string.getData(), 28, "ursuit", 0, 6, false) == 0) && (json_string.getData().Length == 34))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamPursuit;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'S':
                                                                                if ((String.Compare(json_string.getData(), 28, "print", 0, 5, false) == 0) && (json_string.getData().Length == 33))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamSprint;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'i':
                                                                    if ((String.Compare(json_string.getData(), 25, "meTrial", 0, 7, false) == 0) && (json_string.getData().Length == 32))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CyclingMensTrackCyclingTimeTrial;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 8, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[13])
                                          {
                                            case 'B':
                                                if (String.Compare(json_string.getData(), 14, "MX", 0, 2, false) == 0)
                                                  {
                                                    if (json_string.getData().Length == 16)
                                                      {
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensBMX;
                                                            goto open_enum_is_done;
                                                          }
                                                      }
                                                    switch (json_string.getData()[16])
                                                      {
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 17, "reestyle", 0, 8, false) == 0) && (json_string.getData().Length == 25))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensBMXFreestyle;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(json_string.getData(), 17, "ace", 0, 3, false) == 0) && (json_string.getData().Length == 20))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensBMXRace;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 14, "ountainBikingCrossCountry", 0, 25, false) == 0) && (json_string.getData().Length == 39))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensMountainBikingCrossCountry;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'R':
                                                if (String.Compare(json_string.getData(), 14, "oadCycling", 0, 10, false) == 0)
                                                  {
                                                    switch (json_string.getData()[24])
                                                      {
                                                        case 'R':
                                                            if ((String.Compare(json_string.getData(), 25, "oadRace", 0, 7, false) == 0) && (json_string.getData().Length == 32))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensRoadCyclingRoadRace;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(json_string.getData(), 25, "imeTrial", 0, 8, false) == 0) && (json_string.getData().Length == 33))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensRoadCyclingTimeTrial;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(json_string.getData(), 14, "rackCycling", 0, 11, false) == 0)
                                                  {
                                                    switch (json_string.getData()[25])
                                                      {
                                                        case 'I':
                                                            if (String.Compare(json_string.getData(), 26, "ndividual", 0, 9, false) == 0)
                                                              {
                                                                switch (json_string.getData()[35])
                                                                  {
                                                                    case 'P':
                                                                        if ((String.Compare(json_string.getData(), 36, "ursuit", 0, 6, false) == 0) && (json_string.getData().Length == 42))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualPursuit;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'S':
                                                                        if ((String.Compare(json_string.getData(), 36, "print", 0, 5, false) == 0) && (json_string.getData().Length == 41))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualSprint;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'K':
                                                            if ((String.Compare(json_string.getData(), 26, "eirin", 0, 5, false) == 0) && (json_string.getData().Length == 31))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingKeirin;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(json_string.getData(), 26, "adison", 0, 6, false) == 0) && (json_string.getData().Length == 32))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingMadison;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'O':
                                                            if ((String.Compare(json_string.getData(), 26, "mnium", 0, 5, false) == 0) && (json_string.getData().Length == 31))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingOmnium;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'P':
                                                            if ((String.Compare(json_string.getData(), 26, "ointsRace", 0, 9, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingPointsRace;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            switch (json_string.getData()[26])
                                                              {
                                                                case 'e':
                                                                    if (String.Compare(json_string.getData(), 27, "am", 0, 2, false) == 0)
                                                                      {
                                                                        switch (json_string.getData()[29])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(json_string.getData(), 30, "ursuit", 0, 6, false) == 0) && (json_string.getData().Length == 36))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamPursuit;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'S':
                                                                                if ((String.Compare(json_string.getData(), 30, "print", 0, 5, false) == 0) && (json_string.getData().Length == 35))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamSprint;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'i':
                                                                    if ((String.Compare(json_string.getData(), 27, "meTrial", 0, 7, false) == 0) && (json_string.getData().Length == 34))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_CyclingWomensTrackCyclingTimeTrial;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'D':
                if (String.Compare(json_string.getData(), 1, "iving", 0, 5, false) == 0)
                  {
                    switch (json_string.getData()[6])
                      {
                        case 'M':
                            if (String.Compare(json_string.getData(), 7, "ens", 0, 3, false) == 0)
                              {
                                switch (json_string.getData()[10])
                                  {
                                    case 'P':
                                        if ((String.Compare(json_string.getData(), 11, "latform", 0, 7, false) == 0) && (json_string.getData().Length == 18))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_DivingMensPlatform;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'S':
                                        switch (json_string.getData()[11])
                                          {
                                            case 'p':
                                                if ((String.Compare(json_string.getData(), 12, "ringboard", 0, 9, false) == 0) && (json_string.getData().Length == 21))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_DivingMensSpringboard;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'y':
                                                if (String.Compare(json_string.getData(), 12, "nchronized", 0, 10, false) == 0)
                                                  {
                                                    switch (json_string.getData()[22])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(json_string.getData(), 23, "latform", 0, 7, false) == 0) && (json_string.getData().Length == 30))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_DivingMensSynchronizedPlatform;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 23, "pringboard", 0, 10, false) == 0) && (json_string.getData().Length == 33))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_DivingMensSynchronizedSpringboard;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'W':
                            if (String.Compare(json_string.getData(), 7, "omens", 0, 5, false) == 0)
                              {
                                switch (json_string.getData()[12])
                                  {
                                    case 'P':
                                        if ((String.Compare(json_string.getData(), 13, "latform", 0, 7, false) == 0) && (json_string.getData().Length == 20))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_DivingWomensPlatform;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'S':
                                        switch (json_string.getData()[13])
                                          {
                                            case 'p':
                                                if ((String.Compare(json_string.getData(), 14, "ringboard", 0, 9, false) == 0) && (json_string.getData().Length == 23))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_DivingWomensSpringboard;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'y':
                                                if (String.Compare(json_string.getData(), 14, "nchronized", 0, 10, false) == 0)
                                                  {
                                                    switch (json_string.getData()[24])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(json_string.getData(), 25, "latform", 0, 7, false) == 0) && (json_string.getData().Length == 32))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_DivingWomensSynchronizedPlatform;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 25, "pringboard", 0, 10, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_DivingWomensSynchronizedSpringboard;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'E':
                if (String.Compare(json_string.getData(), 1, "questrian", 0, 9, false) == 0)
                  {
                    switch (json_string.getData()[10])
                      {
                        case 'I':
                            if (String.Compare(json_string.getData(), 11, "ndividual", 0, 9, false) == 0)
                              {
                                switch (json_string.getData()[20])
                                  {
                                    case 'D':
                                        if ((String.Compare(json_string.getData(), 21, "ressage", 0, 7, false) == 0) && (json_string.getData().Length == 28))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_EquestrianIndividualDressage;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'E':
                                        if ((String.Compare(json_string.getData(), 21, "venting", 0, 7, false) == 0) && (json_string.getData().Length == 28))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_EquestrianIndividualEventing;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'J':
                                        if ((String.Compare(json_string.getData(), 21, "umping", 0, 6, false) == 0) && (json_string.getData().Length == 27))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_EquestrianIndividualJumping;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'T':
                            if (String.Compare(json_string.getData(), 11, "eam", 0, 3, false) == 0)
                              {
                                switch (json_string.getData()[14])
                                  {
                                    case 'D':
                                        if ((String.Compare(json_string.getData(), 15, "ressage", 0, 7, false) == 0) && (json_string.getData().Length == 22))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_EquestrianTeamDressage;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'E':
                                        if ((String.Compare(json_string.getData(), 15, "venting", 0, 7, false) == 0) && (json_string.getData().Length == 22))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_EquestrianTeamEventing;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'J':
                                        if ((String.Compare(json_string.getData(), 15, "umping", 0, 6, false) == 0) && (json_string.getData().Length == 21))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_EquestrianTeamJumping;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'F':
                switch (json_string.getData()[1])
                  {
                    case 'e':
                        if (String.Compare(json_string.getData(), 2, "ncing", 0, 5, false) == 0)
                          {
                            switch (json_string.getData()[7])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 8, "ens", 0, 3, false) == 0)
                                      {
                                        switch (json_string.getData()[11])
                                          {
                                            case 'I':
                                                if (String.Compare(json_string.getData(), 12, "ndividual", 0, 9, false) == 0)
                                                  {
                                                    switch (json_string.getData()[21])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(json_string.getData(), 22, "pee", 0, 3, false) == 0) && (json_string.getData().Length == 25))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingMensIndividualEpee;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 22, "oil", 0, 3, false) == 0) && (json_string.getData().Length == 25))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingMensIndividualFoil;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 22, "abre", 0, 4, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingMensIndividualSabre;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(json_string.getData(), 12, "eam", 0, 3, false) == 0)
                                                  {
                                                    switch (json_string.getData()[15])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(json_string.getData(), 16, "pee", 0, 3, false) == 0) && (json_string.getData().Length == 19))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingMensTeamEpee;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 16, "oil", 0, 3, false) == 0) && (json_string.getData().Length == 19))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingMensTeamFoil;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 16, "abre", 0, 4, false) == 0) && (json_string.getData().Length == 20))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingMensTeamSabre;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 8, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[13])
                                          {
                                            case 'I':
                                                if (String.Compare(json_string.getData(), 14, "ndividual", 0, 9, false) == 0)
                                                  {
                                                    switch (json_string.getData()[23])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(json_string.getData(), 24, "pee", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingWomensIndividualEpee;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 24, "oil", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingWomensIndividualFoil;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 24, "abre", 0, 4, false) == 0) && (json_string.getData().Length == 28))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingWomensIndividualSabre;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if (String.Compare(json_string.getData(), 14, "eam", 0, 3, false) == 0)
                                                  {
                                                    switch (json_string.getData()[17])
                                                      {
                                                        case 'E':
                                                            if ((String.Compare(json_string.getData(), 18, "pee", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingWomensTeamEpee;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 18, "oil", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingWomensTeamFoil;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 18, "abre", 0, 4, false) == 0) && (json_string.getData().Length == 22))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FencingWomensTeamSabre;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'i':
                        switch (json_string.getData()[2])
                          {
                            case 'e':
                                if (String.Compare(json_string.getData(), 3, "ldHockey", 0, 8, false) == 0)
                                  {
                                    switch (json_string.getData()[11])
                                      {
                                        case 'M':
                                            if ((String.Compare(json_string.getData(), 12, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 15))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FieldHockeyMens;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'W':
                                            if ((String.Compare(json_string.getData(), 12, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 17))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FieldHockeyWomens;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'g':
                                if (String.Compare(json_string.getData(), 3, "ureSkating", 0, 10, false) == 0)
                                  {
                                    switch (json_string.getData()[13])
                                      {
                                        case 'I':
                                            if ((String.Compare(json_string.getData(), 14, "ceDancing", 0, 9, false) == 0) && (json_string.getData().Length == 23))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FigureSkatingIceDancing;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'M':
                                            if ((String.Compare(json_string.getData(), 14, "ensSingles", 0, 10, false) == 0) && (json_string.getData().Length == 24))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FigureSkatingMensSingles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'P':
                                            if ((String.Compare(json_string.getData(), 14, "air", 0, 3, false) == 0) && (json_string.getData().Length == 17))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FigureSkatingPair;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'T':
                                            if ((String.Compare(json_string.getData(), 14, "eamTrophy", 0, 9, false) == 0) && (json_string.getData().Length == 23))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FigureSkatingTeamTrophy;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'W':
                                            if ((String.Compare(json_string.getData(), 14, "omensSingles", 0, 12, false) == 0) && (json_string.getData().Length == 26))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FigureSkatingWomensSingles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'o':
                        if (String.Compare(json_string.getData(), 2, "otball", 0, 6, false) == 0)
                          {
                            switch (json_string.getData()[8])
                              {
                                case 'M':
                                    if ((String.Compare(json_string.getData(), 9, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 12))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_FootballMens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'W':
                                    if ((String.Compare(json_string.getData(), 9, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 14))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_FootballWomens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(json_string.getData(), 2, "eestyleSkiing", 0, 13, false) == 0)
                          {
                            switch (json_string.getData()[15])
                              {
                                case 'M':
                                    switch (json_string.getData()[16])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 17, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[19])
                                                  {
                                                    case 'A':
                                                        if ((String.Compare(json_string.getData(), 20, "erials", 0, 6, false) == 0) && (json_string.getData().Length == 26))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingMensAerials;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'B':
                                                        if ((String.Compare(json_string.getData(), 20, "igAir", 0, 5, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingMensBigAir;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(json_string.getData(), 20, "alfpipe", 0, 7, false) == 0) && (json_string.getData().Length == 27))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingMensHalfpipe;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 20, "oguls", 0, 5, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingMensMoguls;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        switch (json_string.getData()[20])
                                                          {
                                                            case 'k':
                                                                if ((String.Compare(json_string.getData(), 21, "iCross", 0, 6, false) == 0) && (json_string.getData().Length == 27))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingMensSkiCross;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(json_string.getData(), 21, "opestyle", 0, 8, false) == 0) && (json_string.getData().Length == 29))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingMensSlopestyle;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 17, "xedTeamAerials", 0, 14, false) == 0) && (json_string.getData().Length == 31))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingMixedTeamAerials;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 16, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[21])
                                          {
                                            case 'A':
                                                if ((String.Compare(json_string.getData(), 22, "erials", 0, 6, false) == 0) && (json_string.getData().Length == 28))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingWomensAerials;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'B':
                                                if ((String.Compare(json_string.getData(), 22, "igAir", 0, 5, false) == 0) && (json_string.getData().Length == 27))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingWomensBigAir;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'H':
                                                if ((String.Compare(json_string.getData(), 22, "alfpipe", 0, 7, false) == 0) && (json_string.getData().Length == 29))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingWomensHalfpipe;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 22, "oguls", 0, 5, false) == 0) && (json_string.getData().Length == 27))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingWomensMoguls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                switch (json_string.getData()[22])
                                                  {
                                                    case 'k':
                                                        if ((String.Compare(json_string.getData(), 23, "iCross", 0, 6, false) == 0) && (json_string.getData().Length == 29))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingWomensSkiCross;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if ((String.Compare(json_string.getData(), 23, "opestyle", 0, 8, false) == 0) && (json_string.getData().Length == 31))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_FreestyleSkiingWomensSlopestyle;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'G':
                switch (json_string.getData()[1])
                  {
                    case 'o':
                        if (String.Compare(json_string.getData(), 2, "lf", 0, 2, false) == 0)
                          {
                            switch (json_string.getData()[4])
                              {
                                case 'M':
                                    if ((String.Compare(json_string.getData(), 5, "ensIndividual", 0, 13, false) == 0) && (json_string.getData().Length == 18))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_GolfMensIndividual;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'W':
                                    if ((String.Compare(json_string.getData(), 5, "omensIndividual", 0, 15, false) == 0) && (json_string.getData().Length == 20))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_GolfWomensIndividual;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'y':
                        if (String.Compare(json_string.getData(), 2, "mnastics", 0, 8, false) == 0)
                          {
                            switch (json_string.getData()[10])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 11, "ens", 0, 3, false) == 0)
                                      {
                                        switch (json_string.getData()[14])
                                          {
                                            case 'A':
                                                if (String.Compare(json_string.getData(), 15, "rtistic", 0, 7, false) == 0)
                                                  {
                                                    switch (json_string.getData()[22])
                                                      {
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 23, "loorExercise", 0, 12, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticFloorExercise;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 23, "orizontalBar", 0, 12, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticHorizontalBar;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'I':
                                                            if ((String.Compare(json_string.getData(), 23, "ndividualAllAround", 0, 18, false) == 0) && (json_string.getData().Length == 41))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticIndividualAllAround;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'P':
                                                            switch (json_string.getData()[23])
                                                              {
                                                                case 'a':
                                                                    if ((String.Compare(json_string.getData(), 24, "rallelBars", 0, 10, false) == 0) && (json_string.getData().Length == 34))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticParallelBars;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'o':
                                                                    if ((String.Compare(json_string.getData(), 24, "mmelHorse", 0, 9, false) == 0) && (json_string.getData().Length == 33))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticPommelHorse;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(json_string.getData(), 23, "ings", 0, 4, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticRings;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(json_string.getData(), 23, "eamAllAround", 0, 12, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticTeamAllAround;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'V':
                                                            if ((String.Compare(json_string.getData(), 23, "ault", 0, 4, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensArtisticVault;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if ((String.Compare(json_string.getData(), 15, "rampolineIndividual", 0, 19, false) == 0) && (json_string.getData().Length == 34))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsMensTrampolineIndividual;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 11, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[16])
                                          {
                                            case 'A':
                                                if (String.Compare(json_string.getData(), 17, "rtistic", 0, 7, false) == 0)
                                                  {
                                                    switch (json_string.getData()[24])
                                                      {
                                                        case 'B':
                                                            if ((String.Compare(json_string.getData(), 25, "alanceBeam", 0, 10, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensArtisticBalanceBeam;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            if ((String.Compare(json_string.getData(), 25, "loorExercise", 0, 12, false) == 0) && (json_string.getData().Length == 37))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensArtisticFloorExercise;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'I':
                                                            if ((String.Compare(json_string.getData(), 25, "ndividualAllAround", 0, 18, false) == 0) && (json_string.getData().Length == 43))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensArtisticIndividualAllAround;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(json_string.getData(), 25, "eamAllAround", 0, 12, false) == 0) && (json_string.getData().Length == 37))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensArtisticTeamAllAround;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'U':
                                                            if ((String.Compare(json_string.getData(), 25, "nevenBars", 0, 9, false) == 0) && (json_string.getData().Length == 34))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensArtisticUnevenBars;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'V':
                                                            if ((String.Compare(json_string.getData(), 25, "ault", 0, 4, false) == 0) && (json_string.getData().Length == 29))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensArtisticVault;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'R':
                                                if (String.Compare(json_string.getData(), 17, "hythmic", 0, 7, false) == 0)
                                                  {
                                                    switch (json_string.getData()[24])
                                                      {
                                                        case 'G':
                                                            if ((String.Compare(json_string.getData(), 25, "roupAllAround", 0, 13, false) == 0) && (json_string.getData().Length == 38))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensRhythmicGroupAllAround;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'I':
                                                            if ((String.Compare(json_string.getData(), 25, "ndividualAllAround", 0, 18, false) == 0) && (json_string.getData().Length == 43))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensRhythmicIndividualAllAround;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'T':
                                                if ((String.Compare(json_string.getData(), 17, "rampolineIndividual", 0, 19, false) == 0) && (json_string.getData().Length == 36))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_GymnasticsWomensTrampolineIndividual;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'H':
                if (String.Compare(json_string.getData(), 1, "andball", 0, 7, false) == 0)
                  {
                    switch (json_string.getData()[8])
                      {
                        case 'M':
                            if ((String.Compare(json_string.getData(), 9, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 12))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_HandballMens;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'W':
                            if ((String.Compare(json_string.getData(), 9, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 14))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_HandballWomens;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'I':
                if (String.Compare(json_string.getData(), 1, "ceHockey", 0, 8, false) == 0)
                  {
                    switch (json_string.getData()[9])
                      {
                        case 'M':
                            if ((String.Compare(json_string.getData(), 10, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 13))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_IceHockeyMens;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'W':
                            if ((String.Compare(json_string.getData(), 10, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 15))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_IceHockeyWomens;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'J':
                if (String.Compare(json_string.getData(), 1, "udo", 0, 3, false) == 0)
                  {
                    switch (json_string.getData()[4])
                      {
                        case 'M':
                            switch (json_string.getData()[5])
                              {
                                case 'e':
                                    if (String.Compare(json_string.getData(), 6, "ns", 0, 2, false) == 0)
                                      {
                                        switch (json_string.getData()[8])
                                          {
                                            case 'E':
                                                if ((String.Compare(json_string.getData(), 9, "xtraLightweight", 0, 15, false) == 0) && (json_string.getData().Length == 24))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_JudoMensExtraLightweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'H':
                                                switch (json_string.getData()[9])
                                                  {
                                                    case 'a':
                                                        if (String.Compare(json_string.getData(), 10, "lf", 0, 2, false) == 0)
                                                          {
                                                            switch (json_string.getData()[12])
                                                              {
                                                                case 'H':
                                                                    if ((String.Compare(json_string.getData(), 13, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 23))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_JudoMensHalfHeavyweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'L':
                                                                    if ((String.Compare(json_string.getData(), 13, "ightweight", 0, 10, false) == 0) && (json_string.getData().Length == 23))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_JudoMensHalfLightweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'M':
                                                                    if ((String.Compare(json_string.getData(), 13, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 24))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_JudoMensHalfMiddleweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'e':
                                                        if ((String.Compare(json_string.getData(), 10, "avyweight", 0, 9, false) == 0) && (json_string.getData().Length == 19))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_JudoMensHeavyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'L':
                                                if ((String.Compare(json_string.getData(), 9, "ightweight", 0, 10, false) == 0) && (json_string.getData().Length == 19))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_JudoMensLightweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 9, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 20))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_JudoMensMiddleweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if ((String.Compare(json_string.getData(), 6, "xedTeam", 0, 7, false) == 0) && (json_string.getData().Length == 13))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_JudoMixedTeam;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'W':
                            if (String.Compare(json_string.getData(), 5, "omens", 0, 5, false) == 0)
                              {
                                switch (json_string.getData()[10])
                                  {
                                    case 'E':
                                        if ((String.Compare(json_string.getData(), 11, "xtraLightweight", 0, 15, false) == 0) && (json_string.getData().Length == 26))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_JudoWomensExtraLightweight;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'H':
                                        switch (json_string.getData()[11])
                                          {
                                            case 'a':
                                                if (String.Compare(json_string.getData(), 12, "lf", 0, 2, false) == 0)
                                                  {
                                                    switch (json_string.getData()[14])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 15, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 25))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_JudoWomensHalfHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'L':
                                                            if ((String.Compare(json_string.getData(), 15, "ightweight", 0, 10, false) == 0) && (json_string.getData().Length == 25))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_JudoWomensHalfLightweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(json_string.getData(), 15, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_JudoWomensHalfMiddleweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'e':
                                                if ((String.Compare(json_string.getData(), 12, "avyweight", 0, 9, false) == 0) && (json_string.getData().Length == 21))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_JudoWomensHeavyweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'L':
                                        if ((String.Compare(json_string.getData(), 11, "ightweight", 0, 10, false) == 0) && (json_string.getData().Length == 21))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_JudoWomensLightweight;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'M':
                                        if ((String.Compare(json_string.getData(), 11, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 22))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_JudoWomensMiddleweight;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'K':
                if (String.Compare(json_string.getData(), 1, "arate", 0, 5, false) == 0)
                  {
                    switch (json_string.getData()[6])
                      {
                        case 'M':
                            if (String.Compare(json_string.getData(), 7, "ens", 0, 3, false) == 0)
                              {
                                switch (json_string.getData()[10])
                                  {
                                    case '6':
                                        if ((String.Compare(json_string.getData(), 11, "7Kg", 0, 3, false) == 0) && (json_string.getData().Length == 14))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_KarateMens67Kg;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case '7':
                                        if (String.Compare(json_string.getData(), 11, "5Kg", 0, 3, false) == 0)
                                          {
                                            if (json_string.getData().Length == 14)
                                              {
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_KarateMens75Kg;
                                                    goto open_enum_is_done;
                                                  }
                                              }
                                            switch (json_string.getData()[14])
                                              {
                                                case 'P':
                                                    if ((String.Compare(json_string.getData(), 15, "lus", 0, 3, false) == 0) && (json_string.getData().Length == 18))
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_KarateMens75KgPlus;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'K':
                                        if ((String.Compare(json_string.getData(), 11, "ata", 0, 3, false) == 0) && (json_string.getData().Length == 14))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_KarateMensKata;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'W':
                            if (String.Compare(json_string.getData(), 7, "omens", 0, 5, false) == 0)
                              {
                                switch (json_string.getData()[12])
                                  {
                                    case '5':
                                        if ((String.Compare(json_string.getData(), 13, "5Kg", 0, 3, false) == 0) && (json_string.getData().Length == 16))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_KarateWomens55Kg;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case '6':
                                        if (String.Compare(json_string.getData(), 13, "1Kg", 0, 3, false) == 0)
                                          {
                                            if (json_string.getData().Length == 16)
                                              {
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_KarateWomens61Kg;
                                                    goto open_enum_is_done;
                                                  }
                                              }
                                            switch (json_string.getData()[16])
                                              {
                                                case 'P':
                                                    if ((String.Compare(json_string.getData(), 17, "lus", 0, 3, false) == 0) && (json_string.getData().Length == 20))
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_KarateWomens61KgPlus;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'K':
                                        if ((String.Compare(json_string.getData(), 13, "ata", 0, 3, false) == 0) && (json_string.getData().Length == 16))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_KarateWomensKata;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'L':
                if (String.Compare(json_string.getData(), 1, "uge", 0, 3, false) == 0)
                  {
                    switch (json_string.getData()[4])
                      {
                        case 'D':
                            if ((String.Compare(json_string.getData(), 5, "oubles", 0, 6, false) == 0) && (json_string.getData().Length == 11))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_LugeDoubles;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'M':
                            if ((String.Compare(json_string.getData(), 5, "ensSingles", 0, 10, false) == 0) && (json_string.getData().Length == 15))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_LugeMensSingles;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'T':
                            if ((String.Compare(json_string.getData(), 5, "eamRelay", 0, 8, false) == 0) && (json_string.getData().Length == 13))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_LugeTeamRelay;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'W':
                            if ((String.Compare(json_string.getData(), 5, "omensSingles", 0, 12, false) == 0) && (json_string.getData().Length == 17))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_LugeWomensSingles;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'M':
                if (String.Compare(json_string.getData(), 1, "odernPentathlon", 0, 15, false) == 0)
                  {
                    switch (json_string.getData()[16])
                      {
                        case 'M':
                            if ((String.Compare(json_string.getData(), 17, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 20))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_ModernPentathlonMens;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'W':
                            if ((String.Compare(json_string.getData(), 17, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 22))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_ModernPentathlonWomens;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'N':
                if (String.Compare(json_string.getData(), 1, "ordicCombined", 0, 13, false) == 0)
                  {
                    switch (json_string.getData()[14])
                      {
                        case 'I':
                            if (String.Compare(json_string.getData(), 15, "ndividual", 0, 9, false) == 0)
                              {
                                switch (json_string.getData()[24])
                                  {
                                    case 'L':
                                        if ((String.Compare(json_string.getData(), 25, "argeHill10KM", 0, 12, false) == 0) && (json_string.getData().Length == 37))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_NordicCombinedIndividualLargeHill10KM;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'N':
                                        if ((String.Compare(json_string.getData(), 25, "ormalHill10KM", 0, 13, false) == 0) && (json_string.getData().Length == 38))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_NordicCombinedIndividualNormalHill10KM;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'T':
                            if ((String.Compare(json_string.getData(), 15, "eamLargeHill4X5KM", 0, 17, false) == 0) && (json_string.getData().Length == 32))
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = TypeValueKnownValues.Value_NordicCombinedTeamLargeHill4X5KM;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'R':
                switch (json_string.getData()[1])
                  {
                    case 'o':
                        if (String.Compare(json_string.getData(), 2, "wing", 0, 4, false) == 0)
                          {
                            switch (json_string.getData()[6])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 7, "ens", 0, 3, false) == 0)
                                      {
                                        switch (json_string.getData()[10])
                                          {
                                            case 'C':
                                                if (String.Compare(json_string.getData(), 11, "ox", 0, 2, false) == 0)
                                                  {
                                                    switch (json_string.getData()[13])
                                                      {
                                                        case 'e':
                                                            if (String.Compare(json_string.getData(), 14, "d", 0, 1, false) == 0)
                                                              {
                                                                switch (json_string.getData()[15])
                                                                  {
                                                                    case 'E':
                                                                        if ((String.Compare(json_string.getData(), 16, "ight", 0, 4, false) == 0) && (json_string.getData().Length == 20))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensCoxedEight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'F':
                                                                        if ((String.Compare(json_string.getData(), 16, "our", 0, 3, false) == 0) && (json_string.getData().Length == 19))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensCoxedFour;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'P':
                                                                        if ((String.Compare(json_string.getData(), 16, "air", 0, 3, false) == 0) && (json_string.getData().Length == 19))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensCoxedPair;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'l':
                                                            if (String.Compare(json_string.getData(), 14, "ess", 0, 3, false) == 0)
                                                              {
                                                                switch (json_string.getData()[17])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(json_string.getData(), 18, "our", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensCoxlessFour;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'P':
                                                                        if ((String.Compare(json_string.getData(), 18, "air", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensCoxlessPair;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'D':
                                                if ((String.Compare(json_string.getData(), 11, "oubleSculls", 0, 11, false) == 0) && (json_string.getData().Length == 22))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensDoubleSculls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'L':
                                                if (String.Compare(json_string.getData(), 11, "ightweight", 0, 10, false) == 0)
                                                  {
                                                    switch (json_string.getData()[21])
                                                      {
                                                        case 'C':
                                                            if ((String.Compare(json_string.getData(), 22, "oxlessFour", 0, 10, false) == 0) && (json_string.getData().Length == 32))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensLightweightCoxlessFour;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'D':
                                                            if ((String.Compare(json_string.getData(), 22, "oubleSculls", 0, 11, false) == 0) && (json_string.getData().Length == 33))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensLightweightDoubleSculls;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'Q':
                                                if ((String.Compare(json_string.getData(), 11, "uadrupleSculls", 0, 14, false) == 0) && (json_string.getData().Length == 25))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensQuadrupleSculls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 11, "ingleSculls", 0, 11, false) == 0) && (json_string.getData().Length == 22))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_RowingMensSingleSculls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 7, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[12])
                                          {
                                            case 'C':
                                                if (String.Compare(json_string.getData(), 13, "ox", 0, 2, false) == 0)
                                                  {
                                                    switch (json_string.getData()[15])
                                                      {
                                                        case 'e':
                                                            if (String.Compare(json_string.getData(), 16, "d", 0, 1, false) == 0)
                                                              {
                                                                switch (json_string.getData()[17])
                                                                  {
                                                                    case 'E':
                                                                        if ((String.Compare(json_string.getData(), 18, "ight", 0, 4, false) == 0) && (json_string.getData().Length == 22))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensCoxedEight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'F':
                                                                        if ((String.Compare(json_string.getData(), 18, "our", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensCoxedFour;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'l':
                                                            if (String.Compare(json_string.getData(), 16, "ess", 0, 3, false) == 0)
                                                              {
                                                                switch (json_string.getData()[19])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(json_string.getData(), 20, "our", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensCoxlessFour;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'P':
                                                                        if ((String.Compare(json_string.getData(), 20, "air", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensCoxlessPair;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'D':
                                                if ((String.Compare(json_string.getData(), 13, "oubleSculls", 0, 11, false) == 0) && (json_string.getData().Length == 24))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensDoubleSculls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'L':
                                                if ((String.Compare(json_string.getData(), 13, "ightweightDoubleSculls", 0, 22, false) == 0) && (json_string.getData().Length == 35))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensLightweightDoubleSculls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'Q':
                                                if ((String.Compare(json_string.getData(), 13, "uadrupleSculls", 0, 14, false) == 0) && (json_string.getData().Length == 27))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensQuadrupleSculls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 13, "ingleSculls", 0, 11, false) == 0) && (json_string.getData().Length == 24))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_RowingWomensSingleSculls;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'u':
                        if (String.Compare(json_string.getData(), 2, "gby", 0, 3, false) == 0)
                          {
                            switch (json_string.getData()[5])
                              {
                                case 'M':
                                    if ((String.Compare(json_string.getData(), 6, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 9))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_RugbyMens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'W':
                                    if ((String.Compare(json_string.getData(), 6, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 11))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_RugbyWomens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'S':
                switch (json_string.getData()[1])
                  {
                    case 'a':
                        if (String.Compare(json_string.getData(), 2, "iling", 0, 5, false) == 0)
                          {
                            switch (json_string.getData()[7])
                              {
                                case 'M':
                                    switch (json_string.getData()[8])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 9, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[11])
                                                  {
                                                    case '4':
                                                        switch (json_string.getData()[12])
                                                          {
                                                            case '7':
                                                                if ((String.Compare(json_string.getData(), 13, "0", 0, 1, false) == 0) && (json_string.getData().Length == 14))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SailingMens470;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '9':
                                                                if (String.Compare(json_string.getData(), 13, "er", 0, 2, false) == 0)
                                                                  {
                                                                    if (json_string.getData().Length == 15)
                                                                      {
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SailingMens49er;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                      }
                                                                    switch (json_string.getData()[15])
                                                                      {
                                                                        case 'F':
                                                                            if ((String.Compare(json_string.getData(), 16, "X", 0, 1, false) == 0) && (json_string.getData().Length == 17))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SailingMens49erFX;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'F':
                                                        if ((String.Compare(json_string.getData(), 12, "inn", 0, 3, false) == 0) && (json_string.getData().Length == 15))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMensFinn;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'L':
                                                        if ((String.Compare(json_string.getData(), 12, "aser", 0, 4, false) == 0) && (json_string.getData().Length == 16))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMensLaser;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'R':
                                                        if ((String.Compare(json_string.getData(), 12, "SX", 0, 2, false) == 0) && (json_string.getData().Length == 14))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMensRSX;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 12, "tar", 0, 3, false) == 0) && (json_string.getData().Length == 15))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMensStar;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if (String.Compare(json_string.getData(), 9, "xed", 0, 3, false) == 0)
                                              {
                                                switch (json_string.getData()[12])
                                                  {
                                                    case '4':
                                                        if ((String.Compare(json_string.getData(), 13, "9erFX", 0, 5, false) == 0) && (json_string.getData().Length == 18))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMixed49erFX;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'F':
                                                        if ((String.Compare(json_string.getData(), 13, "inn", 0, 3, false) == 0) && (json_string.getData().Length == 16))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMixedFinn;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'N':
                                                        if ((String.Compare(json_string.getData(), 13, "acra17", 0, 6, false) == 0) && (json_string.getData().Length == 19))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMixedNacra17;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 13, "ornado", 0, 6, false) == 0) && (json_string.getData().Length == 19))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingMixedTornado;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 8, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[13])
                                          {
                                            case '4':
                                                switch (json_string.getData()[14])
                                                  {
                                                    case '7':
                                                        if ((String.Compare(json_string.getData(), 15, "0", 0, 1, false) == 0) && (json_string.getData().Length == 16))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingWomens470;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '9':
                                                        if ((String.Compare(json_string.getData(), 15, "erFX", 0, 4, false) == 0) && (json_string.getData().Length == 19))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SailingWomens49erFX;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'E':
                                                if ((String.Compare(json_string.getData(), 14, "lliott6M", 0, 8, false) == 0) && (json_string.getData().Length == 22))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SailingWomensElliott6M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'L':
                                                if (String.Compare(json_string.getData(), 14, "aser", 0, 4, false) == 0)
                                                  {
                                                    if (json_string.getData().Length == 18)
                                                      {
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SailingWomensLaser;
                                                            goto open_enum_is_done;
                                                          }
                                                      }
                                                    switch (json_string.getData()[18])
                                                      {
                                                        case 'R':
                                                            if ((String.Compare(json_string.getData(), 19, "adial", 0, 5, false) == 0) && (json_string.getData().Length == 24))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SailingWomensLaserRadial;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'R':
                                                if ((String.Compare(json_string.getData(), 14, "SX", 0, 2, false) == 0) && (json_string.getData().Length == 16))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SailingWomensRSX;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'Y':
                                                if ((String.Compare(json_string.getData(), 14, "ngling", 0, 6, false) == 0) && (json_string.getData().Length == 20))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SailingWomensYngling;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'h':
                        if (String.Compare(json_string.getData(), 2, "o", 0, 1, false) == 0)
                          {
                            switch (json_string.getData()[3])
                              {
                                case 'o':
                                    if (String.Compare(json_string.getData(), 4, "ting", 0, 4, false) == 0)
                                      {
                                        switch (json_string.getData()[8])
                                          {
                                            case 'M':
                                                switch (json_string.getData()[9])
                                                  {
                                                    case 'e':
                                                        if (String.Compare(json_string.getData(), 10, "ns", 0, 2, false) == 0)
                                                          {
                                                            switch (json_string.getData()[12])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(json_string.getData(), 13, "0MRunningTarget", 0, 15, false) == 0) && (json_string.getData().Length == 28))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMens10MRunningTarget;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'A':
                                                                    if (String.Compare(json_string.getData(), 13, "ir", 0, 2, false) == 0)
                                                                      {
                                                                        switch (json_string.getData()[15])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(json_string.getData(), 16, "istol10M", 0, 8, false) == 0) && (json_string.getData().Length == 24))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensAirPistol10M;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'R':
                                                                                if ((String.Compare(json_string.getData(), 16, "ifle10M", 0, 7, false) == 0) && (json_string.getData().Length == 23))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensAirRifle10M;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'D':
                                                                    if ((String.Compare(json_string.getData(), 13, "oubleTrap", 0, 9, false) == 0) && (json_string.getData().Length == 22))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensDoubleTrap;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'P':
                                                                    if ((String.Compare(json_string.getData(), 13, "istol50M", 0, 8, false) == 0) && (json_string.getData().Length == 21))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensPistol50M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'R':
                                                                    switch (json_string.getData()[13])
                                                                      {
                                                                        case 'a':
                                                                            if ((String.Compare(json_string.getData(), 14, "pidFirePistol25M", 0, 16, false) == 0) && (json_string.getData().Length == 30))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensRapidFirePistol25M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'i':
                                                                            if (String.Compare(json_string.getData(), 14, "fle", 0, 3, false) == 0)
                                                                              {
                                                                                switch (json_string.getData()[17])
                                                                                  {
                                                                                    case 'P':
                                                                                        if ((String.Compare(json_string.getData(), 18, "rone50M", 0, 7, false) == 0) && (json_string.getData().Length == 25))
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensRifleProne50M;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'T':
                                                                                        if ((String.Compare(json_string.getData(), 18, "hreePositions50M", 0, 16, false) == 0) && (json_string.getData().Length == 34))
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensRifleThreePositions50M;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case 'S':
                                                                    if ((String.Compare(json_string.getData(), 13, "keet", 0, 4, false) == 0) && (json_string.getData().Length == 17))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensSkeet;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'T':
                                                                    if ((String.Compare(json_string.getData(), 13, "rap", 0, 3, false) == 0) && (json_string.getData().Length == 16))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMensTrap;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'i':
                                                        if (String.Compare(json_string.getData(), 10, "xed", 0, 3, false) == 0)
                                                          {
                                                            switch (json_string.getData()[13])
                                                              {
                                                                case 'A':
                                                                    if (String.Compare(json_string.getData(), 14, "ir", 0, 2, false) == 0)
                                                                      {
                                                                        switch (json_string.getData()[16])
                                                                          {
                                                                            case 'P':
                                                                                if ((String.Compare(json_string.getData(), 17, "istolTeam", 0, 9, false) == 0) && (json_string.getData().Length == 26))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMixedAirPistolTeam;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'R':
                                                                                if ((String.Compare(json_string.getData(), 17, "ifleTeam", 0, 8, false) == 0) && (json_string.getData().Length == 25))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMixedAirRifleTeam;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'T':
                                                                    if ((String.Compare(json_string.getData(), 14, "rapTeam", 0, 7, false) == 0) && (json_string.getData().Length == 21))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShootingMixedTrapTeam;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'W':
                                                if (String.Compare(json_string.getData(), 9, "omens", 0, 5, false) == 0)
                                                  {
                                                    switch (json_string.getData()[14])
                                                      {
                                                        case 'A':
                                                            if (String.Compare(json_string.getData(), 15, "ir", 0, 2, false) == 0)
                                                              {
                                                                switch (json_string.getData()[17])
                                                                  {
                                                                    case 'P':
                                                                        if ((String.Compare(json_string.getData(), 18, "istol10M", 0, 8, false) == 0) && (json_string.getData().Length == 26))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_ShootingWomensAirPistol10M;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'R':
                                                                        if ((String.Compare(json_string.getData(), 18, "ifle10M", 0, 7, false) == 0) && (json_string.getData().Length == 25))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_ShootingWomensAirRifle10M;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'D':
                                                            if ((String.Compare(json_string.getData(), 15, "oubleTrap", 0, 9, false) == 0) && (json_string.getData().Length == 24))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShootingWomensDoubleTrap;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'P':
                                                            if ((String.Compare(json_string.getData(), 15, "istol25M", 0, 8, false) == 0) && (json_string.getData().Length == 23))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShootingWomensPistol25M;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'R':
                                                            if ((String.Compare(json_string.getData(), 15, "ifleThreePositions50M", 0, 21, false) == 0) && (json_string.getData().Length == 36))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShootingWomensRifleThreePositions50M;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 15, "keet", 0, 4, false) == 0) && (json_string.getData().Length == 19))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShootingWomensSkeet;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            if ((String.Compare(json_string.getData(), 15, "rap", 0, 3, false) == 0) && (json_string.getData().Length == 18))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShootingWomensTrap;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (String.Compare(json_string.getData(), 4, "tTrackSpeedSkating", 0, 18, false) == 0)
                                      {
                                        switch (json_string.getData()[22])
                                          {
                                            case 'M':
                                                switch (json_string.getData()[23])
                                                  {
                                                    case 'e':
                                                        if (String.Compare(json_string.getData(), 24, "ns", 0, 2, false) == 0)
                                                          {
                                                            switch (json_string.getData()[26])
                                                              {
                                                                case '1':
                                                                    switch (json_string.getData()[27])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(json_string.getData(), 28, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 31))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 28, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 31))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '5':
                                                                    if (String.Compare(json_string.getData(), 27, "00", 0, 2, false) == 0)
                                                                      {
                                                                        switch (json_string.getData()[29])
                                                                          {
                                                                            case '0':
                                                                                if ((String.Compare(json_string.getData(), 30, "MRelay", 0, 6, false) == 0) && (json_string.getData().Length == 36))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens5000MRelay;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'M':
                                                                                if (json_string.getData().Length == 30)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens500M;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'i':
                                                        if ((String.Compare(json_string.getData(), 24, "xed2000MRelay", 0, 13, false) == 0) && (json_string.getData().Length == 37))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingMixed2000MRelay;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'W':
                                                if (String.Compare(json_string.getData(), 23, "omens", 0, 5, false) == 0)
                                                  {
                                                    switch (json_string.getData()[28])
                                                      {
                                                        case '1':
                                                            switch (json_string.getData()[29])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(json_string.getData(), 30, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 33))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1000M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(json_string.getData(), 30, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 33))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1500M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '3':
                                                            if ((String.Compare(json_string.getData(), 29, "000MRelay", 0, 9, false) == 0) && (json_string.getData().Length == 38))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens3000MRelay;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '5':
                                                            if ((String.Compare(json_string.getData(), 29, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 32))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens500M;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'k':
                        switch (json_string.getData()[2])
                          {
                            case 'a':
                                if (String.Compare(json_string.getData(), 3, "teboarding", 0, 10, false) == 0)
                                  {
                                    switch (json_string.getData()[13])
                                      {
                                        case 'M':
                                            if (String.Compare(json_string.getData(), 14, "ens", 0, 3, false) == 0)
                                              {
                                                switch (json_string.getData()[17])
                                                  {
                                                    case 'P':
                                                        if ((String.Compare(json_string.getData(), 18, "ark", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SkateboardingMensPark;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 18, "treet", 0, 5, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SkateboardingMensStreet;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 14, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[19])
                                                  {
                                                    case 'P':
                                                        if ((String.Compare(json_string.getData(), 20, "ark", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SkateboardingWomensPark;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 20, "treet", 0, 5, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SkateboardingWomensStreet;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'e':
                                if (String.Compare(json_string.getData(), 3, "leton", 0, 5, false) == 0)
                                  {
                                    switch (json_string.getData()[8])
                                      {
                                        case 'M':
                                            if ((String.Compare(json_string.getData(), 9, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 12))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SkeletonMens;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'W':
                                            if ((String.Compare(json_string.getData(), 9, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 14))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SkeletonWomens;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'i':
                                if (String.Compare(json_string.getData(), 3, "Jumping", 0, 7, false) == 0)
                                  {
                                    switch (json_string.getData()[10])
                                      {
                                        case 'M':
                                            switch (json_string.getData()[11])
                                              {
                                                case 'e':
                                                    if (String.Compare(json_string.getData(), 12, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case 'I':
                                                                if (String.Compare(json_string.getData(), 15, "ndividual", 0, 9, false) == 0)
                                                                  {
                                                                    switch (json_string.getData()[24])
                                                                      {
                                                                        case 'L':
                                                                            if ((String.Compare(json_string.getData(), 25, "argeHill", 0, 8, false) == 0) && (json_string.getData().Length == 33))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SkiJumpingMensIndividualLargeHill;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'N':
                                                                            if ((String.Compare(json_string.getData(), 25, "ormalHill", 0, 9, false) == 0) && (json_string.getData().Length == 34))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SkiJumpingMensIndividualNormalHill;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if ((String.Compare(json_string.getData(), 15, "eamLargeHill", 0, 12, false) == 0) && (json_string.getData().Length == 27))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SkiJumpingMensTeamLargeHill;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(json_string.getData(), 12, "xedTeamNormalHill", 0, 17, false) == 0) && (json_string.getData().Length == 29))
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SkiJumpingMixedTeamNormalHill;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if ((String.Compare(json_string.getData(), 11, "omensIndividualNormalHill", 0, 25, false) == 0) && (json_string.getData().Length == 36))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SkiJumpingWomensIndividualNormalHill;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'n':
                        if (String.Compare(json_string.getData(), 2, "owboarding", 0, 10, false) == 0)
                          {
                            switch (json_string.getData()[12])
                              {
                                case 'M':
                                    switch (json_string.getData()[13])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 14, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[16])
                                                  {
                                                    case 'B':
                                                        if ((String.Compare(json_string.getData(), 17, "igAir", 0, 5, false) == 0) && (json_string.getData().Length == 22))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingMensBigAir;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(json_string.getData(), 17, "alfpipe", 0, 7, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingMensHalfpipe;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if (String.Compare(json_string.getData(), 17, "arallel", 0, 7, false) == 0)
                                                          {
                                                            switch (json_string.getData()[24])
                                                              {
                                                                case 'G':
                                                                    if ((String.Compare(json_string.getData(), 25, "iantSlalom", 0, 10, false) == 0) && (json_string.getData().Length == 35))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingMensParallelGiantSlalom;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'S':
                                                                    if ((String.Compare(json_string.getData(), 25, "lalom", 0, 5, false) == 0) && (json_string.getData().Length == 30))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingMensParallelSlalom;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'S':
                                                        switch (json_string.getData()[17])
                                                          {
                                                            case 'l':
                                                                if ((String.Compare(json_string.getData(), 18, "opestyle", 0, 8, false) == 0) && (json_string.getData().Length == 26))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingMensSlopestyle;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'n':
                                                                if ((String.Compare(json_string.getData(), 18, "owboardCross", 0, 12, false) == 0) && (json_string.getData().Length == 30))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingMensSnowboardCross;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 14, "xedTeamSnowboardCross", 0, 21, false) == 0) && (json_string.getData().Length == 35))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingMixedTeamSnowboardCross;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 13, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[18])
                                          {
                                            case 'B':
                                                if ((String.Compare(json_string.getData(), 19, "igAir", 0, 5, false) == 0) && (json_string.getData().Length == 24))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingWomensBigAir;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'H':
                                                if ((String.Compare(json_string.getData(), 19, "alfpipe", 0, 7, false) == 0) && (json_string.getData().Length == 26))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingWomensHalfpipe;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'P':
                                                if (String.Compare(json_string.getData(), 19, "arallel", 0, 7, false) == 0)
                                                  {
                                                    switch (json_string.getData()[26])
                                                      {
                                                        case 'G':
                                                            if ((String.Compare(json_string.getData(), 27, "iantSlalom", 0, 10, false) == 0) && (json_string.getData().Length == 37))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingWomensParallelGiantSlalom;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 27, "lalom", 0, 5, false) == 0) && (json_string.getData().Length == 32))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingWomensParallelSlalom;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'S':
                                                switch (json_string.getData()[19])
                                                  {
                                                    case 'l':
                                                        if ((String.Compare(json_string.getData(), 20, "opestyle", 0, 8, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingWomensSlopestyle;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'n':
                                                        if ((String.Compare(json_string.getData(), 20, "owboardCross", 0, 12, false) == 0) && (json_string.getData().Length == 32))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SnowboardingWomensSnowboardCross;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'o':
                        if ((String.Compare(json_string.getData(), 2, "ftballWomens", 0, 12, false) == 0) && (json_string.getData().Length == 14))
                              {
                                the_open_enum.in_known_list = true;
                                the_open_enum.list_value = TypeValueKnownValues.Value_SoftballWomens;
                                goto open_enum_is_done;
                              }
                        break;
                    case 'p':
                        switch (json_string.getData()[2])
                          {
                            case 'e':
                                if (String.Compare(json_string.getData(), 3, "edSkating", 0, 9, false) == 0)
                                  {
                                    switch (json_string.getData()[12])
                                      {
                                        case 'M':
                                            if (String.Compare(json_string.getData(), 13, "ens", 0, 3, false) == 0)
                                              {
                                                switch (json_string.getData()[16])
                                                  {
                                                    case '1':
                                                        switch (json_string.getData()[17])
                                                          {
                                                            case '0':
                                                                if (String.Compare(json_string.getData(), 18, "00", 0, 2, false) == 0)
                                                                  {
                                                                    switch (json_string.getData()[20])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(json_string.getData(), 21, "M", 0, 1, false) == 0) && (json_string.getData().Length == 22))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMens10000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'M':
                                                                            if (json_string.getData().Length == 21)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMens1000M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case '5':
                                                                if ((String.Compare(json_string.getData(), 18, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMens1500M;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '5':
                                                        if (String.Compare(json_string.getData(), 17, "00", 0, 2, false) == 0)
                                                          {
                                                            switch (json_string.getData()[19])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(json_string.getData(), 20, "M", 0, 1, false) == 0) && (json_string.getData().Length == 21))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMens5000M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'M':
                                                                    if (json_string.getData().Length == 20)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMens500M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'A':
                                                        if ((String.Compare(json_string.getData(), 17, "llRound", 0, 7, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMensAllRound;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 17, "assStart", 0, 8, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMensMassStart;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 17, "eamPursuit", 0, 10, false) == 0) && (json_string.getData().Length == 27))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingMensTeamPursuit;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 13, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[18])
                                                  {
                                                    case '1':
                                                        switch (json_string.getData()[19])
                                                          {
                                                            case '0':
                                                                if ((String.Compare(json_string.getData(), 20, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingWomens1000M;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '5':
                                                                if ((String.Compare(json_string.getData(), 20, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingWomens1500M;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case '3':
                                                        if ((String.Compare(json_string.getData(), 19, "000M", 0, 4, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingWomens3000M;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '5':
                                                        if (String.Compare(json_string.getData(), 19, "00", 0, 2, false) == 0)
                                                          {
                                                            switch (json_string.getData()[21])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(json_string.getData(), 22, "M", 0, 1, false) == 0) && (json_string.getData().Length == 23))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingWomens5000M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'M':
                                                                    if (json_string.getData().Length == 22)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingWomens500M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 19, "assStart", 0, 8, false) == 0) && (json_string.getData().Length == 27))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingWomensMassStart;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 19, "eamPursuit", 0, 10, false) == 0) && (json_string.getData().Length == 29))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SpeedSkatingWomensTeamPursuit;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'o':
                                if (String.Compare(json_string.getData(), 3, "rt", 0, 2, false) == 0)
                                  {
                                    switch (json_string.getData()[5])
                                      {
                                        case 'C':
                                            if (String.Compare(json_string.getData(), 6, "limbing", 0, 7, false) == 0)
                                              {
                                                switch (json_string.getData()[13])
                                                  {
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 14, "ensCombined", 0, 11, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SportClimbingMensCombined;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(json_string.getData(), 14, "omensCombined", 0, 13, false) == 0) && (json_string.getData().Length == 27))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SportClimbingWomensCombined;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (String.Compare(json_string.getData(), 6, "urfing", 0, 6, false) == 0)
                                              {
                                                switch (json_string.getData()[12])
                                                  {
                                                    case 'M':
                                                        if ((String.Compare(json_string.getData(), 13, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 16))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SportSurfingMens;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(json_string.getData(), 13, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 18))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SportSurfingWomens;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'w':
                        if (String.Compare(json_string.getData(), 2, "imming", 0, 6, false) == 0)
                          {
                            switch (json_string.getData()[8])
                              {
                                case 'M':
                                    switch (json_string.getData()[9])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 10, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[12])
                                                  {
                                                    case '4':
                                                        if (String.Compare(json_string.getData(), 13, "X", 0, 1, false) == 0)
                                                          {
                                                            switch (json_string.getData()[14])
                                                              {
                                                                case '1':
                                                                    if (String.Compare(json_string.getData(), 15, "00M", 0, 3, false) == 0)
                                                                      {
                                                                        switch (json_string.getData()[18])
                                                                          {
                                                                            case 'F':
                                                                                if ((String.Compare(json_string.getData(), 19, "reestyleRelay", 0, 13, false) == 0) && (json_string.getData().Length == 32))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMens4X100MFreestyleRelay;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'M':
                                                                                if ((String.Compare(json_string.getData(), 19, "edleyRelay", 0, 10, false) == 0) && (json_string.getData().Length == 29))
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMens4X100MMedleyRelay;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 15, "00MFreestyleRelay", 0, 17, false) == 0) && (json_string.getData().Length == 32))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMens4X200MFreestyleRelay;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'B':
                                                        switch (json_string.getData()[13])
                                                          {
                                                            case 'a':
                                                                if (String.Compare(json_string.getData(), 14, "ckstroke", 0, 8, false) == 0)
                                                                  {
                                                                    switch (json_string.getData()[22])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 23, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensBackstroke100M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(json_string.getData(), 23, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensBackstroke200M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'r':
                                                                if (String.Compare(json_string.getData(), 14, "eaststroke", 0, 10, false) == 0)
                                                                  {
                                                                    switch (json_string.getData()[24])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 25, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 28))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensBreaststroke100M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(json_string.getData(), 25, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 28))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensBreaststroke200M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'u':
                                                                if (String.Compare(json_string.getData(), 14, "tterfly", 0, 7, false) == 0)
                                                                  {
                                                                    switch (json_string.getData()[21])
                                                                      {
                                                                        case '1':
                                                                            if ((String.Compare(json_string.getData(), 22, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensButterfly100M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if ((String.Compare(json_string.getData(), 22, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensButterfly200M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'F':
                                                        if (String.Compare(json_string.getData(), 13, "reestyle", 0, 8, false) == 0)
                                                          {
                                                            switch (json_string.getData()[21])
                                                              {
                                                                case '1':
                                                                    switch (json_string.getData()[22])
                                                                      {
                                                                        case '0':
                                                                            if ((String.Compare(json_string.getData(), 23, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 25))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensFreestyle100M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if ((String.Compare(json_string.getData(), 23, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensFreestyle1500M;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 22, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 25))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensFreestyle200M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if ((String.Compare(json_string.getData(), 22, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 25))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensFreestyle400M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(json_string.getData(), 22, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 24))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensFreestyle50M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '8':
                                                                    if ((String.Compare(json_string.getData(), 22, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 25))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensFreestyle800M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'I':
                                                        if (String.Compare(json_string.getData(), 13, "ndividualMedley", 0, 15, false) == 0)
                                                          {
                                                            switch (json_string.getData()[28])
                                                              {
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 29, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 32))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensIndividualMedley200M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if ((String.Compare(json_string.getData(), 29, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 32))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensIndividualMedley400M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'O':
                                                        if ((String.Compare(json_string.getData(), 13, "penWater10KM", 0, 12, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMensOpenWater10KM;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 10, "xed4X100MMedleyRelay", 0, 20, false) == 0) && (json_string.getData().Length == 30))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingMixed4X100MMedleyRelay;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 9, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[14])
                                          {
                                            case '4':
                                                if (String.Compare(json_string.getData(), 15, "X", 0, 1, false) == 0)
                                                  {
                                                    switch (json_string.getData()[16])
                                                      {
                                                        case '1':
                                                            if (String.Compare(json_string.getData(), 17, "00M", 0, 3, false) == 0)
                                                              {
                                                                switch (json_string.getData()[20])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(json_string.getData(), 21, "reestyleRelay", 0, 13, false) == 0) && (json_string.getData().Length == 34))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomens4X100MFreestyleRelay;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'M':
                                                                        if ((String.Compare(json_string.getData(), 21, "edleyRelay", 0, 10, false) == 0) && (json_string.getData().Length == 31))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomens4X100MMedleyRelay;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case '2':
                                                            if ((String.Compare(json_string.getData(), 17, "00MFreestyleRelay", 0, 17, false) == 0) && (json_string.getData().Length == 34))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomens4X200MFreestyleRelay;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'B':
                                                switch (json_string.getData()[15])
                                                  {
                                                    case 'a':
                                                        if (String.Compare(json_string.getData(), 16, "ckstroke", 0, 8, false) == 0)
                                                          {
                                                            switch (json_string.getData()[24])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(json_string.getData(), 25, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 28))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensBackstroke100M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 25, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 28))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensBackstroke200M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'r':
                                                        if (String.Compare(json_string.getData(), 16, "eaststroke", 0, 10, false) == 0)
                                                          {
                                                            switch (json_string.getData()[26])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(json_string.getData(), 27, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 30))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensBreaststroke100M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 27, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 30))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensBreaststroke200M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'u':
                                                        if (String.Compare(json_string.getData(), 16, "tterfly", 0, 7, false) == 0)
                                                          {
                                                            switch (json_string.getData()[23])
                                                              {
                                                                case '1':
                                                                    if ((String.Compare(json_string.getData(), 24, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensButterfly100M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if ((String.Compare(json_string.getData(), 24, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensButterfly200M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'F':
                                                if (String.Compare(json_string.getData(), 15, "reestyle", 0, 8, false) == 0)
                                                  {
                                                    switch (json_string.getData()[23])
                                                      {
                                                        case '1':
                                                            switch (json_string.getData()[24])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(json_string.getData(), 25, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 27))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensFreestyle100M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '5':
                                                                    if ((String.Compare(json_string.getData(), 25, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 28))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensFreestyle1500M;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '2':
                                                            if ((String.Compare(json_string.getData(), 24, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensFreestyle200M;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '4':
                                                            if ((String.Compare(json_string.getData(), 24, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensFreestyle400M;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '5':
                                                            if ((String.Compare(json_string.getData(), 24, "0M", 0, 2, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensFreestyle50M;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '8':
                                                            if ((String.Compare(json_string.getData(), 24, "00M", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensFreestyle800M;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'I':
                                                if ((String.Compare(json_string.getData(), 15, "ndividualMedley200M", 0, 19, false) == 0) && (json_string.getData().Length == 34))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensIndividualMedley200M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'O':
                                                if ((String.Compare(json_string.getData(), 15, "penWater10KM", 0, 12, false) == 0) && (json_string.getData().Length == 27))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensOpenWater10KM;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'i':
                                                if ((String.Compare(json_string.getData(), 15, "ndividualMedley400M", 0, 19, false) == 0) && (json_string.getData().Length == 34))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_SwimmingWomensindividualMedley400M;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'T':
                switch (json_string.getData()[1])
                  {
                    case 'a':
                        switch (json_string.getData()[2])
                          {
                            case 'b':
                                if (String.Compare(json_string.getData(), 3, "leTennis", 0, 8, false) == 0)
                                  {
                                    switch (json_string.getData()[11])
                                      {
                                        case 'M':
                                            switch (json_string.getData()[12])
                                              {
                                                case 'e':
                                                    if (String.Compare(json_string.getData(), 13, "ns", 0, 2, false) == 0)
                                                      {
                                                        switch (json_string.getData()[15])
                                                          {
                                                            case 'S':
                                                                if ((String.Compare(json_string.getData(), 16, "ingles", 0, 6, false) == 0) && (json_string.getData().Length == 22))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TableTennisMensSingles;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                if ((String.Compare(json_string.getData(), 16, "eam", 0, 3, false) == 0) && (json_string.getData().Length == 19))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TableTennisMensTeam;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if ((String.Compare(json_string.getData(), 13, "xedDoubles", 0, 10, false) == 0) && (json_string.getData().Length == 23))
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_TableTennisMixedDoubles;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 12, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[17])
                                                  {
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 18, "ingles", 0, 6, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TableTennisWomensSingles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if ((String.Compare(json_string.getData(), 18, "eam", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TableTennisWomensTeam;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'e':
                                if (String.Compare(json_string.getData(), 3, "kwondo", 0, 6, false) == 0)
                                  {
                                    switch (json_string.getData()[9])
                                      {
                                        case 'M':
                                            if (String.Compare(json_string.getData(), 10, "ens", 0, 3, false) == 0)
                                              {
                                                switch (json_string.getData()[13])
                                                  {
                                                    case 'F':
                                                        switch (json_string.getData()[14])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(json_string.getData(), 15, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 26))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoMensFeatherweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(json_string.getData(), 15, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 22))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoMensFlyweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(json_string.getData(), 14, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 24))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoMensHeavyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(json_string.getData(), 14, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 25))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoMensWelterweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'W':
                                            if (String.Compare(json_string.getData(), 10, "omens", 0, 5, false) == 0)
                                              {
                                                switch (json_string.getData()[15])
                                                  {
                                                    case 'F':
                                                        switch (json_string.getData()[16])
                                                          {
                                                            case 'e':
                                                                if ((String.Compare(json_string.getData(), 17, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 28))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoWomensFeatherweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'l':
                                                                if ((String.Compare(json_string.getData(), 17, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 24))
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoWomensFlyweight;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'H':
                                                        if ((String.Compare(json_string.getData(), 16, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 26))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoWomensHeavyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if ((String.Compare(json_string.getData(), 16, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 27))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TaekwondoWomensWelterweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'e':
                        if (String.Compare(json_string.getData(), 2, "nnis", 0, 4, false) == 0)
                          {
                            switch (json_string.getData()[6])
                              {
                                case 'M':
                                    switch (json_string.getData()[7])
                                      {
                                        case 'e':
                                            if (String.Compare(json_string.getData(), 8, "ns", 0, 2, false) == 0)
                                              {
                                                switch (json_string.getData()[10])
                                                  {
                                                    case 'D':
                                                        if ((String.Compare(json_string.getData(), 11, "oubles", 0, 6, false) == 0) && (json_string.getData().Length == 17))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TennisMensDoubles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if ((String.Compare(json_string.getData(), 11, "ingles", 0, 6, false) == 0) && (json_string.getData().Length == 17))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_TennisMensSingles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 8, "xedDoubles", 0, 10, false) == 0) && (json_string.getData().Length == 18))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_TennisMixedDoubles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 7, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[12])
                                          {
                                            case 'D':
                                                if ((String.Compare(json_string.getData(), 13, "oubles", 0, 6, false) == 0) && (json_string.getData().Length == 19))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TennisWomensDoubles;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 13, "ingles", 0, 6, false) == 0) && (json_string.getData().Length == 19))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_TennisWomensSingles;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(json_string.getData(), 2, "iathlon", 0, 7, false) == 0)
                          {
                            switch (json_string.getData()[9])
                              {
                                case 'M':
                                    switch (json_string.getData()[10])
                                      {
                                        case 'e':
                                            if ((String.Compare(json_string.getData(), 11, "nsIndividual", 0, 12, false) == 0) && (json_string.getData().Length == 23))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_TriathlonMensIndividual;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if ((String.Compare(json_string.getData(), 11, "xedRelay", 0, 8, false) == 0) && (json_string.getData().Length == 19))
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = TypeValueKnownValues.Value_TriathlonMixedRelay;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'W':
                                    if ((String.Compare(json_string.getData(), 10, "omensIndividual", 0, 15, false) == 0) && (json_string.getData().Length == 25))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_TriathlonWomensIndividual;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            case 'V':
                if (String.Compare(json_string.getData(), 1, "olleyball", 0, 9, false) == 0)
                  {
                    switch (json_string.getData()[10])
                      {
                        case 'M':
                            if (String.Compare(json_string.getData(), 11, "ens", 0, 3, false) == 0)
                              {
                                switch (json_string.getData()[14])
                                  {
                                    case 'B':
                                        if ((String.Compare(json_string.getData(), 15, "each", 0, 4, false) == 0) && (json_string.getData().Length == 19))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_VolleyballMensBeach;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'I':
                                        if ((String.Compare(json_string.getData(), 15, "ndoor", 0, 5, false) == 0) && (json_string.getData().Length == 20))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_VolleyballMensIndoor;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'W':
                            if (String.Compare(json_string.getData(), 11, "omens", 0, 5, false) == 0)
                              {
                                switch (json_string.getData()[16])
                                  {
                                    case 'B':
                                        if ((String.Compare(json_string.getData(), 17, "each", 0, 4, false) == 0) && (json_string.getData().Length == 21))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_VolleyballWomensBeach;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'I':
                                        if ((String.Compare(json_string.getData(), 17, "ndoor", 0, 5, false) == 0) && (json_string.getData().Length == 22))
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = TypeValueKnownValues.Value_VolleyballWomensIndoor;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                  }
                break;
            case 'W':
                switch (json_string.getData()[1])
                  {
                    case 'a':
                        if (String.Compare(json_string.getData(), 2, "terPolo", 0, 7, false) == 0)
                          {
                            switch (json_string.getData()[9])
                              {
                                case 'M':
                                    if ((String.Compare(json_string.getData(), 10, "ens", 0, 3, false) == 0) && (json_string.getData().Length == 13))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_WaterPoloMens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'W':
                                    if ((String.Compare(json_string.getData(), 10, "omens", 0, 5, false) == 0) && (json_string.getData().Length == 15))
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = TypeValueKnownValues.Value_WaterPoloWomens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'e':
                        if (String.Compare(json_string.getData(), 2, "ightlifting", 0, 11, false) == 0)
                          {
                            switch (json_string.getData()[13])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 14, "ens", 0, 3, false) == 0)
                                      {
                                        switch (json_string.getData()[17])
                                          {
                                            case '1':
                                                if (String.Compare(json_string.getData(), 18, "09Kg", 0, 4, false) == 0)
                                                  {
                                                    if (json_string.getData().Length == 22)
                                                      {
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMens109Kg;
                                                            goto open_enum_is_done;
                                                          }
                                                      }
                                                    switch (json_string.getData()[22])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(json_string.getData(), 23, "lus", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMens109KgPlus;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case '6':
                                                switch (json_string.getData()[18])
                                                  {
                                                    case '1':
                                                        if ((String.Compare(json_string.getData(), 19, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 21))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMens61Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '7':
                                                        if ((String.Compare(json_string.getData(), 19, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 21))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMens67Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '7':
                                                if ((String.Compare(json_string.getData(), 18, "3Kg", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMens73Kg;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '8':
                                                if ((String.Compare(json_string.getData(), 18, "1Kg", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMens81Kg;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '9':
                                                if ((String.Compare(json_string.getData(), 18, "6Kg", 0, 3, false) == 0) && (json_string.getData().Length == 21))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMens96Kg;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'B':
                                                if ((String.Compare(json_string.getData(), 18, "antamweight", 0, 11, false) == 0) && (json_string.getData().Length == 29))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensBantamweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'F':
                                                switch (json_string.getData()[18])
                                                  {
                                                    case 'e':
                                                        if ((String.Compare(json_string.getData(), 19, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 30))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensFeatherweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'i':
                                                        if ((String.Compare(json_string.getData(), 19, "rstHeavyweight", 0, 14, false) == 0) && (json_string.getData().Length == 33))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensFirstHeavyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if ((String.Compare(json_string.getData(), 19, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 26))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensFlyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'H':
                                                if ((String.Compare(json_string.getData(), 18, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 28))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensHeavyweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'L':
                                                if (String.Compare(json_string.getData(), 18, "ight", 0, 4, false) == 0)
                                                  {
                                                    switch (json_string.getData()[22])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 23, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 33))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensLightHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(json_string.getData(), 23, "eight", 0, 5, false) == 0) && (json_string.getData().Length == 28))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensLightweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if (String.Compare(json_string.getData(), 18, "iddle", 0, 5, false) == 0)
                                                  {
                                                    switch (json_string.getData()[23])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 24, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 34))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensMiddleHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(json_string.getData(), 24, "eight", 0, 5, false) == 0) && (json_string.getData().Length == 29))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensMiddleweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 18, "uperHeavyweight", 0, 15, false) == 0) && (json_string.getData().Length == 33))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingMensSuperHeavyweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 14, "omens", 0, 5, false) == 0)
                                      {
                                        switch (json_string.getData()[19])
                                          {
                                            case '4':
                                                if ((String.Compare(json_string.getData(), 20, "9Kg", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomens49Kg;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '5':
                                                switch (json_string.getData()[20])
                                                  {
                                                    case '5':
                                                        if ((String.Compare(json_string.getData(), 21, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomens55Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '9':
                                                        if ((String.Compare(json_string.getData(), 21, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 23))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomens59Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '6':
                                                if ((String.Compare(json_string.getData(), 20, "4Kg", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomens64Kg;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '7':
                                                if ((String.Compare(json_string.getData(), 20, "6Kg", 0, 3, false) == 0) && (json_string.getData().Length == 23))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomens76Kg;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case '8':
                                                if (String.Compare(json_string.getData(), 20, "7Kg", 0, 3, false) == 0)
                                                  {
                                                    if (json_string.getData().Length == 23)
                                                      {
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomens87Kg;
                                                            goto open_enum_is_done;
                                                          }
                                                      }
                                                    switch (json_string.getData()[23])
                                                      {
                                                        case 'P':
                                                            if ((String.Compare(json_string.getData(), 24, "lus", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomens87KgPlus;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'F':
                                                switch (json_string.getData()[20])
                                                  {
                                                    case 'e':
                                                        if ((String.Compare(json_string.getData(), 21, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 32))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomensFeatherweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if ((String.Compare(json_string.getData(), 21, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomensFlyweight;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'H':
                                                if ((String.Compare(json_string.getData(), 20, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 30))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomensHeavyweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'L':
                                                if (String.Compare(json_string.getData(), 20, "ight", 0, 4, false) == 0)
                                                  {
                                                    switch (json_string.getData()[24])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 25, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomensLightHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(json_string.getData(), 25, "eight", 0, 5, false) == 0) && (json_string.getData().Length == 30))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomensLightweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 20, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 31))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomensMiddleweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if ((String.Compare(json_string.getData(), 20, "uperHeavyweight", 0, 15, false) == 0) && (json_string.getData().Length == 35))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WeightliftingWomensSuperHeavyweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'r':
                        if (String.Compare(json_string.getData(), 2, "estling", 0, 7, false) == 0)
                          {
                            switch (json_string.getData()[9])
                              {
                                case 'M':
                                    if (String.Compare(json_string.getData(), 10, "ens", 0, 3, false) == 0)
                                      {
                                        switch (json_string.getData()[13])
                                          {
                                            case 'F':
                                                if (String.Compare(json_string.getData(), 14, "reestyle", 0, 8, false) == 0)
                                                  {
                                                    switch (json_string.getData()[22])
                                                      {
                                                        case '1':
                                                            if ((String.Compare(json_string.getData(), 23, "25Kg", 0, 4, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyle125Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '5':
                                                            if ((String.Compare(json_string.getData(), 23, "7Kg", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyle57Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '6':
                                                            if ((String.Compare(json_string.getData(), 23, "5Kg", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyle65Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '7':
                                                            if ((String.Compare(json_string.getData(), 23, "4Kg", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyle74Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '8':
                                                            if ((String.Compare(json_string.getData(), 23, "6Kg", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyle86Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '9':
                                                            if ((String.Compare(json_string.getData(), 23, "7Kg", 0, 3, false) == 0) && (json_string.getData().Length == 26))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyle97Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'B':
                                                            if ((String.Compare(json_string.getData(), 23, "antamweight", 0, 11, false) == 0) && (json_string.getData().Length == 34))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleBantamweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            switch (json_string.getData()[23])
                                                              {
                                                                case 'e':
                                                                    if ((String.Compare(json_string.getData(), 24, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 35))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleFeatherweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'l':
                                                                    if ((String.Compare(json_string.getData(), 24, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 31))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleFlyweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 23, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 33))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'L':
                                                            if (String.Compare(json_string.getData(), 23, "ight", 0, 4, false) == 0)
                                                              {
                                                                switch (json_string.getData()[27])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(json_string.getData(), 28, "lyweight", 0, 8, false) == 0) && (json_string.getData().Length == 36))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleLightFlyweight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'H':
                                                                        if ((String.Compare(json_string.getData(), 28, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 38))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleLightHeavyweight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'w':
                                                                        if ((String.Compare(json_string.getData(), 28, "eight", 0, 5, false) == 0) && (json_string.getData().Length == 33))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleLightweight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(json_string.getData(), 23, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 34))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleMiddleweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 23, "uperHeavyweight", 0, 15, false) == 0) && (json_string.getData().Length == 38))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleSuperHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'W':
                                                            if ((String.Compare(json_string.getData(), 23, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 34))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensFreestyleWelterweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'G':
                                                if (String.Compare(json_string.getData(), 14, "recoRoman", 0, 9, false) == 0)
                                                  {
                                                    switch (json_string.getData()[23])
                                                      {
                                                        case '1':
                                                            if ((String.Compare(json_string.getData(), 24, "30Kg", 0, 4, false) == 0) && (json_string.getData().Length == 28))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRoman130Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '6':
                                                            switch (json_string.getData()[24])
                                                              {
                                                                case '0':
                                                                    if ((String.Compare(json_string.getData(), 25, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 27))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRoman60Kg;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '7':
                                                                    if ((String.Compare(json_string.getData(), 25, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 27))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRoman67Kg;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '7':
                                                            if ((String.Compare(json_string.getData(), 24, "7Kg", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRoman77Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '8':
                                                            if ((String.Compare(json_string.getData(), 24, "7Kg", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRoman87Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '9':
                                                            if ((String.Compare(json_string.getData(), 24, "7Kg", 0, 3, false) == 0) && (json_string.getData().Length == 27))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRoman97Kg;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'B':
                                                            if ((String.Compare(json_string.getData(), 24, "antamweight", 0, 11, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanBantamweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            switch (json_string.getData()[24])
                                                              {
                                                                case 'e':
                                                                    if ((String.Compare(json_string.getData(), 25, "atherweight", 0, 11, false) == 0) && (json_string.getData().Length == 36))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanFeatherweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'l':
                                                                    if ((String.Compare(json_string.getData(), 25, "yweight", 0, 7, false) == 0) && (json_string.getData().Length == 32))
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanFlyweight;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 24, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 34))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'L':
                                                            if (String.Compare(json_string.getData(), 24, "ight", 0, 4, false) == 0)
                                                              {
                                                                switch (json_string.getData()[28])
                                                                  {
                                                                    case 'F':
                                                                        if ((String.Compare(json_string.getData(), 29, "lyweight", 0, 8, false) == 0) && (json_string.getData().Length == 37))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightFlyweight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'H':
                                                                        if ((String.Compare(json_string.getData(), 29, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 39))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightHeavyweight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'w':
                                                                        if ((String.Compare(json_string.getData(), 29, "eight", 0, 5, false) == 0) && (json_string.getData().Length == 34))
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightweight;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'M':
                                                            if ((String.Compare(json_string.getData(), 24, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanMiddleweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if ((String.Compare(json_string.getData(), 24, "uperHeavyweight", 0, 15, false) == 0) && (json_string.getData().Length == 39))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanSuperHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'W':
                                                            if ((String.Compare(json_string.getData(), 24, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingMensGrecoRomanWelterweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'W':
                                    if (String.Compare(json_string.getData(), 10, "omensFreestyle", 0, 14, false) == 0)
                                      {
                                        switch (json_string.getData()[24])
                                          {
                                            case '5':
                                                switch (json_string.getData()[25])
                                                  {
                                                    case '0':
                                                        if ((String.Compare(json_string.getData(), 26, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyle50Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '3':
                                                        if ((String.Compare(json_string.getData(), 26, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyle53Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '7':
                                                        if ((String.Compare(json_string.getData(), 26, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyle57Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '6':
                                                switch (json_string.getData()[25])
                                                  {
                                                    case '2':
                                                        if ((String.Compare(json_string.getData(), 26, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyle62Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '8':
                                                        if ((String.Compare(json_string.getData(), 26, "Kg", 0, 2, false) == 0) && (json_string.getData().Length == 28))
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyle68Kg;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case '7':
                                                if ((String.Compare(json_string.getData(), 25, "6Kg", 0, 3, false) == 0) && (json_string.getData().Length == 28))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyle76Kg;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'B':
                                                if ((String.Compare(json_string.getData(), 25, "antamweight", 0, 11, false) == 0) && (json_string.getData().Length == 36))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyleBantamweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'F':
                                                if ((String.Compare(json_string.getData(), 25, "lyweight", 0, 8, false) == 0) && (json_string.getData().Length == 33))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyleFlyweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'H':
                                                if ((String.Compare(json_string.getData(), 25, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 35))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyleHeavyweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'L':
                                                if (String.Compare(json_string.getData(), 25, "ight", 0, 4, false) == 0)
                                                  {
                                                    switch (json_string.getData()[29])
                                                      {
                                                        case 'H':
                                                            if ((String.Compare(json_string.getData(), 30, "eavyweight", 0, 10, false) == 0) && (json_string.getData().Length == 40))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyleLightHeavyweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'w':
                                                            if ((String.Compare(json_string.getData(), 30, "eight", 0, 5, false) == 0) && (json_string.getData().Length == 35))
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyleLightweight;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'M':
                                                if ((String.Compare(json_string.getData(), 25, "iddleweight", 0, 11, false) == 0) && (json_string.getData().Length == 36))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyleMiddleweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'W':
                                                if ((String.Compare(json_string.getData(), 25, "elterweight", 0, 11, false) == 0) && (json_string.getData().Length == 36))
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = TypeValueKnownValues.Value_WrestlingWomensFreestyleWelterweight;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
                break;
            default:
                break;
          }
        the_open_enum.in_known_list = false;
        the_open_enum.string_value = json_string.getData();
      open_enum_is_done:;
        setValue(the_open_enum);
      }


    public SportsOlympicsEventJSON()
      {
        flagHasValue = false;
      }

    public SportsOlympicsEventJSON(TypeValue init_value)
      {
        flagHasValue = true;
        storeValue = init_value;
      }

    public SportsOlympicsEventJSON(string init_value)
      {
        flagHasValue = true;
        TypeValueKnownValues known = stringToValue(init_value);
        if (known == TypeValueKnownValues.Value__none)
          {
            storeValue.in_known_list = false;
            storeValue.string_value = init_value;
          }
        else
          {
            storeValue.in_known_list = true;
            storeValue.list_value = known;
          }
      }

    public SportsOlympicsEventJSON(TypeValueKnownValues init_value)
      {
        flagHasValue = true;
        Debug.Assert(init_value != TypeValueKnownValues.Value__none);
        storeValue.in_known_list = true;
        storeValue.list_value = init_value;
      }

    public bool  hasValue()
      {
        return flagHasValue;
      }

    public TypeValue  getValue()
      {
        Debug.Assert(flagHasValue);
        return storeValue;
      }

    public string  getValueAsString()
      {
        TypeValue result = getValue();
        if (result.in_known_list)
            return stringFromValue(result.list_value);
        else
            return result.string_value;
      }



    public void setValue(TypeValue new_value)
      {
        flagHasValue = true;
        storeValue = new_value;
      }
    public void setValue(string chars)
      {
        TypeValueKnownValues known = stringToValue(chars);
        TypeValue new_value = new TypeValue();
        if (known == TypeValueKnownValues.Value__none)
          {
            new_value.in_known_list = false;
            new_value.string_value = chars;
          }
        else
          {
            new_value.in_known_list = true;
            new_value.list_value = known;
          }
        setValue(new_value);
      }
    public void setValue(TypeValueKnownValues new_value)
      {
        TypeValue new_full_value = new TypeValue();
        Debug.Assert(new_value != TypeValueKnownValues.Value__none);
        new_full_value.in_known_list = true;
        new_full_value.list_value = new_value;
        setValue(new_full_value);
      }
    public void unsetValue()
      {
        flagHasValue = false;
      }


    public override void write_as_json(JSONHandler handler)
      {
        if (storeValue.in_known_list)
          {
            switch (storeValue.list_value)
              {
                case TypeValueKnownValues.Value_AlpineSkiingMensDownhill:
                    handler.string_value("AlpineSkiingMensDownhill");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensSuperG:
                    handler.string_value("AlpineSkiingMensSuperG");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensGiantSlalom:
                    handler.string_value("AlpineSkiingMensGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensSlalom:
                    handler.string_value("AlpineSkiingMensSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensCombined:
                    handler.string_value("AlpineSkiingMensCombined");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensDownhill:
                    handler.string_value("AlpineSkiingWomensDownhill");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensSuperG:
                    handler.string_value("AlpineSkiingWomensSuperG");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensGiantSlalom:
                    handler.string_value("AlpineSkiingWomensGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensSlalom:
                    handler.string_value("AlpineSkiingWomensSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensCombined:
                    handler.string_value("AlpineSkiingWomensCombined");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMixedTeam:
                    handler.string_value("AlpineSkiingMixedTeam");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensIndividual:
                    handler.string_value("BiathlonMensIndividual");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensSprint:
                    handler.string_value("BiathlonMensSprint");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensPursuit:
                    handler.string_value("BiathlonMensPursuit");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensMassStart:
                    handler.string_value("BiathlonMensMassStart");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensRelay:
                    handler.string_value("BiathlonMensRelay");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensMilitaryPatrol:
                    handler.string_value("BiathlonMensMilitaryPatrol");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensIndividual:
                    handler.string_value("BiathlonWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensSprint:
                    handler.string_value("BiathlonWomensSprint");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensPursuit:
                    handler.string_value("BiathlonWomensPursuit");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensMassStart:
                    handler.string_value("BiathlonWomensMassStart");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensRelay:
                    handler.string_value("BiathlonWomensRelay");
                    break;
                case TypeValueKnownValues.Value_BiathlonMixedRelay:
                    handler.string_value("BiathlonMixedRelay");
                    break;
                case TypeValueKnownValues.Value_BobsleighMensTwo:
                    handler.string_value("BobsleighMensTwo");
                    break;
                case TypeValueKnownValues.Value_BobsleighMensFour:
                    handler.string_value("BobsleighMensFour");
                    break;
                case TypeValueKnownValues.Value_BobsleighWomensTwo:
                    handler.string_value("BobsleighWomensTwo");
                    break;
                case TypeValueKnownValues.Value_BobsleighWomensMonobob:
                    handler.string_value("BobsleighWomensMonobob");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens10KMClassical:
                    handler.string_value("CrossCountrySkiingMens10KMClassical");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens15KMClassical:
                    handler.string_value("CrossCountrySkiingMens15KMClassical");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens18KM:
                    handler.string_value("CrossCountrySkiingMens18KM");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens30KMSkiathlon:
                    handler.string_value("CrossCountrySkiingMens30KMSkiathlon");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens50KMFreestyle:
                    handler.string_value("CrossCountrySkiingMens50KMFreestyle");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens4X10KMRelay:
                    handler.string_value("CrossCountrySkiingMens4X10KMRelay");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens2X10KMPursuit:
                    handler.string_value("CrossCountrySkiingMens2X10KMPursuit");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMensSprint:
                    handler.string_value("CrossCountrySkiingMensSprint");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMensTeamSprint:
                    handler.string_value("CrossCountrySkiingMensTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens5KM:
                    handler.string_value("CrossCountrySkiingWomens5KM");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens10KMClassical:
                    handler.string_value("CrossCountrySkiingWomens10KMClassical");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens15KMSkiathlon:
                    handler.string_value("CrossCountrySkiingWomens15KMSkiathlon");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens20KM:
                    handler.string_value("CrossCountrySkiingWomens20KM");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens30KMFreestyle:
                    handler.string_value("CrossCountrySkiingWomens30KMFreestyle");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens4X5KMRelay:
                    handler.string_value("CrossCountrySkiingWomens4X5KMRelay");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens2X5KMPursuit:
                    handler.string_value("CrossCountrySkiingWomens2X5KMPursuit");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomensSprint:
                    handler.string_value("CrossCountrySkiingWomensSprint");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomensTeamSprint:
                    handler.string_value("CrossCountrySkiingWomensTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CurlingMens:
                    handler.string_value("CurlingMens");
                    break;
                case TypeValueKnownValues.Value_CurlingWomens:
                    handler.string_value("CurlingWomens");
                    break;
                case TypeValueKnownValues.Value_CurlingMixedDoubles:
                    handler.string_value("CurlingMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingMensSingles:
                    handler.string_value("FigureSkatingMensSingles");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingWomensSingles:
                    handler.string_value("FigureSkatingWomensSingles");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingPair:
                    handler.string_value("FigureSkatingPair");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingIceDancing:
                    handler.string_value("FigureSkatingIceDancing");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingTeamTrophy:
                    handler.string_value("FigureSkatingTeamTrophy");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensAerials:
                    handler.string_value("FreestyleSkiingMensAerials");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensHalfpipe:
                    handler.string_value("FreestyleSkiingMensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensMoguls:
                    handler.string_value("FreestyleSkiingMensMoguls");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensSlopestyle:
                    handler.string_value("FreestyleSkiingMensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensSkiCross:
                    handler.string_value("FreestyleSkiingMensSkiCross");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensBigAir:
                    handler.string_value("FreestyleSkiingMensBigAir");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensAerials:
                    handler.string_value("FreestyleSkiingWomensAerials");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensHalfpipe:
                    handler.string_value("FreestyleSkiingWomensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensMoguls:
                    handler.string_value("FreestyleSkiingWomensMoguls");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensSlopestyle:
                    handler.string_value("FreestyleSkiingWomensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensSkiCross:
                    handler.string_value("FreestyleSkiingWomensSkiCross");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensBigAir:
                    handler.string_value("FreestyleSkiingWomensBigAir");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMixedTeamAerials:
                    handler.string_value("FreestyleSkiingMixedTeamAerials");
                    break;
                case TypeValueKnownValues.Value_IceHockeyMens:
                    handler.string_value("IceHockeyMens");
                    break;
                case TypeValueKnownValues.Value_IceHockeyWomens:
                    handler.string_value("IceHockeyWomens");
                    break;
                case TypeValueKnownValues.Value_LugeMensSingles:
                    handler.string_value("LugeMensSingles");
                    break;
                case TypeValueKnownValues.Value_LugeWomensSingles:
                    handler.string_value("LugeWomensSingles");
                    break;
                case TypeValueKnownValues.Value_LugeDoubles:
                    handler.string_value("LugeDoubles");
                    break;
                case TypeValueKnownValues.Value_LugeTeamRelay:
                    handler.string_value("LugeTeamRelay");
                    break;
                case TypeValueKnownValues.Value_NordicCombinedIndividualLargeHill10KM:
                    handler.string_value("NordicCombinedIndividualLargeHill10KM");
                    break;
                case TypeValueKnownValues.Value_NordicCombinedIndividualNormalHill10KM:
                    handler.string_value("NordicCombinedIndividualNormalHill10KM");
                    break;
                case TypeValueKnownValues.Value_NordicCombinedTeamLargeHill4X5KM:
                    handler.string_value("NordicCombinedTeamLargeHill4X5KM");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens500M:
                    handler.string_value("ShortTrackSpeedSkatingMens500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1000M:
                    handler.string_value("ShortTrackSpeedSkatingMens1000M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1500M:
                    handler.string_value("ShortTrackSpeedSkatingMens1500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens5000MRelay:
                    handler.string_value("ShortTrackSpeedSkatingMens5000MRelay");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens500M:
                    handler.string_value("ShortTrackSpeedSkatingWomens500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1000M:
                    handler.string_value("ShortTrackSpeedSkatingWomens1000M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1500M:
                    handler.string_value("ShortTrackSpeedSkatingWomens1500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens3000MRelay:
                    handler.string_value("ShortTrackSpeedSkatingWomens3000MRelay");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMixed2000MRelay:
                    handler.string_value("ShortTrackSpeedSkatingMixed2000MRelay");
                    break;
                case TypeValueKnownValues.Value_SkeletonMens:
                    handler.string_value("SkeletonMens");
                    break;
                case TypeValueKnownValues.Value_SkeletonWomens:
                    handler.string_value("SkeletonWomens");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMensIndividualNormalHill:
                    handler.string_value("SkiJumpingMensIndividualNormalHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMensIndividualLargeHill:
                    handler.string_value("SkiJumpingMensIndividualLargeHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMensTeamLargeHill:
                    handler.string_value("SkiJumpingMensTeamLargeHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingWomensIndividualNormalHill:
                    handler.string_value("SkiJumpingWomensIndividualNormalHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMixedTeamNormalHill:
                    handler.string_value("SkiJumpingMixedTeamNormalHill");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensParallelSlalom:
                    handler.string_value("SnowboardingMensParallelSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensParallelGiantSlalom:
                    handler.string_value("SnowboardingMensParallelGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensHalfpipe:
                    handler.string_value("SnowboardingMensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensSlopestyle:
                    handler.string_value("SnowboardingMensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensSnowboardCross:
                    handler.string_value("SnowboardingMensSnowboardCross");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensBigAir:
                    handler.string_value("SnowboardingMensBigAir");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensParallelSlalom:
                    handler.string_value("SnowboardingWomensParallelSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensParallelGiantSlalom:
                    handler.string_value("SnowboardingWomensParallelGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensHalfpipe:
                    handler.string_value("SnowboardingWomensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensSlopestyle:
                    handler.string_value("SnowboardingWomensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensSnowboardCross:
                    handler.string_value("SnowboardingWomensSnowboardCross");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensBigAir:
                    handler.string_value("SnowboardingWomensBigAir");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMixedTeamSnowboardCross:
                    handler.string_value("SnowboardingMixedTeamSnowboardCross");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens500M:
                    handler.string_value("SpeedSkatingMens500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens1000M:
                    handler.string_value("SpeedSkatingMens1000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens1500M:
                    handler.string_value("SpeedSkatingMens1500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens5000M:
                    handler.string_value("SpeedSkatingMens5000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens10000M:
                    handler.string_value("SpeedSkatingMens10000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMensTeamPursuit:
                    handler.string_value("SpeedSkatingMensTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMensMassStart:
                    handler.string_value("SpeedSkatingMensMassStart");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMensAllRound:
                    handler.string_value("SpeedSkatingMensAllRound");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens500M:
                    handler.string_value("SpeedSkatingWomens500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens1000M:
                    handler.string_value("SpeedSkatingWomens1000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens1500M:
                    handler.string_value("SpeedSkatingWomens1500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens3000M:
                    handler.string_value("SpeedSkatingWomens3000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens5000M:
                    handler.string_value("SpeedSkatingWomens5000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomensTeamPursuit:
                    handler.string_value("SpeedSkatingWomensTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomensMassStart:
                    handler.string_value("SpeedSkatingWomensMassStart");
                    break;
                case TypeValueKnownValues.Value_ArcheryMensIndividual:
                    handler.string_value("ArcheryMensIndividual");
                    break;
                case TypeValueKnownValues.Value_ArcheryMensTeam:
                    handler.string_value("ArcheryMensTeam");
                    break;
                case TypeValueKnownValues.Value_ArcheryWomensIndividual:
                    handler.string_value("ArcheryWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_ArcheryWomensTeam:
                    handler.string_value("ArcheryWomensTeam");
                    break;
                case TypeValueKnownValues.Value_ArcheryMixedTeam:
                    handler.string_value("ArcheryMixedTeam");
                    break;
                case TypeValueKnownValues.Value_ArtisticSwimmingWomensDuet:
                    handler.string_value("ArtisticSwimmingWomensDuet");
                    break;
                case TypeValueKnownValues.Value_ArtisticSwimmingWomensTeam:
                    handler.string_value("ArtisticSwimmingWomensTeam");
                    break;
                case TypeValueKnownValues.Value_ArtisticSwimmingWomensSolo:
                    handler.string_value("ArtisticSwimmingWomensSolo");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens100M:
                    handler.string_value("AthleticsMens100M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens200M:
                    handler.string_value("AthleticsMens200M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens400M:
                    handler.string_value("AthleticsMens400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens800M:
                    handler.string_value("AthleticsMens800M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens1500M:
                    handler.string_value("AthleticsMens1500M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens5000M:
                    handler.string_value("AthleticsMens5000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens10000M:
                    handler.string_value("AthleticsMens10000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHurdles110M:
                    handler.string_value("AthleticsMensHurdles110M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHurdles400M:
                    handler.string_value("AthleticsMensHurdles400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensSteeplechase3000M:
                    handler.string_value("AthleticsMensSteeplechase3000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens4X100MRelay:
                    handler.string_value("AthleticsMens4X100MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens4X400MRelay:
                    handler.string_value("AthleticsMens4X400MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensMarathon:
                    handler.string_value("AthleticsMensMarathon");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensWalk20KM:
                    handler.string_value("AthleticsMensWalk20KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensWalk50KM:
                    handler.string_value("AthleticsMensWalk50KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHighJump:
                    handler.string_value("AthleticsMensHighJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensPoleVault:
                    handler.string_value("AthleticsMensPoleVault");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensLongJump:
                    handler.string_value("AthleticsMensLongJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensTripleJump:
                    handler.string_value("AthleticsMensTripleJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensShotPut:
                    handler.string_value("AthleticsMensShotPut");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensDiscusThrow:
                    handler.string_value("AthleticsMensDiscusThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHammerThrow:
                    handler.string_value("AthleticsMensHammerThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensJavelinThrow:
                    handler.string_value("AthleticsMensJavelinThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensDecathlon:
                    handler.string_value("AthleticsMensDecathlon");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens100M:
                    handler.string_value("AthleticsWomens100M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens200M:
                    handler.string_value("AthleticsWomens200M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens400M:
                    handler.string_value("AthleticsWomens400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens800M:
                    handler.string_value("AthleticsWomens800M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens1500M:
                    handler.string_value("AthleticsWomens1500M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens3000M:
                    handler.string_value("AthleticsWomens3000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens5000M:
                    handler.string_value("AthleticsWomens5000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens10000M:
                    handler.string_value("AthleticsWomens10000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHurdles100M:
                    handler.string_value("AthleticsWomensHurdles100M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomenshurdles400M:
                    handler.string_value("AthleticsWomenshurdles400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensSteeplechase3000M:
                    handler.string_value("AthleticsWomensSteeplechase3000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens4X100MRelay:
                    handler.string_value("AthleticsWomens4X100MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens4X400MRelay:
                    handler.string_value("AthleticsWomens4X400MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensMarathon:
                    handler.string_value("AthleticsWomensMarathon");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensWalk10KM:
                    handler.string_value("AthleticsWomensWalk10KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensWalk20KM:
                    handler.string_value("AthleticsWomensWalk20KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHighJump:
                    handler.string_value("AthleticsWomensHighJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensPoleVault:
                    handler.string_value("AthleticsWomensPoleVault");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensLongJump:
                    handler.string_value("AthleticsWomensLongJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensTripleJump:
                    handler.string_value("AthleticsWomensTripleJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensShotPut:
                    handler.string_value("AthleticsWomensShotPut");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensDiscusThrow:
                    handler.string_value("AthleticsWomensDiscusThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHammerThrow:
                    handler.string_value("AthleticsWomensHammerThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensJavelinThrow:
                    handler.string_value("AthleticsWomensJavelinThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHeptathlon:
                    handler.string_value("AthleticsWomensHeptathlon");
                    break;
                case TypeValueKnownValues.Value_AthleticsMixed4X400MRelay:
                    handler.string_value("AthleticsMixed4X400MRelay");
                    break;
                case TypeValueKnownValues.Value_BadmintonMensSingles:
                    handler.string_value("BadmintonMensSingles");
                    break;
                case TypeValueKnownValues.Value_BadmintonMensDoubles:
                    handler.string_value("BadmintonMensDoubles");
                    break;
                case TypeValueKnownValues.Value_BadmintonWomensSingles:
                    handler.string_value("BadmintonWomensSingles");
                    break;
                case TypeValueKnownValues.Value_BadmintonWomensDoubles:
                    handler.string_value("BadmintonWomensDoubles");
                    break;
                case TypeValueKnownValues.Value_BadmintonMixedDoubles:
                    handler.string_value("BadmintonMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_BaseballMens:
                    handler.string_value("BaseballMens");
                    break;
                case TypeValueKnownValues.Value_BasketballMens:
                    handler.string_value("BasketballMens");
                    break;
                case TypeValueKnownValues.Value_BasketballWomens:
                    handler.string_value("BasketballWomens");
                    break;
                case TypeValueKnownValues.Value_BasketballMens3x3:
                    handler.string_value("BasketballMens3x3");
                    break;
                case TypeValueKnownValues.Value_BasketballWomens3x3:
                    handler.string_value("BasketballWomens3x3");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightFlyweight:
                    handler.string_value("BoxingMensLightFlyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensFlyweight:
                    handler.string_value("BoxingMensFlyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensBantamweight:
                    handler.string_value("BoxingMensBantamweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensFeatherweight:
                    handler.string_value("BoxingMensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightweight:
                    handler.string_value("BoxingMensLightweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightWelterweight:
                    handler.string_value("BoxingMensLightWelterweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensWelterweight:
                    handler.string_value("BoxingMensWelterweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightMiddleweight:
                    handler.string_value("BoxingMensLightMiddleweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensMiddleweight:
                    handler.string_value("BoxingMensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightHeavyweight:
                    handler.string_value("BoxingMensLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensHeavyweight:
                    handler.string_value("BoxingMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensSuperHeavyweight:
                    handler.string_value("BoxingMensSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensFlyweight:
                    handler.string_value("BoxingWomensFlyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensFeatherweight:
                    handler.string_value("BoxingWomensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensLightweight:
                    handler.string_value("BoxingWomensLightweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensWelterweight:
                    handler.string_value("BoxingWomensWelterweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensMiddleweight:
                    handler.string_value("BoxingWomensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSlalomC1:
                    handler.string_value("CanoeingMensSlalomC1");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSlalomC2:
                    handler.string_value("CanoeingMensSlalomC2");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSlalomK1:
                    handler.string_value("CanoeingMensSlalomK1");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC1200M:
                    handler.string_value("CanoeingMensSprintC1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC1500M:
                    handler.string_value("CanoeingMensSprintC1500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC11000M:
                    handler.string_value("CanoeingMensSprintC11000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC2500M:
                    handler.string_value("CanoeingMensSprintC2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC21000M:
                    handler.string_value("CanoeingMensSprintC21000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK1200M:
                    handler.string_value("CanoeingMensSprintK1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK1500M:
                    handler.string_value("CanoeingMensSprintK1500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK11000M:
                    handler.string_value("CanoeingMensSprintK11000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK2200M:
                    handler.string_value("CanoeingMensSprintK2200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK2500M:
                    handler.string_value("CanoeingMensSprintK2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK21000M:
                    handler.string_value("CanoeingMensSprintK21000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK4500M:
                    handler.string_value("CanoeingMensSprintK4500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK41000M:
                    handler.string_value("CanoeingMensSprintK41000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSlalomC1:
                    handler.string_value("CanoeingWomensSlalomC1");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSlalomK1:
                    handler.string_value("CanoeingWomensSlalomK1");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintC1200M:
                    handler.string_value("CanoeingWomensSprintC1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintC2500M:
                    handler.string_value("CanoeingWomensSprintC2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK1200M:
                    handler.string_value("CanoeingWomensSprintK1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK1500M:
                    handler.string_value("CanoeingWomensSprintK1500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK2500M:
                    handler.string_value("CanoeingWomensSprintK2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK4500M:
                    handler.string_value("CanoeingWomensSprintK4500M");
                    break;
                case TypeValueKnownValues.Value_CyclingMensRoadCyclingRoadRace:
                    handler.string_value("CyclingMensRoadCyclingRoadRace");
                    break;
                case TypeValueKnownValues.Value_CyclingMensRoadCyclingTimeTrial:
                    handler.string_value("CyclingMensRoadCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingMensRoadCyclingTeamTimeTrial:
                    handler.string_value("CyclingMensRoadCyclingTeamTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingKeirin:
                    handler.string_value("CyclingMensTrackCyclingKeirin");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingMadison:
                    handler.string_value("CyclingMensTrackCyclingMadison");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingOmnium:
                    handler.string_value("CyclingMensTrackCyclingOmnium");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingPointsRace:
                    handler.string_value("CyclingMensTrackCyclingPointsRace");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualPursuit:
                    handler.string_value("CyclingMensTrackCyclingIndividualPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamPursuit:
                    handler.string_value("CyclingMensTrackCyclingTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualSprint:
                    handler.string_value("CyclingMensTrackCyclingIndividualSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamSprint:
                    handler.string_value("CyclingMensTrackCyclingTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingTimeTrial:
                    handler.string_value("CyclingMensTrackCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingMensMountainBikingCrossCountry:
                    handler.string_value("CyclingMensMountainBikingCrossCountry");
                    break;
                case TypeValueKnownValues.Value_CyclingMensBMX:
                    handler.string_value("CyclingMensBMX");
                    break;
                case TypeValueKnownValues.Value_CyclingMensBMXRace:
                    handler.string_value("CyclingMensBMXRace");
                    break;
                case TypeValueKnownValues.Value_CyclingMensBMXFreestyle:
                    handler.string_value("CyclingMensBMXFreestyle");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensRoadCyclingRoadRace:
                    handler.string_value("CyclingWomensRoadCyclingRoadRace");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensRoadCyclingTimeTrial:
                    handler.string_value("CyclingWomensRoadCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingKeirin:
                    handler.string_value("CyclingWomensTrackCyclingKeirin");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingMadison:
                    handler.string_value("CyclingWomensTrackCyclingMadison");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingOmnium:
                    handler.string_value("CyclingWomensTrackCyclingOmnium");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingPointsRace:
                    handler.string_value("CyclingWomensTrackCyclingPointsRace");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualPursuit:
                    handler.string_value("CyclingWomensTrackCyclingIndividualPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamPursuit:
                    handler.string_value("CyclingWomensTrackCyclingTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualSprint:
                    handler.string_value("CyclingWomensTrackCyclingIndividualSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamSprint:
                    handler.string_value("CyclingWomensTrackCyclingTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTimeTrial:
                    handler.string_value("CyclingWomensTrackCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensMountainBikingCrossCountry:
                    handler.string_value("CyclingWomensMountainBikingCrossCountry");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensBMX:
                    handler.string_value("CyclingWomensBMX");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensBMXRace:
                    handler.string_value("CyclingWomensBMXRace");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensBMXFreestyle:
                    handler.string_value("CyclingWomensBMXFreestyle");
                    break;
                case TypeValueKnownValues.Value_DivingMensSpringboard:
                    handler.string_value("DivingMensSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingMensPlatform:
                    handler.string_value("DivingMensPlatform");
                    break;
                case TypeValueKnownValues.Value_DivingMensSynchronizedSpringboard:
                    handler.string_value("DivingMensSynchronizedSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingMensSynchronizedPlatform:
                    handler.string_value("DivingMensSynchronizedPlatform");
                    break;
                case TypeValueKnownValues.Value_DivingWomensSpringboard:
                    handler.string_value("DivingWomensSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingWomensPlatform:
                    handler.string_value("DivingWomensPlatform");
                    break;
                case TypeValueKnownValues.Value_DivingWomensSynchronizedSpringboard:
                    handler.string_value("DivingWomensSynchronizedSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingWomensSynchronizedPlatform:
                    handler.string_value("DivingWomensSynchronizedPlatform");
                    break;
                case TypeValueKnownValues.Value_EquestrianIndividualDressage:
                    handler.string_value("EquestrianIndividualDressage");
                    break;
                case TypeValueKnownValues.Value_EquestrianTeamDressage:
                    handler.string_value("EquestrianTeamDressage");
                    break;
                case TypeValueKnownValues.Value_EquestrianIndividualEventing:
                    handler.string_value("EquestrianIndividualEventing");
                    break;
                case TypeValueKnownValues.Value_EquestrianTeamEventing:
                    handler.string_value("EquestrianTeamEventing");
                    break;
                case TypeValueKnownValues.Value_EquestrianIndividualJumping:
                    handler.string_value("EquestrianIndividualJumping");
                    break;
                case TypeValueKnownValues.Value_EquestrianTeamJumping:
                    handler.string_value("EquestrianTeamJumping");
                    break;
                case TypeValueKnownValues.Value_FencingMensIndividualEpee:
                    handler.string_value("FencingMensIndividualEpee");
                    break;
                case TypeValueKnownValues.Value_FencingMensTeamEpee:
                    handler.string_value("FencingMensTeamEpee");
                    break;
                case TypeValueKnownValues.Value_FencingMensIndividualFoil:
                    handler.string_value("FencingMensIndividualFoil");
                    break;
                case TypeValueKnownValues.Value_FencingMensTeamFoil:
                    handler.string_value("FencingMensTeamFoil");
                    break;
                case TypeValueKnownValues.Value_FencingMensIndividualSabre:
                    handler.string_value("FencingMensIndividualSabre");
                    break;
                case TypeValueKnownValues.Value_FencingMensTeamSabre:
                    handler.string_value("FencingMensTeamSabre");
                    break;
                case TypeValueKnownValues.Value_FencingWomensIndividualEpee:
                    handler.string_value("FencingWomensIndividualEpee");
                    break;
                case TypeValueKnownValues.Value_FencingWomensTeamEpee:
                    handler.string_value("FencingWomensTeamEpee");
                    break;
                case TypeValueKnownValues.Value_FencingWomensIndividualFoil:
                    handler.string_value("FencingWomensIndividualFoil");
                    break;
                case TypeValueKnownValues.Value_FencingWomensTeamFoil:
                    handler.string_value("FencingWomensTeamFoil");
                    break;
                case TypeValueKnownValues.Value_FencingWomensIndividualSabre:
                    handler.string_value("FencingWomensIndividualSabre");
                    break;
                case TypeValueKnownValues.Value_FencingWomensTeamSabre:
                    handler.string_value("FencingWomensTeamSabre");
                    break;
                case TypeValueKnownValues.Value_FieldHockeyMens:
                    handler.string_value("FieldHockeyMens");
                    break;
                case TypeValueKnownValues.Value_FieldHockeyWomens:
                    handler.string_value("FieldHockeyWomens");
                    break;
                case TypeValueKnownValues.Value_FootballMens:
                    handler.string_value("FootballMens");
                    break;
                case TypeValueKnownValues.Value_FootballWomens:
                    handler.string_value("FootballWomens");
                    break;
                case TypeValueKnownValues.Value_GolfMensIndividual:
                    handler.string_value("GolfMensIndividual");
                    break;
                case TypeValueKnownValues.Value_GolfWomensIndividual:
                    handler.string_value("GolfWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticTeamAllAround:
                    handler.string_value("GymnasticsMensArtisticTeamAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticIndividualAllAround:
                    handler.string_value("GymnasticsMensArtisticIndividualAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticFloorExercise:
                    handler.string_value("GymnasticsMensArtisticFloorExercise");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticHorizontalBar:
                    handler.string_value("GymnasticsMensArtisticHorizontalBar");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticParallelBars:
                    handler.string_value("GymnasticsMensArtisticParallelBars");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticPommelHorse:
                    handler.string_value("GymnasticsMensArtisticPommelHorse");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticRings:
                    handler.string_value("GymnasticsMensArtisticRings");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticVault:
                    handler.string_value("GymnasticsMensArtisticVault");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensTrampolineIndividual:
                    handler.string_value("GymnasticsMensTrampolineIndividual");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticTeamAllAround:
                    handler.string_value("GymnasticsWomensArtisticTeamAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticIndividualAllAround:
                    handler.string_value("GymnasticsWomensArtisticIndividualAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticBalanceBeam:
                    handler.string_value("GymnasticsWomensArtisticBalanceBeam");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticFloorExercise:
                    handler.string_value("GymnasticsWomensArtisticFloorExercise");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticUnevenBars:
                    handler.string_value("GymnasticsWomensArtisticUnevenBars");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticVault:
                    handler.string_value("GymnasticsWomensArtisticVault");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensRhythmicIndividualAllAround:
                    handler.string_value("GymnasticsWomensRhythmicIndividualAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensRhythmicGroupAllAround:
                    handler.string_value("GymnasticsWomensRhythmicGroupAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensTrampolineIndividual:
                    handler.string_value("GymnasticsWomensTrampolineIndividual");
                    break;
                case TypeValueKnownValues.Value_HandballMens:
                    handler.string_value("HandballMens");
                    break;
                case TypeValueKnownValues.Value_HandballWomens:
                    handler.string_value("HandballWomens");
                    break;
                case TypeValueKnownValues.Value_JudoMensExtraLightweight:
                    handler.string_value("JudoMensExtraLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHalfLightweight:
                    handler.string_value("JudoMensHalfLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensLightweight:
                    handler.string_value("JudoMensLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHalfMiddleweight:
                    handler.string_value("JudoMensHalfMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensMiddleweight:
                    handler.string_value("JudoMensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHalfHeavyweight:
                    handler.string_value("JudoMensHalfHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHeavyweight:
                    handler.string_value("JudoMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensExtraLightweight:
                    handler.string_value("JudoWomensExtraLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHalfLightweight:
                    handler.string_value("JudoWomensHalfLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensLightweight:
                    handler.string_value("JudoWomensLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHalfMiddleweight:
                    handler.string_value("JudoWomensHalfMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensMiddleweight:
                    handler.string_value("JudoWomensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHalfHeavyweight:
                    handler.string_value("JudoWomensHalfHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHeavyweight:
                    handler.string_value("JudoWomensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoMixedTeam:
                    handler.string_value("JudoMixedTeam");
                    break;
                case TypeValueKnownValues.Value_KarateMens67Kg:
                    handler.string_value("KarateMens67Kg");
                    break;
                case TypeValueKnownValues.Value_KarateMens75Kg:
                    handler.string_value("KarateMens75Kg");
                    break;
                case TypeValueKnownValues.Value_KarateMens75KgPlus:
                    handler.string_value("KarateMens75KgPlus");
                    break;
                case TypeValueKnownValues.Value_KarateMensKata:
                    handler.string_value("KarateMensKata");
                    break;
                case TypeValueKnownValues.Value_KarateWomens55Kg:
                    handler.string_value("KarateWomens55Kg");
                    break;
                case TypeValueKnownValues.Value_KarateWomens61Kg:
                    handler.string_value("KarateWomens61Kg");
                    break;
                case TypeValueKnownValues.Value_KarateWomens61KgPlus:
                    handler.string_value("KarateWomens61KgPlus");
                    break;
                case TypeValueKnownValues.Value_KarateWomensKata:
                    handler.string_value("KarateWomensKata");
                    break;
                case TypeValueKnownValues.Value_ModernPentathlonMens:
                    handler.string_value("ModernPentathlonMens");
                    break;
                case TypeValueKnownValues.Value_ModernPentathlonWomens:
                    handler.string_value("ModernPentathlonWomens");
                    break;
                case TypeValueKnownValues.Value_RowingMensSingleSculls:
                    handler.string_value("RowingMensSingleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensDoubleSculls:
                    handler.string_value("RowingMensDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensQuadrupleSculls:
                    handler.string_value("RowingMensQuadrupleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxlessPair:
                    handler.string_value("RowingMensCoxlessPair");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxedPair:
                    handler.string_value("RowingMensCoxedPair");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxlessFour:
                    handler.string_value("RowingMensCoxlessFour");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxedFour:
                    handler.string_value("RowingMensCoxedFour");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxedEight:
                    handler.string_value("RowingMensCoxedEight");
                    break;
                case TypeValueKnownValues.Value_RowingMensLightweightDoubleSculls:
                    handler.string_value("RowingMensLightweightDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensLightweightCoxlessFour:
                    handler.string_value("RowingMensLightweightCoxlessFour");
                    break;
                case TypeValueKnownValues.Value_RowingWomensSingleSculls:
                    handler.string_value("RowingWomensSingleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingWomensDoubleSculls:
                    handler.string_value("RowingWomensDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingWomensQuadrupleSculls:
                    handler.string_value("RowingWomensQuadrupleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxlessPair:
                    handler.string_value("RowingWomensCoxlessPair");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxlessFour:
                    handler.string_value("RowingWomensCoxlessFour");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxedFour:
                    handler.string_value("RowingWomensCoxedFour");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxedEight:
                    handler.string_value("RowingWomensCoxedEight");
                    break;
                case TypeValueKnownValues.Value_RowingWomensLightweightDoubleSculls:
                    handler.string_value("RowingWomensLightweightDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RugbyMens:
                    handler.string_value("RugbyMens");
                    break;
                case TypeValueKnownValues.Value_RugbyWomens:
                    handler.string_value("RugbyWomens");
                    break;
                case TypeValueKnownValues.Value_SailingMensRSX:
                    handler.string_value("SailingMensRSX");
                    break;
                case TypeValueKnownValues.Value_SailingMensLaser:
                    handler.string_value("SailingMensLaser");
                    break;
                case TypeValueKnownValues.Value_SailingMensFinn:
                    handler.string_value("SailingMensFinn");
                    break;
                case TypeValueKnownValues.Value_SailingMens470:
                    handler.string_value("SailingMens470");
                    break;
                case TypeValueKnownValues.Value_SailingMens49er:
                    handler.string_value("SailingMens49er");
                    break;
                case TypeValueKnownValues.Value_SailingMens49erFX:
                    handler.string_value("SailingMens49erFX");
                    break;
                case TypeValueKnownValues.Value_SailingMensStar:
                    handler.string_value("SailingMensStar");
                    break;
                case TypeValueKnownValues.Value_SailingWomensRSX:
                    handler.string_value("SailingWomensRSX");
                    break;
                case TypeValueKnownValues.Value_SailingWomensLaser:
                    handler.string_value("SailingWomensLaser");
                    break;
                case TypeValueKnownValues.Value_SailingWomensLaserRadial:
                    handler.string_value("SailingWomensLaserRadial");
                    break;
                case TypeValueKnownValues.Value_SailingWomens470:
                    handler.string_value("SailingWomens470");
                    break;
                case TypeValueKnownValues.Value_SailingWomens49erFX:
                    handler.string_value("SailingWomens49erFX");
                    break;
                case TypeValueKnownValues.Value_SailingWomensElliott6M:
                    handler.string_value("SailingWomensElliott6M");
                    break;
                case TypeValueKnownValues.Value_SailingWomensYngling:
                    handler.string_value("SailingWomensYngling");
                    break;
                case TypeValueKnownValues.Value_SailingMixedNacra17:
                    handler.string_value("SailingMixedNacra17");
                    break;
                case TypeValueKnownValues.Value_SailingMixed49erFX:
                    handler.string_value("SailingMixed49erFX");
                    break;
                case TypeValueKnownValues.Value_SailingMixedFinn:
                    handler.string_value("SailingMixedFinn");
                    break;
                case TypeValueKnownValues.Value_SailingMixedTornado:
                    handler.string_value("SailingMixedTornado");
                    break;
                case TypeValueKnownValues.Value_ShootingMensAirPistol10M:
                    handler.string_value("ShootingMensAirPistol10M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensAirRifle10M:
                    handler.string_value("ShootingMensAirRifle10M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensRapidFirePistol25M:
                    handler.string_value("ShootingMensRapidFirePistol25M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensPistol50M:
                    handler.string_value("ShootingMensPistol50M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensRifleProne50M:
                    handler.string_value("ShootingMensRifleProne50M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensRifleThreePositions50M:
                    handler.string_value("ShootingMensRifleThreePositions50M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensSkeet:
                    handler.string_value("ShootingMensSkeet");
                    break;
                case TypeValueKnownValues.Value_ShootingMensTrap:
                    handler.string_value("ShootingMensTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingMensDoubleTrap:
                    handler.string_value("ShootingMensDoubleTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingMens10MRunningTarget:
                    handler.string_value("ShootingMens10MRunningTarget");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensAirPistol10M:
                    handler.string_value("ShootingWomensAirPistol10M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensAirRifle10M:
                    handler.string_value("ShootingWomensAirRifle10M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensPistol25M:
                    handler.string_value("ShootingWomensPistol25M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensRifleThreePositions50M:
                    handler.string_value("ShootingWomensRifleThreePositions50M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensSkeet:
                    handler.string_value("ShootingWomensSkeet");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensTrap:
                    handler.string_value("ShootingWomensTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensDoubleTrap:
                    handler.string_value("ShootingWomensDoubleTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingMixedAirPistolTeam:
                    handler.string_value("ShootingMixedAirPistolTeam");
                    break;
                case TypeValueKnownValues.Value_ShootingMixedAirRifleTeam:
                    handler.string_value("ShootingMixedAirRifleTeam");
                    break;
                case TypeValueKnownValues.Value_ShootingMixedTrapTeam:
                    handler.string_value("ShootingMixedTrapTeam");
                    break;
                case TypeValueKnownValues.Value_SkateboardingMensPark:
                    handler.string_value("SkateboardingMensPark");
                    break;
                case TypeValueKnownValues.Value_SkateboardingMensStreet:
                    handler.string_value("SkateboardingMensStreet");
                    break;
                case TypeValueKnownValues.Value_SkateboardingWomensPark:
                    handler.string_value("SkateboardingWomensPark");
                    break;
                case TypeValueKnownValues.Value_SkateboardingWomensStreet:
                    handler.string_value("SkateboardingWomensStreet");
                    break;
                case TypeValueKnownValues.Value_SoftballWomens:
                    handler.string_value("SoftballWomens");
                    break;
                case TypeValueKnownValues.Value_SportClimbingMensCombined:
                    handler.string_value("SportClimbingMensCombined");
                    break;
                case TypeValueKnownValues.Value_SportClimbingWomensCombined:
                    handler.string_value("SportClimbingWomensCombined");
                    break;
                case TypeValueKnownValues.Value_SportSurfingMens:
                    handler.string_value("SportSurfingMens");
                    break;
                case TypeValueKnownValues.Value_SportSurfingWomens:
                    handler.string_value("SportSurfingWomens");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle50M:
                    handler.string_value("SwimmingMensFreestyle50M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle100M:
                    handler.string_value("SwimmingMensFreestyle100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle200M:
                    handler.string_value("SwimmingMensFreestyle200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle400M:
                    handler.string_value("SwimmingMensFreestyle400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle800M:
                    handler.string_value("SwimmingMensFreestyle800M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle1500M:
                    handler.string_value("SwimmingMensFreestyle1500M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBackstroke100M:
                    handler.string_value("SwimmingMensBackstroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBackstroke200M:
                    handler.string_value("SwimmingMensBackstroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBreaststroke100M:
                    handler.string_value("SwimmingMensBreaststroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBreaststroke200M:
                    handler.string_value("SwimmingMensBreaststroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensButterfly100M:
                    handler.string_value("SwimmingMensButterfly100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensButterfly200M:
                    handler.string_value("SwimmingMensButterfly200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensIndividualMedley200M:
                    handler.string_value("SwimmingMensIndividualMedley200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensIndividualMedley400M:
                    handler.string_value("SwimmingMensIndividualMedley400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMens4X100MFreestyleRelay:
                    handler.string_value("SwimmingMens4X100MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingMens4X200MFreestyleRelay:
                    handler.string_value("SwimmingMens4X200MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingMens4X100MMedleyRelay:
                    handler.string_value("SwimmingMens4X100MMedleyRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensOpenWater10KM:
                    handler.string_value("SwimmingMensOpenWater10KM");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle50M:
                    handler.string_value("SwimmingWomensFreestyle50M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle100M:
                    handler.string_value("SwimmingWomensFreestyle100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle200M:
                    handler.string_value("SwimmingWomensFreestyle200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle400M:
                    handler.string_value("SwimmingWomensFreestyle400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle800M:
                    handler.string_value("SwimmingWomensFreestyle800M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle1500M:
                    handler.string_value("SwimmingWomensFreestyle1500M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBackstroke100M:
                    handler.string_value("SwimmingWomensBackstroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBackstroke200M:
                    handler.string_value("SwimmingWomensBackstroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBreaststroke100M:
                    handler.string_value("SwimmingWomensBreaststroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBreaststroke200M:
                    handler.string_value("SwimmingWomensBreaststroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensButterfly100M:
                    handler.string_value("SwimmingWomensButterfly100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensButterfly200M:
                    handler.string_value("SwimmingWomensButterfly200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensIndividualMedley200M:
                    handler.string_value("SwimmingWomensIndividualMedley200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensindividualMedley400M:
                    handler.string_value("SwimmingWomensindividualMedley400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomens4X100MFreestyleRelay:
                    handler.string_value("SwimmingWomens4X100MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomens4X200MFreestyleRelay:
                    handler.string_value("SwimmingWomens4X200MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomens4X100MMedleyRelay:
                    handler.string_value("SwimmingWomens4X100MMedleyRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensOpenWater10KM:
                    handler.string_value("SwimmingWomensOpenWater10KM");
                    break;
                case TypeValueKnownValues.Value_SwimmingMixed4X100MMedleyRelay:
                    handler.string_value("SwimmingMixed4X100MMedleyRelay");
                    break;
                case TypeValueKnownValues.Value_TableTennisMensSingles:
                    handler.string_value("TableTennisMensSingles");
                    break;
                case TypeValueKnownValues.Value_TableTennisMensTeam:
                    handler.string_value("TableTennisMensTeam");
                    break;
                case TypeValueKnownValues.Value_TableTennisWomensSingles:
                    handler.string_value("TableTennisWomensSingles");
                    break;
                case TypeValueKnownValues.Value_TableTennisWomensTeam:
                    handler.string_value("TableTennisWomensTeam");
                    break;
                case TypeValueKnownValues.Value_TableTennisMixedDoubles:
                    handler.string_value("TableTennisMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensFlyweight:
                    handler.string_value("TaekwondoMensFlyweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensFeatherweight:
                    handler.string_value("TaekwondoMensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensWelterweight:
                    handler.string_value("TaekwondoMensWelterweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensHeavyweight:
                    handler.string_value("TaekwondoMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensFlyweight:
                    handler.string_value("TaekwondoWomensFlyweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensFeatherweight:
                    handler.string_value("TaekwondoWomensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensWelterweight:
                    handler.string_value("TaekwondoWomensWelterweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensHeavyweight:
                    handler.string_value("TaekwondoWomensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_TennisMensSingles:
                    handler.string_value("TennisMensSingles");
                    break;
                case TypeValueKnownValues.Value_TennisMensDoubles:
                    handler.string_value("TennisMensDoubles");
                    break;
                case TypeValueKnownValues.Value_TennisWomensSingles:
                    handler.string_value("TennisWomensSingles");
                    break;
                case TypeValueKnownValues.Value_TennisWomensDoubles:
                    handler.string_value("TennisWomensDoubles");
                    break;
                case TypeValueKnownValues.Value_TennisMixedDoubles:
                    handler.string_value("TennisMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_TriathlonMensIndividual:
                    handler.string_value("TriathlonMensIndividual");
                    break;
                case TypeValueKnownValues.Value_TriathlonWomensIndividual:
                    handler.string_value("TriathlonWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_TriathlonMixedRelay:
                    handler.string_value("TriathlonMixedRelay");
                    break;
                case TypeValueKnownValues.Value_VolleyballMensIndoor:
                    handler.string_value("VolleyballMensIndoor");
                    break;
                case TypeValueKnownValues.Value_VolleyballMensBeach:
                    handler.string_value("VolleyballMensBeach");
                    break;
                case TypeValueKnownValues.Value_VolleyballWomensIndoor:
                    handler.string_value("VolleyballWomensIndoor");
                    break;
                case TypeValueKnownValues.Value_VolleyballWomensBeach:
                    handler.string_value("VolleyballWomensBeach");
                    break;
                case TypeValueKnownValues.Value_WaterPoloMens:
                    handler.string_value("WaterPoloMens");
                    break;
                case TypeValueKnownValues.Value_WaterPoloWomens:
                    handler.string_value("WaterPoloWomens");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensFlyweight:
                    handler.string_value("WeightliftingMensFlyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensBantamweight:
                    handler.string_value("WeightliftingMensBantamweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensFeatherweight:
                    handler.string_value("WeightliftingMensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensLightweight:
                    handler.string_value("WeightliftingMensLightweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensMiddleweight:
                    handler.string_value("WeightliftingMensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensLightHeavyweight:
                    handler.string_value("WeightliftingMensLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensMiddleHeavyweight:
                    handler.string_value("WeightliftingMensMiddleHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensFirstHeavyweight:
                    handler.string_value("WeightliftingMensFirstHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensHeavyweight:
                    handler.string_value("WeightliftingMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensSuperHeavyweight:
                    handler.string_value("WeightliftingMensSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens61Kg:
                    handler.string_value("WeightliftingMens61Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens67Kg:
                    handler.string_value("WeightliftingMens67Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens73Kg:
                    handler.string_value("WeightliftingMens73Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens81Kg:
                    handler.string_value("WeightliftingMens81Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens96Kg:
                    handler.string_value("WeightliftingMens96Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens109Kg:
                    handler.string_value("WeightliftingMens109Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens109KgPlus:
                    handler.string_value("WeightliftingMens109KgPlus");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensFlyweight:
                    handler.string_value("WeightliftingWomensFlyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensFeatherweight:
                    handler.string_value("WeightliftingWomensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensLightweight:
                    handler.string_value("WeightliftingWomensLightweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensMiddleweight:
                    handler.string_value("WeightliftingWomensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensLightHeavyweight:
                    handler.string_value("WeightliftingWomensLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensHeavyweight:
                    handler.string_value("WeightliftingWomensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensSuperHeavyweight:
                    handler.string_value("WeightliftingWomensSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens49Kg:
                    handler.string_value("WeightliftingWomens49Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens55Kg:
                    handler.string_value("WeightliftingWomens55Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens59Kg:
                    handler.string_value("WeightliftingWomens59Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens64Kg:
                    handler.string_value("WeightliftingWomens64Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens76Kg:
                    handler.string_value("WeightliftingWomens76Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens87Kg:
                    handler.string_value("WeightliftingWomens87Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens87KgPlus:
                    handler.string_value("WeightliftingWomens87KgPlus");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightFlyweight:
                    handler.string_value("WrestlingMensGrecoRomanLightFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanFlyweight:
                    handler.string_value("WrestlingMensGrecoRomanFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanBantamweight:
                    handler.string_value("WrestlingMensGrecoRomanBantamweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanFeatherweight:
                    handler.string_value("WrestlingMensGrecoRomanFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightweight:
                    handler.string_value("WrestlingMensGrecoRomanLightweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanWelterweight:
                    handler.string_value("WrestlingMensGrecoRomanWelterweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanMiddleweight:
                    handler.string_value("WrestlingMensGrecoRomanMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightHeavyweight:
                    handler.string_value("WrestlingMensGrecoRomanLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanHeavyweight:
                    handler.string_value("WrestlingMensGrecoRomanHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanSuperHeavyweight:
                    handler.string_value("WrestlingMensGrecoRomanSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman60Kg:
                    handler.string_value("WrestlingMensGrecoRoman60Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman67Kg:
                    handler.string_value("WrestlingMensGrecoRoman67Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman77Kg:
                    handler.string_value("WrestlingMensGrecoRoman77Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman87Kg:
                    handler.string_value("WrestlingMensGrecoRoman87Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman97Kg:
                    handler.string_value("WrestlingMensGrecoRoman97Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman130Kg:
                    handler.string_value("WrestlingMensGrecoRoman130Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleLightFlyweight:
                    handler.string_value("WrestlingMensFreestyleLightFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleFlyweight:
                    handler.string_value("WrestlingMensFreestyleFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleBantamweight:
                    handler.string_value("WrestlingMensFreestyleBantamweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleFeatherweight:
                    handler.string_value("WrestlingMensFreestyleFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleLightweight:
                    handler.string_value("WrestlingMensFreestyleLightweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleWelterweight:
                    handler.string_value("WrestlingMensFreestyleWelterweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleMiddleweight:
                    handler.string_value("WrestlingMensFreestyleMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleLightHeavyweight:
                    handler.string_value("WrestlingMensFreestyleLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleHeavyweight:
                    handler.string_value("WrestlingMensFreestyleHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleSuperHeavyweight:
                    handler.string_value("WrestlingMensFreestyleSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle57Kg:
                    handler.string_value("WrestlingMensFreestyle57Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle65Kg:
                    handler.string_value("WrestlingMensFreestyle65Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle74Kg:
                    handler.string_value("WrestlingMensFreestyle74Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle86Kg:
                    handler.string_value("WrestlingMensFreestyle86Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle97Kg:
                    handler.string_value("WrestlingMensFreestyle97Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle125Kg:
                    handler.string_value("WrestlingMensFreestyle125Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleFlyweight:
                    handler.string_value("WrestlingWomensFreestyleFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleBantamweight:
                    handler.string_value("WrestlingWomensFreestyleBantamweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleLightweight:
                    handler.string_value("WrestlingWomensFreestyleLightweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleMiddleweight:
                    handler.string_value("WrestlingWomensFreestyleMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleWelterweight:
                    handler.string_value("WrestlingWomensFreestyleWelterweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleLightHeavyweight:
                    handler.string_value("WrestlingWomensFreestyleLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleHeavyweight:
                    handler.string_value("WrestlingWomensFreestyleHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle50Kg:
                    handler.string_value("WrestlingWomensFreestyle50Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle53Kg:
                    handler.string_value("WrestlingWomensFreestyle53Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle57Kg:
                    handler.string_value("WrestlingWomensFreestyle57Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle62Kg:
                    handler.string_value("WrestlingWomensFreestyle62Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle68Kg:
                    handler.string_value("WrestlingWomensFreestyle68Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle76Kg:
                    handler.string_value("WrestlingWomensFreestyle76Kg");
                    break;
                default:
                    Debug.Assert(false);
                    break;
              }
          }
        else
          {
                    handler.string_value(storeValue.string_value);
          }
      }
    public override void write_partial_as_json(JSONHandler handler)
      {
        if (storeValue.in_known_list)
          {
            switch (storeValue.list_value)
              {
                case TypeValueKnownValues.Value_AlpineSkiingMensDownhill:
                    handler.string_value("AlpineSkiingMensDownhill");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensSuperG:
                    handler.string_value("AlpineSkiingMensSuperG");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensGiantSlalom:
                    handler.string_value("AlpineSkiingMensGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensSlalom:
                    handler.string_value("AlpineSkiingMensSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMensCombined:
                    handler.string_value("AlpineSkiingMensCombined");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensDownhill:
                    handler.string_value("AlpineSkiingWomensDownhill");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensSuperG:
                    handler.string_value("AlpineSkiingWomensSuperG");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensGiantSlalom:
                    handler.string_value("AlpineSkiingWomensGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensSlalom:
                    handler.string_value("AlpineSkiingWomensSlalom");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingWomensCombined:
                    handler.string_value("AlpineSkiingWomensCombined");
                    break;
                case TypeValueKnownValues.Value_AlpineSkiingMixedTeam:
                    handler.string_value("AlpineSkiingMixedTeam");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensIndividual:
                    handler.string_value("BiathlonMensIndividual");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensSprint:
                    handler.string_value("BiathlonMensSprint");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensPursuit:
                    handler.string_value("BiathlonMensPursuit");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensMassStart:
                    handler.string_value("BiathlonMensMassStart");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensRelay:
                    handler.string_value("BiathlonMensRelay");
                    break;
                case TypeValueKnownValues.Value_BiathlonMensMilitaryPatrol:
                    handler.string_value("BiathlonMensMilitaryPatrol");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensIndividual:
                    handler.string_value("BiathlonWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensSprint:
                    handler.string_value("BiathlonWomensSprint");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensPursuit:
                    handler.string_value("BiathlonWomensPursuit");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensMassStart:
                    handler.string_value("BiathlonWomensMassStart");
                    break;
                case TypeValueKnownValues.Value_BiathlonWomensRelay:
                    handler.string_value("BiathlonWomensRelay");
                    break;
                case TypeValueKnownValues.Value_BiathlonMixedRelay:
                    handler.string_value("BiathlonMixedRelay");
                    break;
                case TypeValueKnownValues.Value_BobsleighMensTwo:
                    handler.string_value("BobsleighMensTwo");
                    break;
                case TypeValueKnownValues.Value_BobsleighMensFour:
                    handler.string_value("BobsleighMensFour");
                    break;
                case TypeValueKnownValues.Value_BobsleighWomensTwo:
                    handler.string_value("BobsleighWomensTwo");
                    break;
                case TypeValueKnownValues.Value_BobsleighWomensMonobob:
                    handler.string_value("BobsleighWomensMonobob");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens10KMClassical:
                    handler.string_value("CrossCountrySkiingMens10KMClassical");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens15KMClassical:
                    handler.string_value("CrossCountrySkiingMens15KMClassical");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens18KM:
                    handler.string_value("CrossCountrySkiingMens18KM");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens30KMSkiathlon:
                    handler.string_value("CrossCountrySkiingMens30KMSkiathlon");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens50KMFreestyle:
                    handler.string_value("CrossCountrySkiingMens50KMFreestyle");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens4X10KMRelay:
                    handler.string_value("CrossCountrySkiingMens4X10KMRelay");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMens2X10KMPursuit:
                    handler.string_value("CrossCountrySkiingMens2X10KMPursuit");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMensSprint:
                    handler.string_value("CrossCountrySkiingMensSprint");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingMensTeamSprint:
                    handler.string_value("CrossCountrySkiingMensTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens5KM:
                    handler.string_value("CrossCountrySkiingWomens5KM");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens10KMClassical:
                    handler.string_value("CrossCountrySkiingWomens10KMClassical");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens15KMSkiathlon:
                    handler.string_value("CrossCountrySkiingWomens15KMSkiathlon");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens20KM:
                    handler.string_value("CrossCountrySkiingWomens20KM");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens30KMFreestyle:
                    handler.string_value("CrossCountrySkiingWomens30KMFreestyle");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens4X5KMRelay:
                    handler.string_value("CrossCountrySkiingWomens4X5KMRelay");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomens2X5KMPursuit:
                    handler.string_value("CrossCountrySkiingWomens2X5KMPursuit");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomensSprint:
                    handler.string_value("CrossCountrySkiingWomensSprint");
                    break;
                case TypeValueKnownValues.Value_CrossCountrySkiingWomensTeamSprint:
                    handler.string_value("CrossCountrySkiingWomensTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CurlingMens:
                    handler.string_value("CurlingMens");
                    break;
                case TypeValueKnownValues.Value_CurlingWomens:
                    handler.string_value("CurlingWomens");
                    break;
                case TypeValueKnownValues.Value_CurlingMixedDoubles:
                    handler.string_value("CurlingMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingMensSingles:
                    handler.string_value("FigureSkatingMensSingles");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingWomensSingles:
                    handler.string_value("FigureSkatingWomensSingles");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingPair:
                    handler.string_value("FigureSkatingPair");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingIceDancing:
                    handler.string_value("FigureSkatingIceDancing");
                    break;
                case TypeValueKnownValues.Value_FigureSkatingTeamTrophy:
                    handler.string_value("FigureSkatingTeamTrophy");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensAerials:
                    handler.string_value("FreestyleSkiingMensAerials");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensHalfpipe:
                    handler.string_value("FreestyleSkiingMensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensMoguls:
                    handler.string_value("FreestyleSkiingMensMoguls");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensSlopestyle:
                    handler.string_value("FreestyleSkiingMensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensSkiCross:
                    handler.string_value("FreestyleSkiingMensSkiCross");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMensBigAir:
                    handler.string_value("FreestyleSkiingMensBigAir");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensAerials:
                    handler.string_value("FreestyleSkiingWomensAerials");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensHalfpipe:
                    handler.string_value("FreestyleSkiingWomensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensMoguls:
                    handler.string_value("FreestyleSkiingWomensMoguls");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensSlopestyle:
                    handler.string_value("FreestyleSkiingWomensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensSkiCross:
                    handler.string_value("FreestyleSkiingWomensSkiCross");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingWomensBigAir:
                    handler.string_value("FreestyleSkiingWomensBigAir");
                    break;
                case TypeValueKnownValues.Value_FreestyleSkiingMixedTeamAerials:
                    handler.string_value("FreestyleSkiingMixedTeamAerials");
                    break;
                case TypeValueKnownValues.Value_IceHockeyMens:
                    handler.string_value("IceHockeyMens");
                    break;
                case TypeValueKnownValues.Value_IceHockeyWomens:
                    handler.string_value("IceHockeyWomens");
                    break;
                case TypeValueKnownValues.Value_LugeMensSingles:
                    handler.string_value("LugeMensSingles");
                    break;
                case TypeValueKnownValues.Value_LugeWomensSingles:
                    handler.string_value("LugeWomensSingles");
                    break;
                case TypeValueKnownValues.Value_LugeDoubles:
                    handler.string_value("LugeDoubles");
                    break;
                case TypeValueKnownValues.Value_LugeTeamRelay:
                    handler.string_value("LugeTeamRelay");
                    break;
                case TypeValueKnownValues.Value_NordicCombinedIndividualLargeHill10KM:
                    handler.string_value("NordicCombinedIndividualLargeHill10KM");
                    break;
                case TypeValueKnownValues.Value_NordicCombinedIndividualNormalHill10KM:
                    handler.string_value("NordicCombinedIndividualNormalHill10KM");
                    break;
                case TypeValueKnownValues.Value_NordicCombinedTeamLargeHill4X5KM:
                    handler.string_value("NordicCombinedTeamLargeHill4X5KM");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens500M:
                    handler.string_value("ShortTrackSpeedSkatingMens500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1000M:
                    handler.string_value("ShortTrackSpeedSkatingMens1000M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens1500M:
                    handler.string_value("ShortTrackSpeedSkatingMens1500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMens5000MRelay:
                    handler.string_value("ShortTrackSpeedSkatingMens5000MRelay");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens500M:
                    handler.string_value("ShortTrackSpeedSkatingWomens500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1000M:
                    handler.string_value("ShortTrackSpeedSkatingWomens1000M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens1500M:
                    handler.string_value("ShortTrackSpeedSkatingWomens1500M");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingWomens3000MRelay:
                    handler.string_value("ShortTrackSpeedSkatingWomens3000MRelay");
                    break;
                case TypeValueKnownValues.Value_ShortTrackSpeedSkatingMixed2000MRelay:
                    handler.string_value("ShortTrackSpeedSkatingMixed2000MRelay");
                    break;
                case TypeValueKnownValues.Value_SkeletonMens:
                    handler.string_value("SkeletonMens");
                    break;
                case TypeValueKnownValues.Value_SkeletonWomens:
                    handler.string_value("SkeletonWomens");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMensIndividualNormalHill:
                    handler.string_value("SkiJumpingMensIndividualNormalHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMensIndividualLargeHill:
                    handler.string_value("SkiJumpingMensIndividualLargeHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMensTeamLargeHill:
                    handler.string_value("SkiJumpingMensTeamLargeHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingWomensIndividualNormalHill:
                    handler.string_value("SkiJumpingWomensIndividualNormalHill");
                    break;
                case TypeValueKnownValues.Value_SkiJumpingMixedTeamNormalHill:
                    handler.string_value("SkiJumpingMixedTeamNormalHill");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensParallelSlalom:
                    handler.string_value("SnowboardingMensParallelSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensParallelGiantSlalom:
                    handler.string_value("SnowboardingMensParallelGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensHalfpipe:
                    handler.string_value("SnowboardingMensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensSlopestyle:
                    handler.string_value("SnowboardingMensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensSnowboardCross:
                    handler.string_value("SnowboardingMensSnowboardCross");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMensBigAir:
                    handler.string_value("SnowboardingMensBigAir");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensParallelSlalom:
                    handler.string_value("SnowboardingWomensParallelSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensParallelGiantSlalom:
                    handler.string_value("SnowboardingWomensParallelGiantSlalom");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensHalfpipe:
                    handler.string_value("SnowboardingWomensHalfpipe");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensSlopestyle:
                    handler.string_value("SnowboardingWomensSlopestyle");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensSnowboardCross:
                    handler.string_value("SnowboardingWomensSnowboardCross");
                    break;
                case TypeValueKnownValues.Value_SnowboardingWomensBigAir:
                    handler.string_value("SnowboardingWomensBigAir");
                    break;
                case TypeValueKnownValues.Value_SnowboardingMixedTeamSnowboardCross:
                    handler.string_value("SnowboardingMixedTeamSnowboardCross");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens500M:
                    handler.string_value("SpeedSkatingMens500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens1000M:
                    handler.string_value("SpeedSkatingMens1000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens1500M:
                    handler.string_value("SpeedSkatingMens1500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens5000M:
                    handler.string_value("SpeedSkatingMens5000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMens10000M:
                    handler.string_value("SpeedSkatingMens10000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMensTeamPursuit:
                    handler.string_value("SpeedSkatingMensTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMensMassStart:
                    handler.string_value("SpeedSkatingMensMassStart");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingMensAllRound:
                    handler.string_value("SpeedSkatingMensAllRound");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens500M:
                    handler.string_value("SpeedSkatingWomens500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens1000M:
                    handler.string_value("SpeedSkatingWomens1000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens1500M:
                    handler.string_value("SpeedSkatingWomens1500M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens3000M:
                    handler.string_value("SpeedSkatingWomens3000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomens5000M:
                    handler.string_value("SpeedSkatingWomens5000M");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomensTeamPursuit:
                    handler.string_value("SpeedSkatingWomensTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_SpeedSkatingWomensMassStart:
                    handler.string_value("SpeedSkatingWomensMassStart");
                    break;
                case TypeValueKnownValues.Value_ArcheryMensIndividual:
                    handler.string_value("ArcheryMensIndividual");
                    break;
                case TypeValueKnownValues.Value_ArcheryMensTeam:
                    handler.string_value("ArcheryMensTeam");
                    break;
                case TypeValueKnownValues.Value_ArcheryWomensIndividual:
                    handler.string_value("ArcheryWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_ArcheryWomensTeam:
                    handler.string_value("ArcheryWomensTeam");
                    break;
                case TypeValueKnownValues.Value_ArcheryMixedTeam:
                    handler.string_value("ArcheryMixedTeam");
                    break;
                case TypeValueKnownValues.Value_ArtisticSwimmingWomensDuet:
                    handler.string_value("ArtisticSwimmingWomensDuet");
                    break;
                case TypeValueKnownValues.Value_ArtisticSwimmingWomensTeam:
                    handler.string_value("ArtisticSwimmingWomensTeam");
                    break;
                case TypeValueKnownValues.Value_ArtisticSwimmingWomensSolo:
                    handler.string_value("ArtisticSwimmingWomensSolo");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens100M:
                    handler.string_value("AthleticsMens100M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens200M:
                    handler.string_value("AthleticsMens200M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens400M:
                    handler.string_value("AthleticsMens400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens800M:
                    handler.string_value("AthleticsMens800M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens1500M:
                    handler.string_value("AthleticsMens1500M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens5000M:
                    handler.string_value("AthleticsMens5000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens10000M:
                    handler.string_value("AthleticsMens10000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHurdles110M:
                    handler.string_value("AthleticsMensHurdles110M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHurdles400M:
                    handler.string_value("AthleticsMensHurdles400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensSteeplechase3000M:
                    handler.string_value("AthleticsMensSteeplechase3000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens4X100MRelay:
                    handler.string_value("AthleticsMens4X100MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsMens4X400MRelay:
                    handler.string_value("AthleticsMens4X400MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensMarathon:
                    handler.string_value("AthleticsMensMarathon");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensWalk20KM:
                    handler.string_value("AthleticsMensWalk20KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensWalk50KM:
                    handler.string_value("AthleticsMensWalk50KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHighJump:
                    handler.string_value("AthleticsMensHighJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensPoleVault:
                    handler.string_value("AthleticsMensPoleVault");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensLongJump:
                    handler.string_value("AthleticsMensLongJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensTripleJump:
                    handler.string_value("AthleticsMensTripleJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensShotPut:
                    handler.string_value("AthleticsMensShotPut");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensDiscusThrow:
                    handler.string_value("AthleticsMensDiscusThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensHammerThrow:
                    handler.string_value("AthleticsMensHammerThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensJavelinThrow:
                    handler.string_value("AthleticsMensJavelinThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsMensDecathlon:
                    handler.string_value("AthleticsMensDecathlon");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens100M:
                    handler.string_value("AthleticsWomens100M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens200M:
                    handler.string_value("AthleticsWomens200M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens400M:
                    handler.string_value("AthleticsWomens400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens800M:
                    handler.string_value("AthleticsWomens800M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens1500M:
                    handler.string_value("AthleticsWomens1500M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens3000M:
                    handler.string_value("AthleticsWomens3000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens5000M:
                    handler.string_value("AthleticsWomens5000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens10000M:
                    handler.string_value("AthleticsWomens10000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHurdles100M:
                    handler.string_value("AthleticsWomensHurdles100M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomenshurdles400M:
                    handler.string_value("AthleticsWomenshurdles400M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensSteeplechase3000M:
                    handler.string_value("AthleticsWomensSteeplechase3000M");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens4X100MRelay:
                    handler.string_value("AthleticsWomens4X100MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomens4X400MRelay:
                    handler.string_value("AthleticsWomens4X400MRelay");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensMarathon:
                    handler.string_value("AthleticsWomensMarathon");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensWalk10KM:
                    handler.string_value("AthleticsWomensWalk10KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensWalk20KM:
                    handler.string_value("AthleticsWomensWalk20KM");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHighJump:
                    handler.string_value("AthleticsWomensHighJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensPoleVault:
                    handler.string_value("AthleticsWomensPoleVault");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensLongJump:
                    handler.string_value("AthleticsWomensLongJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensTripleJump:
                    handler.string_value("AthleticsWomensTripleJump");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensShotPut:
                    handler.string_value("AthleticsWomensShotPut");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensDiscusThrow:
                    handler.string_value("AthleticsWomensDiscusThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHammerThrow:
                    handler.string_value("AthleticsWomensHammerThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensJavelinThrow:
                    handler.string_value("AthleticsWomensJavelinThrow");
                    break;
                case TypeValueKnownValues.Value_AthleticsWomensHeptathlon:
                    handler.string_value("AthleticsWomensHeptathlon");
                    break;
                case TypeValueKnownValues.Value_AthleticsMixed4X400MRelay:
                    handler.string_value("AthleticsMixed4X400MRelay");
                    break;
                case TypeValueKnownValues.Value_BadmintonMensSingles:
                    handler.string_value("BadmintonMensSingles");
                    break;
                case TypeValueKnownValues.Value_BadmintonMensDoubles:
                    handler.string_value("BadmintonMensDoubles");
                    break;
                case TypeValueKnownValues.Value_BadmintonWomensSingles:
                    handler.string_value("BadmintonWomensSingles");
                    break;
                case TypeValueKnownValues.Value_BadmintonWomensDoubles:
                    handler.string_value("BadmintonWomensDoubles");
                    break;
                case TypeValueKnownValues.Value_BadmintonMixedDoubles:
                    handler.string_value("BadmintonMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_BaseballMens:
                    handler.string_value("BaseballMens");
                    break;
                case TypeValueKnownValues.Value_BasketballMens:
                    handler.string_value("BasketballMens");
                    break;
                case TypeValueKnownValues.Value_BasketballWomens:
                    handler.string_value("BasketballWomens");
                    break;
                case TypeValueKnownValues.Value_BasketballMens3x3:
                    handler.string_value("BasketballMens3x3");
                    break;
                case TypeValueKnownValues.Value_BasketballWomens3x3:
                    handler.string_value("BasketballWomens3x3");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightFlyweight:
                    handler.string_value("BoxingMensLightFlyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensFlyweight:
                    handler.string_value("BoxingMensFlyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensBantamweight:
                    handler.string_value("BoxingMensBantamweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensFeatherweight:
                    handler.string_value("BoxingMensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightweight:
                    handler.string_value("BoxingMensLightweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightWelterweight:
                    handler.string_value("BoxingMensLightWelterweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensWelterweight:
                    handler.string_value("BoxingMensWelterweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightMiddleweight:
                    handler.string_value("BoxingMensLightMiddleweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensMiddleweight:
                    handler.string_value("BoxingMensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensLightHeavyweight:
                    handler.string_value("BoxingMensLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensHeavyweight:
                    handler.string_value("BoxingMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingMensSuperHeavyweight:
                    handler.string_value("BoxingMensSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensFlyweight:
                    handler.string_value("BoxingWomensFlyweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensFeatherweight:
                    handler.string_value("BoxingWomensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensLightweight:
                    handler.string_value("BoxingWomensLightweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensWelterweight:
                    handler.string_value("BoxingWomensWelterweight");
                    break;
                case TypeValueKnownValues.Value_BoxingWomensMiddleweight:
                    handler.string_value("BoxingWomensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSlalomC1:
                    handler.string_value("CanoeingMensSlalomC1");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSlalomC2:
                    handler.string_value("CanoeingMensSlalomC2");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSlalomK1:
                    handler.string_value("CanoeingMensSlalomK1");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC1200M:
                    handler.string_value("CanoeingMensSprintC1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC1500M:
                    handler.string_value("CanoeingMensSprintC1500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC11000M:
                    handler.string_value("CanoeingMensSprintC11000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC2500M:
                    handler.string_value("CanoeingMensSprintC2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintC21000M:
                    handler.string_value("CanoeingMensSprintC21000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK1200M:
                    handler.string_value("CanoeingMensSprintK1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK1500M:
                    handler.string_value("CanoeingMensSprintK1500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK11000M:
                    handler.string_value("CanoeingMensSprintK11000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK2200M:
                    handler.string_value("CanoeingMensSprintK2200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK2500M:
                    handler.string_value("CanoeingMensSprintK2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK21000M:
                    handler.string_value("CanoeingMensSprintK21000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK4500M:
                    handler.string_value("CanoeingMensSprintK4500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingMensSprintK41000M:
                    handler.string_value("CanoeingMensSprintK41000M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSlalomC1:
                    handler.string_value("CanoeingWomensSlalomC1");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSlalomK1:
                    handler.string_value("CanoeingWomensSlalomK1");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintC1200M:
                    handler.string_value("CanoeingWomensSprintC1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintC2500M:
                    handler.string_value("CanoeingWomensSprintC2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK1200M:
                    handler.string_value("CanoeingWomensSprintK1200M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK1500M:
                    handler.string_value("CanoeingWomensSprintK1500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK2500M:
                    handler.string_value("CanoeingWomensSprintK2500M");
                    break;
                case TypeValueKnownValues.Value_CanoeingWomensSprintK4500M:
                    handler.string_value("CanoeingWomensSprintK4500M");
                    break;
                case TypeValueKnownValues.Value_CyclingMensRoadCyclingRoadRace:
                    handler.string_value("CyclingMensRoadCyclingRoadRace");
                    break;
                case TypeValueKnownValues.Value_CyclingMensRoadCyclingTimeTrial:
                    handler.string_value("CyclingMensRoadCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingMensRoadCyclingTeamTimeTrial:
                    handler.string_value("CyclingMensRoadCyclingTeamTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingKeirin:
                    handler.string_value("CyclingMensTrackCyclingKeirin");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingMadison:
                    handler.string_value("CyclingMensTrackCyclingMadison");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingOmnium:
                    handler.string_value("CyclingMensTrackCyclingOmnium");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingPointsRace:
                    handler.string_value("CyclingMensTrackCyclingPointsRace");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualPursuit:
                    handler.string_value("CyclingMensTrackCyclingIndividualPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamPursuit:
                    handler.string_value("CyclingMensTrackCyclingTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingIndividualSprint:
                    handler.string_value("CyclingMensTrackCyclingIndividualSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingTeamSprint:
                    handler.string_value("CyclingMensTrackCyclingTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingMensTrackCyclingTimeTrial:
                    handler.string_value("CyclingMensTrackCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingMensMountainBikingCrossCountry:
                    handler.string_value("CyclingMensMountainBikingCrossCountry");
                    break;
                case TypeValueKnownValues.Value_CyclingMensBMX:
                    handler.string_value("CyclingMensBMX");
                    break;
                case TypeValueKnownValues.Value_CyclingMensBMXRace:
                    handler.string_value("CyclingMensBMXRace");
                    break;
                case TypeValueKnownValues.Value_CyclingMensBMXFreestyle:
                    handler.string_value("CyclingMensBMXFreestyle");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensRoadCyclingRoadRace:
                    handler.string_value("CyclingWomensRoadCyclingRoadRace");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensRoadCyclingTimeTrial:
                    handler.string_value("CyclingWomensRoadCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingKeirin:
                    handler.string_value("CyclingWomensTrackCyclingKeirin");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingMadison:
                    handler.string_value("CyclingWomensTrackCyclingMadison");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingOmnium:
                    handler.string_value("CyclingWomensTrackCyclingOmnium");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingPointsRace:
                    handler.string_value("CyclingWomensTrackCyclingPointsRace");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualPursuit:
                    handler.string_value("CyclingWomensTrackCyclingIndividualPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamPursuit:
                    handler.string_value("CyclingWomensTrackCyclingTeamPursuit");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingIndividualSprint:
                    handler.string_value("CyclingWomensTrackCyclingIndividualSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTeamSprint:
                    handler.string_value("CyclingWomensTrackCyclingTeamSprint");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensTrackCyclingTimeTrial:
                    handler.string_value("CyclingWomensTrackCyclingTimeTrial");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensMountainBikingCrossCountry:
                    handler.string_value("CyclingWomensMountainBikingCrossCountry");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensBMX:
                    handler.string_value("CyclingWomensBMX");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensBMXRace:
                    handler.string_value("CyclingWomensBMXRace");
                    break;
                case TypeValueKnownValues.Value_CyclingWomensBMXFreestyle:
                    handler.string_value("CyclingWomensBMXFreestyle");
                    break;
                case TypeValueKnownValues.Value_DivingMensSpringboard:
                    handler.string_value("DivingMensSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingMensPlatform:
                    handler.string_value("DivingMensPlatform");
                    break;
                case TypeValueKnownValues.Value_DivingMensSynchronizedSpringboard:
                    handler.string_value("DivingMensSynchronizedSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingMensSynchronizedPlatform:
                    handler.string_value("DivingMensSynchronizedPlatform");
                    break;
                case TypeValueKnownValues.Value_DivingWomensSpringboard:
                    handler.string_value("DivingWomensSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingWomensPlatform:
                    handler.string_value("DivingWomensPlatform");
                    break;
                case TypeValueKnownValues.Value_DivingWomensSynchronizedSpringboard:
                    handler.string_value("DivingWomensSynchronizedSpringboard");
                    break;
                case TypeValueKnownValues.Value_DivingWomensSynchronizedPlatform:
                    handler.string_value("DivingWomensSynchronizedPlatform");
                    break;
                case TypeValueKnownValues.Value_EquestrianIndividualDressage:
                    handler.string_value("EquestrianIndividualDressage");
                    break;
                case TypeValueKnownValues.Value_EquestrianTeamDressage:
                    handler.string_value("EquestrianTeamDressage");
                    break;
                case TypeValueKnownValues.Value_EquestrianIndividualEventing:
                    handler.string_value("EquestrianIndividualEventing");
                    break;
                case TypeValueKnownValues.Value_EquestrianTeamEventing:
                    handler.string_value("EquestrianTeamEventing");
                    break;
                case TypeValueKnownValues.Value_EquestrianIndividualJumping:
                    handler.string_value("EquestrianIndividualJumping");
                    break;
                case TypeValueKnownValues.Value_EquestrianTeamJumping:
                    handler.string_value("EquestrianTeamJumping");
                    break;
                case TypeValueKnownValues.Value_FencingMensIndividualEpee:
                    handler.string_value("FencingMensIndividualEpee");
                    break;
                case TypeValueKnownValues.Value_FencingMensTeamEpee:
                    handler.string_value("FencingMensTeamEpee");
                    break;
                case TypeValueKnownValues.Value_FencingMensIndividualFoil:
                    handler.string_value("FencingMensIndividualFoil");
                    break;
                case TypeValueKnownValues.Value_FencingMensTeamFoil:
                    handler.string_value("FencingMensTeamFoil");
                    break;
                case TypeValueKnownValues.Value_FencingMensIndividualSabre:
                    handler.string_value("FencingMensIndividualSabre");
                    break;
                case TypeValueKnownValues.Value_FencingMensTeamSabre:
                    handler.string_value("FencingMensTeamSabre");
                    break;
                case TypeValueKnownValues.Value_FencingWomensIndividualEpee:
                    handler.string_value("FencingWomensIndividualEpee");
                    break;
                case TypeValueKnownValues.Value_FencingWomensTeamEpee:
                    handler.string_value("FencingWomensTeamEpee");
                    break;
                case TypeValueKnownValues.Value_FencingWomensIndividualFoil:
                    handler.string_value("FencingWomensIndividualFoil");
                    break;
                case TypeValueKnownValues.Value_FencingWomensTeamFoil:
                    handler.string_value("FencingWomensTeamFoil");
                    break;
                case TypeValueKnownValues.Value_FencingWomensIndividualSabre:
                    handler.string_value("FencingWomensIndividualSabre");
                    break;
                case TypeValueKnownValues.Value_FencingWomensTeamSabre:
                    handler.string_value("FencingWomensTeamSabre");
                    break;
                case TypeValueKnownValues.Value_FieldHockeyMens:
                    handler.string_value("FieldHockeyMens");
                    break;
                case TypeValueKnownValues.Value_FieldHockeyWomens:
                    handler.string_value("FieldHockeyWomens");
                    break;
                case TypeValueKnownValues.Value_FootballMens:
                    handler.string_value("FootballMens");
                    break;
                case TypeValueKnownValues.Value_FootballWomens:
                    handler.string_value("FootballWomens");
                    break;
                case TypeValueKnownValues.Value_GolfMensIndividual:
                    handler.string_value("GolfMensIndividual");
                    break;
                case TypeValueKnownValues.Value_GolfWomensIndividual:
                    handler.string_value("GolfWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticTeamAllAround:
                    handler.string_value("GymnasticsMensArtisticTeamAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticIndividualAllAround:
                    handler.string_value("GymnasticsMensArtisticIndividualAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticFloorExercise:
                    handler.string_value("GymnasticsMensArtisticFloorExercise");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticHorizontalBar:
                    handler.string_value("GymnasticsMensArtisticHorizontalBar");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticParallelBars:
                    handler.string_value("GymnasticsMensArtisticParallelBars");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticPommelHorse:
                    handler.string_value("GymnasticsMensArtisticPommelHorse");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticRings:
                    handler.string_value("GymnasticsMensArtisticRings");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensArtisticVault:
                    handler.string_value("GymnasticsMensArtisticVault");
                    break;
                case TypeValueKnownValues.Value_GymnasticsMensTrampolineIndividual:
                    handler.string_value("GymnasticsMensTrampolineIndividual");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticTeamAllAround:
                    handler.string_value("GymnasticsWomensArtisticTeamAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticIndividualAllAround:
                    handler.string_value("GymnasticsWomensArtisticIndividualAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticBalanceBeam:
                    handler.string_value("GymnasticsWomensArtisticBalanceBeam");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticFloorExercise:
                    handler.string_value("GymnasticsWomensArtisticFloorExercise");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticUnevenBars:
                    handler.string_value("GymnasticsWomensArtisticUnevenBars");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensArtisticVault:
                    handler.string_value("GymnasticsWomensArtisticVault");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensRhythmicIndividualAllAround:
                    handler.string_value("GymnasticsWomensRhythmicIndividualAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensRhythmicGroupAllAround:
                    handler.string_value("GymnasticsWomensRhythmicGroupAllAround");
                    break;
                case TypeValueKnownValues.Value_GymnasticsWomensTrampolineIndividual:
                    handler.string_value("GymnasticsWomensTrampolineIndividual");
                    break;
                case TypeValueKnownValues.Value_HandballMens:
                    handler.string_value("HandballMens");
                    break;
                case TypeValueKnownValues.Value_HandballWomens:
                    handler.string_value("HandballWomens");
                    break;
                case TypeValueKnownValues.Value_JudoMensExtraLightweight:
                    handler.string_value("JudoMensExtraLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHalfLightweight:
                    handler.string_value("JudoMensHalfLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensLightweight:
                    handler.string_value("JudoMensLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHalfMiddleweight:
                    handler.string_value("JudoMensHalfMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensMiddleweight:
                    handler.string_value("JudoMensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHalfHeavyweight:
                    handler.string_value("JudoMensHalfHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoMensHeavyweight:
                    handler.string_value("JudoMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensExtraLightweight:
                    handler.string_value("JudoWomensExtraLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHalfLightweight:
                    handler.string_value("JudoWomensHalfLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensLightweight:
                    handler.string_value("JudoWomensLightweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHalfMiddleweight:
                    handler.string_value("JudoWomensHalfMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensMiddleweight:
                    handler.string_value("JudoWomensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHalfHeavyweight:
                    handler.string_value("JudoWomensHalfHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoWomensHeavyweight:
                    handler.string_value("JudoWomensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_JudoMixedTeam:
                    handler.string_value("JudoMixedTeam");
                    break;
                case TypeValueKnownValues.Value_KarateMens67Kg:
                    handler.string_value("KarateMens67Kg");
                    break;
                case TypeValueKnownValues.Value_KarateMens75Kg:
                    handler.string_value("KarateMens75Kg");
                    break;
                case TypeValueKnownValues.Value_KarateMens75KgPlus:
                    handler.string_value("KarateMens75KgPlus");
                    break;
                case TypeValueKnownValues.Value_KarateMensKata:
                    handler.string_value("KarateMensKata");
                    break;
                case TypeValueKnownValues.Value_KarateWomens55Kg:
                    handler.string_value("KarateWomens55Kg");
                    break;
                case TypeValueKnownValues.Value_KarateWomens61Kg:
                    handler.string_value("KarateWomens61Kg");
                    break;
                case TypeValueKnownValues.Value_KarateWomens61KgPlus:
                    handler.string_value("KarateWomens61KgPlus");
                    break;
                case TypeValueKnownValues.Value_KarateWomensKata:
                    handler.string_value("KarateWomensKata");
                    break;
                case TypeValueKnownValues.Value_ModernPentathlonMens:
                    handler.string_value("ModernPentathlonMens");
                    break;
                case TypeValueKnownValues.Value_ModernPentathlonWomens:
                    handler.string_value("ModernPentathlonWomens");
                    break;
                case TypeValueKnownValues.Value_RowingMensSingleSculls:
                    handler.string_value("RowingMensSingleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensDoubleSculls:
                    handler.string_value("RowingMensDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensQuadrupleSculls:
                    handler.string_value("RowingMensQuadrupleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxlessPair:
                    handler.string_value("RowingMensCoxlessPair");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxedPair:
                    handler.string_value("RowingMensCoxedPair");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxlessFour:
                    handler.string_value("RowingMensCoxlessFour");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxedFour:
                    handler.string_value("RowingMensCoxedFour");
                    break;
                case TypeValueKnownValues.Value_RowingMensCoxedEight:
                    handler.string_value("RowingMensCoxedEight");
                    break;
                case TypeValueKnownValues.Value_RowingMensLightweightDoubleSculls:
                    handler.string_value("RowingMensLightweightDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingMensLightweightCoxlessFour:
                    handler.string_value("RowingMensLightweightCoxlessFour");
                    break;
                case TypeValueKnownValues.Value_RowingWomensSingleSculls:
                    handler.string_value("RowingWomensSingleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingWomensDoubleSculls:
                    handler.string_value("RowingWomensDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingWomensQuadrupleSculls:
                    handler.string_value("RowingWomensQuadrupleSculls");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxlessPair:
                    handler.string_value("RowingWomensCoxlessPair");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxlessFour:
                    handler.string_value("RowingWomensCoxlessFour");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxedFour:
                    handler.string_value("RowingWomensCoxedFour");
                    break;
                case TypeValueKnownValues.Value_RowingWomensCoxedEight:
                    handler.string_value("RowingWomensCoxedEight");
                    break;
                case TypeValueKnownValues.Value_RowingWomensLightweightDoubleSculls:
                    handler.string_value("RowingWomensLightweightDoubleSculls");
                    break;
                case TypeValueKnownValues.Value_RugbyMens:
                    handler.string_value("RugbyMens");
                    break;
                case TypeValueKnownValues.Value_RugbyWomens:
                    handler.string_value("RugbyWomens");
                    break;
                case TypeValueKnownValues.Value_SailingMensRSX:
                    handler.string_value("SailingMensRSX");
                    break;
                case TypeValueKnownValues.Value_SailingMensLaser:
                    handler.string_value("SailingMensLaser");
                    break;
                case TypeValueKnownValues.Value_SailingMensFinn:
                    handler.string_value("SailingMensFinn");
                    break;
                case TypeValueKnownValues.Value_SailingMens470:
                    handler.string_value("SailingMens470");
                    break;
                case TypeValueKnownValues.Value_SailingMens49er:
                    handler.string_value("SailingMens49er");
                    break;
                case TypeValueKnownValues.Value_SailingMens49erFX:
                    handler.string_value("SailingMens49erFX");
                    break;
                case TypeValueKnownValues.Value_SailingMensStar:
                    handler.string_value("SailingMensStar");
                    break;
                case TypeValueKnownValues.Value_SailingWomensRSX:
                    handler.string_value("SailingWomensRSX");
                    break;
                case TypeValueKnownValues.Value_SailingWomensLaser:
                    handler.string_value("SailingWomensLaser");
                    break;
                case TypeValueKnownValues.Value_SailingWomensLaserRadial:
                    handler.string_value("SailingWomensLaserRadial");
                    break;
                case TypeValueKnownValues.Value_SailingWomens470:
                    handler.string_value("SailingWomens470");
                    break;
                case TypeValueKnownValues.Value_SailingWomens49erFX:
                    handler.string_value("SailingWomens49erFX");
                    break;
                case TypeValueKnownValues.Value_SailingWomensElliott6M:
                    handler.string_value("SailingWomensElliott6M");
                    break;
                case TypeValueKnownValues.Value_SailingWomensYngling:
                    handler.string_value("SailingWomensYngling");
                    break;
                case TypeValueKnownValues.Value_SailingMixedNacra17:
                    handler.string_value("SailingMixedNacra17");
                    break;
                case TypeValueKnownValues.Value_SailingMixed49erFX:
                    handler.string_value("SailingMixed49erFX");
                    break;
                case TypeValueKnownValues.Value_SailingMixedFinn:
                    handler.string_value("SailingMixedFinn");
                    break;
                case TypeValueKnownValues.Value_SailingMixedTornado:
                    handler.string_value("SailingMixedTornado");
                    break;
                case TypeValueKnownValues.Value_ShootingMensAirPistol10M:
                    handler.string_value("ShootingMensAirPistol10M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensAirRifle10M:
                    handler.string_value("ShootingMensAirRifle10M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensRapidFirePistol25M:
                    handler.string_value("ShootingMensRapidFirePistol25M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensPistol50M:
                    handler.string_value("ShootingMensPistol50M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensRifleProne50M:
                    handler.string_value("ShootingMensRifleProne50M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensRifleThreePositions50M:
                    handler.string_value("ShootingMensRifleThreePositions50M");
                    break;
                case TypeValueKnownValues.Value_ShootingMensSkeet:
                    handler.string_value("ShootingMensSkeet");
                    break;
                case TypeValueKnownValues.Value_ShootingMensTrap:
                    handler.string_value("ShootingMensTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingMensDoubleTrap:
                    handler.string_value("ShootingMensDoubleTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingMens10MRunningTarget:
                    handler.string_value("ShootingMens10MRunningTarget");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensAirPistol10M:
                    handler.string_value("ShootingWomensAirPistol10M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensAirRifle10M:
                    handler.string_value("ShootingWomensAirRifle10M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensPistol25M:
                    handler.string_value("ShootingWomensPistol25M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensRifleThreePositions50M:
                    handler.string_value("ShootingWomensRifleThreePositions50M");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensSkeet:
                    handler.string_value("ShootingWomensSkeet");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensTrap:
                    handler.string_value("ShootingWomensTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingWomensDoubleTrap:
                    handler.string_value("ShootingWomensDoubleTrap");
                    break;
                case TypeValueKnownValues.Value_ShootingMixedAirPistolTeam:
                    handler.string_value("ShootingMixedAirPistolTeam");
                    break;
                case TypeValueKnownValues.Value_ShootingMixedAirRifleTeam:
                    handler.string_value("ShootingMixedAirRifleTeam");
                    break;
                case TypeValueKnownValues.Value_ShootingMixedTrapTeam:
                    handler.string_value("ShootingMixedTrapTeam");
                    break;
                case TypeValueKnownValues.Value_SkateboardingMensPark:
                    handler.string_value("SkateboardingMensPark");
                    break;
                case TypeValueKnownValues.Value_SkateboardingMensStreet:
                    handler.string_value("SkateboardingMensStreet");
                    break;
                case TypeValueKnownValues.Value_SkateboardingWomensPark:
                    handler.string_value("SkateboardingWomensPark");
                    break;
                case TypeValueKnownValues.Value_SkateboardingWomensStreet:
                    handler.string_value("SkateboardingWomensStreet");
                    break;
                case TypeValueKnownValues.Value_SoftballWomens:
                    handler.string_value("SoftballWomens");
                    break;
                case TypeValueKnownValues.Value_SportClimbingMensCombined:
                    handler.string_value("SportClimbingMensCombined");
                    break;
                case TypeValueKnownValues.Value_SportClimbingWomensCombined:
                    handler.string_value("SportClimbingWomensCombined");
                    break;
                case TypeValueKnownValues.Value_SportSurfingMens:
                    handler.string_value("SportSurfingMens");
                    break;
                case TypeValueKnownValues.Value_SportSurfingWomens:
                    handler.string_value("SportSurfingWomens");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle50M:
                    handler.string_value("SwimmingMensFreestyle50M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle100M:
                    handler.string_value("SwimmingMensFreestyle100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle200M:
                    handler.string_value("SwimmingMensFreestyle200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle400M:
                    handler.string_value("SwimmingMensFreestyle400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle800M:
                    handler.string_value("SwimmingMensFreestyle800M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensFreestyle1500M:
                    handler.string_value("SwimmingMensFreestyle1500M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBackstroke100M:
                    handler.string_value("SwimmingMensBackstroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBackstroke200M:
                    handler.string_value("SwimmingMensBackstroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBreaststroke100M:
                    handler.string_value("SwimmingMensBreaststroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensBreaststroke200M:
                    handler.string_value("SwimmingMensBreaststroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensButterfly100M:
                    handler.string_value("SwimmingMensButterfly100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensButterfly200M:
                    handler.string_value("SwimmingMensButterfly200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensIndividualMedley200M:
                    handler.string_value("SwimmingMensIndividualMedley200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensIndividualMedley400M:
                    handler.string_value("SwimmingMensIndividualMedley400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingMens4X100MFreestyleRelay:
                    handler.string_value("SwimmingMens4X100MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingMens4X200MFreestyleRelay:
                    handler.string_value("SwimmingMens4X200MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingMens4X100MMedleyRelay:
                    handler.string_value("SwimmingMens4X100MMedleyRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingMensOpenWater10KM:
                    handler.string_value("SwimmingMensOpenWater10KM");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle50M:
                    handler.string_value("SwimmingWomensFreestyle50M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle100M:
                    handler.string_value("SwimmingWomensFreestyle100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle200M:
                    handler.string_value("SwimmingWomensFreestyle200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle400M:
                    handler.string_value("SwimmingWomensFreestyle400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle800M:
                    handler.string_value("SwimmingWomensFreestyle800M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensFreestyle1500M:
                    handler.string_value("SwimmingWomensFreestyle1500M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBackstroke100M:
                    handler.string_value("SwimmingWomensBackstroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBackstroke200M:
                    handler.string_value("SwimmingWomensBackstroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBreaststroke100M:
                    handler.string_value("SwimmingWomensBreaststroke100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensBreaststroke200M:
                    handler.string_value("SwimmingWomensBreaststroke200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensButterfly100M:
                    handler.string_value("SwimmingWomensButterfly100M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensButterfly200M:
                    handler.string_value("SwimmingWomensButterfly200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensIndividualMedley200M:
                    handler.string_value("SwimmingWomensIndividualMedley200M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensindividualMedley400M:
                    handler.string_value("SwimmingWomensindividualMedley400M");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomens4X100MFreestyleRelay:
                    handler.string_value("SwimmingWomens4X100MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomens4X200MFreestyleRelay:
                    handler.string_value("SwimmingWomens4X200MFreestyleRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomens4X100MMedleyRelay:
                    handler.string_value("SwimmingWomens4X100MMedleyRelay");
                    break;
                case TypeValueKnownValues.Value_SwimmingWomensOpenWater10KM:
                    handler.string_value("SwimmingWomensOpenWater10KM");
                    break;
                case TypeValueKnownValues.Value_SwimmingMixed4X100MMedleyRelay:
                    handler.string_value("SwimmingMixed4X100MMedleyRelay");
                    break;
                case TypeValueKnownValues.Value_TableTennisMensSingles:
                    handler.string_value("TableTennisMensSingles");
                    break;
                case TypeValueKnownValues.Value_TableTennisMensTeam:
                    handler.string_value("TableTennisMensTeam");
                    break;
                case TypeValueKnownValues.Value_TableTennisWomensSingles:
                    handler.string_value("TableTennisWomensSingles");
                    break;
                case TypeValueKnownValues.Value_TableTennisWomensTeam:
                    handler.string_value("TableTennisWomensTeam");
                    break;
                case TypeValueKnownValues.Value_TableTennisMixedDoubles:
                    handler.string_value("TableTennisMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensFlyweight:
                    handler.string_value("TaekwondoMensFlyweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensFeatherweight:
                    handler.string_value("TaekwondoMensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensWelterweight:
                    handler.string_value("TaekwondoMensWelterweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoMensHeavyweight:
                    handler.string_value("TaekwondoMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensFlyweight:
                    handler.string_value("TaekwondoWomensFlyweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensFeatherweight:
                    handler.string_value("TaekwondoWomensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensWelterweight:
                    handler.string_value("TaekwondoWomensWelterweight");
                    break;
                case TypeValueKnownValues.Value_TaekwondoWomensHeavyweight:
                    handler.string_value("TaekwondoWomensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_TennisMensSingles:
                    handler.string_value("TennisMensSingles");
                    break;
                case TypeValueKnownValues.Value_TennisMensDoubles:
                    handler.string_value("TennisMensDoubles");
                    break;
                case TypeValueKnownValues.Value_TennisWomensSingles:
                    handler.string_value("TennisWomensSingles");
                    break;
                case TypeValueKnownValues.Value_TennisWomensDoubles:
                    handler.string_value("TennisWomensDoubles");
                    break;
                case TypeValueKnownValues.Value_TennisMixedDoubles:
                    handler.string_value("TennisMixedDoubles");
                    break;
                case TypeValueKnownValues.Value_TriathlonMensIndividual:
                    handler.string_value("TriathlonMensIndividual");
                    break;
                case TypeValueKnownValues.Value_TriathlonWomensIndividual:
                    handler.string_value("TriathlonWomensIndividual");
                    break;
                case TypeValueKnownValues.Value_TriathlonMixedRelay:
                    handler.string_value("TriathlonMixedRelay");
                    break;
                case TypeValueKnownValues.Value_VolleyballMensIndoor:
                    handler.string_value("VolleyballMensIndoor");
                    break;
                case TypeValueKnownValues.Value_VolleyballMensBeach:
                    handler.string_value("VolleyballMensBeach");
                    break;
                case TypeValueKnownValues.Value_VolleyballWomensIndoor:
                    handler.string_value("VolleyballWomensIndoor");
                    break;
                case TypeValueKnownValues.Value_VolleyballWomensBeach:
                    handler.string_value("VolleyballWomensBeach");
                    break;
                case TypeValueKnownValues.Value_WaterPoloMens:
                    handler.string_value("WaterPoloMens");
                    break;
                case TypeValueKnownValues.Value_WaterPoloWomens:
                    handler.string_value("WaterPoloWomens");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensFlyweight:
                    handler.string_value("WeightliftingMensFlyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensBantamweight:
                    handler.string_value("WeightliftingMensBantamweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensFeatherweight:
                    handler.string_value("WeightliftingMensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensLightweight:
                    handler.string_value("WeightliftingMensLightweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensMiddleweight:
                    handler.string_value("WeightliftingMensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensLightHeavyweight:
                    handler.string_value("WeightliftingMensLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensMiddleHeavyweight:
                    handler.string_value("WeightliftingMensMiddleHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensFirstHeavyweight:
                    handler.string_value("WeightliftingMensFirstHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensHeavyweight:
                    handler.string_value("WeightliftingMensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMensSuperHeavyweight:
                    handler.string_value("WeightliftingMensSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens61Kg:
                    handler.string_value("WeightliftingMens61Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens67Kg:
                    handler.string_value("WeightliftingMens67Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens73Kg:
                    handler.string_value("WeightliftingMens73Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens81Kg:
                    handler.string_value("WeightliftingMens81Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens96Kg:
                    handler.string_value("WeightliftingMens96Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens109Kg:
                    handler.string_value("WeightliftingMens109Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingMens109KgPlus:
                    handler.string_value("WeightliftingMens109KgPlus");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensFlyweight:
                    handler.string_value("WeightliftingWomensFlyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensFeatherweight:
                    handler.string_value("WeightliftingWomensFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensLightweight:
                    handler.string_value("WeightliftingWomensLightweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensMiddleweight:
                    handler.string_value("WeightliftingWomensMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensLightHeavyweight:
                    handler.string_value("WeightliftingWomensLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensHeavyweight:
                    handler.string_value("WeightliftingWomensHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomensSuperHeavyweight:
                    handler.string_value("WeightliftingWomensSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens49Kg:
                    handler.string_value("WeightliftingWomens49Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens55Kg:
                    handler.string_value("WeightliftingWomens55Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens59Kg:
                    handler.string_value("WeightliftingWomens59Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens64Kg:
                    handler.string_value("WeightliftingWomens64Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens76Kg:
                    handler.string_value("WeightliftingWomens76Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens87Kg:
                    handler.string_value("WeightliftingWomens87Kg");
                    break;
                case TypeValueKnownValues.Value_WeightliftingWomens87KgPlus:
                    handler.string_value("WeightliftingWomens87KgPlus");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightFlyweight:
                    handler.string_value("WrestlingMensGrecoRomanLightFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanFlyweight:
                    handler.string_value("WrestlingMensGrecoRomanFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanBantamweight:
                    handler.string_value("WrestlingMensGrecoRomanBantamweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanFeatherweight:
                    handler.string_value("WrestlingMensGrecoRomanFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightweight:
                    handler.string_value("WrestlingMensGrecoRomanLightweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanWelterweight:
                    handler.string_value("WrestlingMensGrecoRomanWelterweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanMiddleweight:
                    handler.string_value("WrestlingMensGrecoRomanMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanLightHeavyweight:
                    handler.string_value("WrestlingMensGrecoRomanLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanHeavyweight:
                    handler.string_value("WrestlingMensGrecoRomanHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRomanSuperHeavyweight:
                    handler.string_value("WrestlingMensGrecoRomanSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman60Kg:
                    handler.string_value("WrestlingMensGrecoRoman60Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman67Kg:
                    handler.string_value("WrestlingMensGrecoRoman67Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman77Kg:
                    handler.string_value("WrestlingMensGrecoRoman77Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman87Kg:
                    handler.string_value("WrestlingMensGrecoRoman87Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman97Kg:
                    handler.string_value("WrestlingMensGrecoRoman97Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensGrecoRoman130Kg:
                    handler.string_value("WrestlingMensGrecoRoman130Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleLightFlyweight:
                    handler.string_value("WrestlingMensFreestyleLightFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleFlyweight:
                    handler.string_value("WrestlingMensFreestyleFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleBantamweight:
                    handler.string_value("WrestlingMensFreestyleBantamweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleFeatherweight:
                    handler.string_value("WrestlingMensFreestyleFeatherweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleLightweight:
                    handler.string_value("WrestlingMensFreestyleLightweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleWelterweight:
                    handler.string_value("WrestlingMensFreestyleWelterweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleMiddleweight:
                    handler.string_value("WrestlingMensFreestyleMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleLightHeavyweight:
                    handler.string_value("WrestlingMensFreestyleLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleHeavyweight:
                    handler.string_value("WrestlingMensFreestyleHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyleSuperHeavyweight:
                    handler.string_value("WrestlingMensFreestyleSuperHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle57Kg:
                    handler.string_value("WrestlingMensFreestyle57Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle65Kg:
                    handler.string_value("WrestlingMensFreestyle65Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle74Kg:
                    handler.string_value("WrestlingMensFreestyle74Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle86Kg:
                    handler.string_value("WrestlingMensFreestyle86Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle97Kg:
                    handler.string_value("WrestlingMensFreestyle97Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingMensFreestyle125Kg:
                    handler.string_value("WrestlingMensFreestyle125Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleFlyweight:
                    handler.string_value("WrestlingWomensFreestyleFlyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleBantamweight:
                    handler.string_value("WrestlingWomensFreestyleBantamweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleLightweight:
                    handler.string_value("WrestlingWomensFreestyleLightweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleMiddleweight:
                    handler.string_value("WrestlingWomensFreestyleMiddleweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleWelterweight:
                    handler.string_value("WrestlingWomensFreestyleWelterweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleLightHeavyweight:
                    handler.string_value("WrestlingWomensFreestyleLightHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyleHeavyweight:
                    handler.string_value("WrestlingWomensFreestyleHeavyweight");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle50Kg:
                    handler.string_value("WrestlingWomensFreestyle50Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle53Kg:
                    handler.string_value("WrestlingWomensFreestyle53Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle57Kg:
                    handler.string_value("WrestlingWomensFreestyle57Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle62Kg:
                    handler.string_value("WrestlingWomensFreestyle62Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle68Kg:
                    handler.string_value("WrestlingWomensFreestyle68Kg");
                    break;
                case TypeValueKnownValues.Value_WrestlingWomensFreestyle76Kg:
                    handler.string_value("WrestlingWomensFreestyle76Kg");
                    break;
                default:
                    Debug.Assert(false);
                    break;
              }
          }
        else
          {
                    handler.string_value(storeValue.string_value);
          }
      }

    public static SportsOlympicsEventJSON from_json(JSONValue json_value, bool ignore_extras, bool allow_incomplete, bool allow_unpolished)
      {
        SportsOlympicsEventJSON result;
          {
            HoldingGenerator generator = new HoldingGenerator("Type SportsOlympicsEvent", ignore_extras);
            generator.set_allow_incomplete(allow_incomplete);
            generator.set_allow_unpolished(allow_unpolished);
            if (allow_incomplete || allow_unpolished)
                json_value.write(generator);
            else
                json_value.write(generator);
            Debug.Assert(generator.have_value);
            result = generator.value;
          };
        return result;
      }
    public static SportsOlympicsEventJSON from_json(JSONValue json_value, bool ignore_extras, bool allow_incomplete)
  {
    return from_json(json_value, ignore_extras, allow_incomplete, false);
  }
    public static SportsOlympicsEventJSON from_json(JSONBase json_value, bool ignore_extras, bool allow_incomplete, bool allow_unpolished)
      {
        SportsOlympicsEventJSON result;
          {
            HoldingGenerator generator = new HoldingGenerator("Type SportsOlympicsEvent", ignore_extras);
            generator.set_allow_incomplete(allow_incomplete);
            generator.set_allow_unpolished(allow_unpolished);
            if (allow_incomplete || allow_unpolished)
                json_value.write_partial_as_json(generator);
            else
                json_value.write_as_json(generator);
            Debug.Assert(generator.have_value);
            result = generator.value;
          };
        return result;
      }
    public static SportsOlympicsEventJSON from_json(JSONBase json_value, bool ignore_extras, bool allow_incomplete)
  {
    return from_json(json_value, ignore_extras, allow_incomplete, false);
  }
    public static SportsOlympicsEventJSON from_text(string text, bool ignore_extras)
      {
        SportsOlympicsEventJSON result;
          {
            HoldingGenerator generator = new HoldingGenerator("Type SportsOlympicsEvent", ignore_extras);
            JSONParse.parse_json_value(text, "Text for SportsOlympicsEventJSON", generator);
            Debug.Assert(generator.have_value);
            result = generator.value;
          };
        return result;
      }
    public static SportsOlympicsEventJSON from_file(TextReader fp, string file_name, bool ignore_extras)
      {
        SportsOlympicsEventJSON result;
          {
            HoldingGenerator generator = new HoldingGenerator("Type SportsOlympicsEvent", ignore_extras);
            JSONParse.parse_json_value(fp, file_name, generator);
            Debug.Assert(generator.have_value);
            result = generator.value;
          };
        return result;
      }
    public abstract class FieldGeneratorValue : JSONStringGenerator
      {
        protected FieldGeneratorValue(string what)
          {
            set_what(what);
          }
        protected FieldGeneratorValue()
          {
          }
        protected override void handle_result(string result)
          {
            TypeValueKnownValues known = stringToValue(result);
            TypeValue new_value = new TypeValue();
            if (known == TypeValueKnownValues.Value__none)
              {
                new_value.in_known_list = false;
                new_value.string_value = result;
              }
            else
              {
                new_value.in_known_list = true;
                new_value.list_value = known;
              }
            handle_result(new_value);
          }
        protected abstract void handle_result(TypeValue result);
      };
    public class FieldHoldingGeneratorValue : FieldGeneratorValue
  {
    protected override void handle_result(TypeValue result)
      {
//@@@        Debug.Assert(!have_value);
        have_value = true;
        value = result;
      }

    public FieldHoldingGeneratorValue(String what)
      {
        have_value = false;
        base.set_what(what);
      }

    public override void reset()
      {
        have_value = false;
        base.reset();
      }

    public bool have_value;
    public TypeValue value;
  };
    public class FieldHoldingArrayGeneratorValue : JSONArrayGenerator
  {
    protected class ElementHandler : FieldGeneratorValue
      {
        private FieldHoldingArrayGeneratorValue top;

        protected override void handle_result(TypeValue result)
          {
            top.value.Add(result);
          }
        protected override string get_what()
          {
            return "element " + top.value.Count + " of " + top.get_what();
          }

        public ElementHandler(FieldHoldingArrayGeneratorValue init_top)
          {
            top = init_top;
          }
      };

    private ElementHandler element_handler;

    protected override JSONHandler start()
      {
        have_value = true;
        value.Clear();
        return element_handler;
      }
    protected override void finish()
      {
        Debug.Assert(have_value);
        handle_result(value);
        element_handler.reset();
      }
    protected virtual void handle_result(List<TypeValue> result)
      {
      }

    public FieldHoldingArrayGeneratorValue(string what)
      {
        element_handler = new ElementHandler(this);
        have_value = false;
        value = new List<TypeValue>();
        base.set_what(what);
      }
    public FieldHoldingArrayGeneratorValue()
      {
        element_handler = new ElementHandler(this);
        have_value = false;
        value = new List<TypeValue>();
      }

    public override void reset()
      {
        element_handler.reset();
        have_value = false;
        value.Clear();
        base.reset();
      }

    public bool have_value;
    public List<TypeValue> value;
  };
    public abstract class Generator : FieldGeneratorValue
      {
        protected override void handle_result(TypeValue new_value)
          {
            SportsOlympicsEventJSON result = new SportsOlympicsEventJSON();
            result.setValue(new_value);
            handle_result(result);
          }
        protected abstract void handle_result(SportsOlympicsEventJSON new_result);
        public Generator(bool ignore_extras) : base("Type SportsOlympicsEvent")
          {
          }
        public void set_allow_incomplete(bool new_allow_incomplete)
          {
          }
        public void set_allow_unpolished(bool new_allow_unpolished)
          {
          }
      };
    public class HoldingGenerator : Generator
      {
        protected override void handle_result(SportsOlympicsEventJSON  result)
          {
//@@@            Debug.Assert(!have_value);
            have_value = true;
            value = result;
          }

        public HoldingGenerator(String what, bool ignore_extras) : base(ignore_extras)
          {
            have_value = false;
            base.set_what(what);
          }

        public HoldingGenerator(String what) : base(false)
          {
            have_value = false;
            base.set_what(what);
          }

        public override void reset()
          {
            have_value = false;
            base.reset();
          }

        public bool have_value;
        public SportsOlympicsEventJSON value;
      };
    public class HoldingArrayGenerator : JSONArrayGenerator
  {
    protected class ElementHandler : Generator
      {
        private HoldingArrayGenerator top;

        protected override void handle_result(SportsOlympicsEventJSON  result)
          {
            top.value.Add(result);
          }
        protected override string get_what()
          {
            return "element " + top.value.Count + " of " + top.get_what();
          }

        public ElementHandler(HoldingArrayGenerator init_top, bool ignore_extras) : base(ignore_extras)
          {
            top = init_top;
          }
      };

    private ElementHandler element_handler;

    protected override JSONHandler start()
      {
        have_value = true;
        value.Clear();
        return element_handler;
      }
    protected override void finish()
      {
        Debug.Assert(have_value);
        handle_result(value);
        element_handler.reset();
      }
    protected virtual void handle_result(List<SportsOlympicsEventJSON> result)

      {
      }

    public HoldingArrayGenerator(string what, bool ignore_extras)
      {
        element_handler = new ElementHandler(this, ignore_extras);
        have_value = false;
        value = new List<SportsOlympicsEventJSON>();
        base.set_what(what);
      }
    public HoldingArrayGenerator(bool ignore_extras)
      {
        element_handler = new ElementHandler(this, ignore_extras);
        value = new List<SportsOlympicsEventJSON>();
        have_value = false;
      }

    public void set_allow_incomplete(bool new_allow_incomplete)
      {
        element_handler.set_allow_incomplete(new_allow_incomplete);
      }

    public void set_allow_unpolished(bool new_allow_unpolished)
      {
        element_handler.set_allow_unpolished(new_allow_unpolished);
      }

    public override void reset()
      {
        element_handler.reset();
        have_value = false;
        value.Clear();
        base.reset();
      }

    public bool have_value;
    public List<SportsOlympicsEventJSON> value;
  };
  };
